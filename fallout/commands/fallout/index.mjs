import { getScreen, clear, main,boot,login} from "../../util/screens.js";
import {parse, type } from "../../util/io.js";
import Game from './Game.mjs';
import pause from "../../util/pause.js";

// Fast config for the typer
const FAST = {
	wait: 15,
	initialWait: 100
};

const audio = new Audio('./sound/type.wav');

function pAud(text) {
  let index = 0;
  const interval = setInterval(() => {
    if (index < text.length) {
      audio.play();
      index++;
    } else {
      clearInterval(interval);
    }
  }, 2 ) }


// The main function, shows intro screen and the game screen
async function command() {
	clear();
	
	let win = await new Promise(resolve => {
		new Game({onQuit: resolve});
	});

	if (win) {
		await outro();
	} else {
		return await locked();
	}	
	
	return Promise.resolve();
}

export async function intro() {
	let intro = getScreen("intro");
   pAud("Welcome to ROBCO Industries (TM) Termlink Interface")
	await type("Welcome to ROBCO Industries (TM) Termlink Interface", FAST, intro);
pAud(">SET TERMINAL/INQUIRE")
	await type(">SET TERMINAL/INQUIRE", FAST, intro);
pAud("RIT-V300")

	await type("RIT-V300", FAST, intro);
pAud(">SET FILE/PROTECTION=OWNEESERTR:RWED ACCOUNTEESASDDEEWADES.F >SET HALT logout/MAINT")
pAud(">SET FILE/PROTECTION=OWNEESERTR:RWED ACCOUNTEESASDDEEWADES.F >SET HALT logout/MAINT")

	await type(
		[
			">SET FILE/PROTECTION=OWNER:RWED ACCOUNTS.F",
			">SET HALT logout/MAINT"
		],
		FAST,
		intro
	);
pAud("Initializing operational system of ROBCO Industries(TM) Kernel Drive MF Boot Agent v2.3.0 RETROS BIOS RBIOS-4.02.08.00 52EE5.E7.E8 Copyright 2222 ARCANGELO.net. Uppermem: 64 KB Root (5A8) Maintenance Mode")


	await type(
		[ 
		  " ",
			"Initializing ROBCO Industries(TM) MF Boot Agent v2.3.0",
			"RETROS BIOS",
			"RBIOS-4.02.08.00 52EE5.E7.E8",
			`Copyright ${new Date().getFullYear()} ARCANGELO.net.`,
			"Uppermem: 64 KB",
			"Root (5A8)",
			"Maintenance Mode"
		],
		FAST,
		intro
	);
pAud(">RUN DEBUG/ACCOUNTS.F")
	await type(">RUN DEBUG/ACCOUNTS.F", FAST, intro);

	intro.remove();
	
	await parse("fallout")
}
 async function locked() {
	let locked = getScreen("locked");

	await type(
		["Terminal locked", " ", "Please contact an administrator"],
		{ useContainer: false },
		locked
	);

	await pause(50000);
	locked.remove();

	return Promise.resolve();
}

// Outro shows screen with buttons to logout (calls game()) or exit
export async function outro() {
	let outro = getScreen("outro");
function generateDynamicLine(char = "‚îÅ") {
    // Get the width of the screen in pixels
    const screenWidth = window.innerWidth
    let adds = screenWidth*0.027
    if(screenWidth>520) { adds = screenWidth*0.045} 
    // Approximate width of the character in pixels (adjust based on your font size)
    const charWidth = 5; // Adjust if your font is different
    const charCount = Math.floor(screenWidth / charWidth)/3 + adds ;

    // Create a line with the specified character
    return char.repeat(charCount);
}
 




	await new Promise(async resolve => {
		
    function centerText(text) {
      const viewportWidth = window.innerWidth/24; // Set a fixed width for the console output (adjust as needed)
      
      
      const textWidth = text.length; // Approximate width based on character count
  
      // Calculate the number of spaces needed for centering


      
      let paddingSpaces = Math.max(0, Math.floor((viewportWidth - textWidth) / 2) + (viewportWidth/1.4));

      if(window.innerWidth < 420) {
        paddingSpaces = Math.max(0, Math.floor((viewportWidth - textWidth)-
        textWidth*2.4));
      }
      // Return the text with spaces before it
      return ' '.repeat(paddingSpaces) + text; // Add spaces before the text
  }
pAud("ROBCO INDUSTRIES UNIFIED OPERATING SYSTEM COPYRIGHT 2075 ARCANGELO   -SERVER 6-")
  
  await type(
      [
          centerText("ROBCO INDUSTRIES UNIFIED OPERATING SYSTEM"),
          centerText(`COPYRIGHT ${new Date().getFullYear()} ARCANGELO`),
          centerText("-SERVER 6-"),
          generateDynamicLine("‚îÅ")  // This will produce a full-width line
      ],
      FAST,
      outro
  );




let homeReturn, projectTitle,btnterminal, btnproject,termlink, ezymap,flowmvc, edgarbot, arcangelos,gamesTitle, halflife,breach, dino, rogue, rick, btngames, pong, laravel, scripts,exitgame,pokemon, btnhome, btnsobre, btngal, btncontact, btnlang, btnreturn, sitext,sobretexto,hometexto,contactinfo, bbnsite, bbnvid
function updateTexts() {
		  inicio.innerText = btnhome
		  sobre.innerText = btnsobre
		  galeria.innerText = btngal
		  projetos.innerText = btnproject
		  contato.innerText = btncontact
		  idioma.innerText= btnlang
		  games.innerText= btngames
		  terminal.innerText= btnterminal
		}
// Function to handle language change
function changeLanguage(language) {
  
  if (language === 'pt') {
  ezymap = "üîç Terminal interativo para Nmap com predefini√ß√µes de varredura, altern√¢ncia de flags, sele√ß√£o de scripts NSE e constru√ß√£o de comandos em tempo real."    
    btngames = "[JOGOS]"
    btnterminal = "[TERMINAL]"
    halflife = "Isso mesmo, o cl√°ssico Œªùñ∫ùóÖùñø ùóÖùóÇùñøùñæ, √≠cone da Era dourada dos games, agora no navegador. Todo o cr√©dito vai para o x8BitRain por essa obra ‚Äî eu s√≥ fiz uns ajustes e coloquei no meu portf√≥lio porque, convenhamos, essa lenda n√£o podia ficar de fora."

    gamesTitle = "ACESSANDO ARQUIVO: JOGOS... [RobCo TERMINAL] | STATUS: ONLINE"
    
    exitgame = "Inspirado naquele jogo RPG baseado em texto que Elliot Alderson joga em Mr. Robot (S4E11). Consegue achar a sa√≠da? Voc√™ √© um 1, ou s√≥ mais um 0?"
    
    pokemon = "Um jogo de batalha Pok√©mon baseado na web. Tem ataques, itens e tudo mais. N√£o √© muito polido, a responsividade √© um lixo, mas √© um caos divertido."
    
    breach = "Sim, aquele mini-jogo de hacking do Cyberpunk 2077 que todo mundo adora, o NETTECH Breach Protocol. Siga a matriz e hackeie como o V."
    
    rogue = "Um jogo rogue-like aleat√≥rio que fiz na web. Os controles s√£o meio bagun√ßados, mas, ei, d√° pra jogar."
    
    dino = "O famoso jogo do dinossauro do Chrome, mas... digamos que √© um pouco mais ‚Äòminimalista‚Äô."
    
    rick = "O melhor jogo do meu portf√≥lio. S√©rio, voc√™ vai adorar."
    
          laravel = "Este √© um projeto pessoal para testar o Laravel com CRUD, explorando a manipula√ß√£o de SQL atrav√©s do Eloquent, simulando um ambiente comercial e criando um painel de controle para gerenciar clientes e transa√ß√µes."

      pong = "Projeto r√°pido que criei em Python, fazendo um jogo de pingue-pongue jog√°vel por um ou dois jogadores, usando pygame, algumas mec√¢nicas e uma IA (um monte de ifelses)."

      scripts = "Alguns scripts bagun√ßados que escrevi, usados principalmente para m√°quinas de Capture the Flag, alguns webshells, scripts de utilidade e automa√ß√£o em asp, php, python, o que voc√™ quiser."

          contactinfo = "[TERMLINK PROTOCOL]\n> RIT-V300. DADOS DE USUARIO\nLENDO INFORMACOES_DE_CONTACTO\n\n"
      termlink = "Robco.TERMLINK √© um script em Python que emula o sistema de autentica√ß√£o de terminal da s√©rie de jogos Fallout. Al√©m de trazer o clima de Fallout, ele inclui funcionalidades integradas e personaliz√°veis em sua console RobCo, como ativar servi√ßos do sistema, ler journalctl, um editor de texto e muito mais, tornando a inicializa√ß√£o do bash nost√°lgica e funcional."
        projectTitle = '>SET ROUTE/PATH=GET:ASC PROJETOS.F\n\n'
        flowmvc = 'FlowManager √© um painel financeiro desenvolvido em Laravel usando a estrutura MVC, projetado para ajudar os usu√°rios a gerenciar receitas e despesas, gerando relat√≥rios mensais e anuais em PDF. Ele fornece uma vis√£o organizada das atividades financeiras, sendo uma ferramenta √∫til para rastreamento e relat√≥rio financeiro.'
        edgarbot = "ùîàùî°ùî§ùîûùîØ Íì•ùî©ùî©ùîûùî´ ùîÖùî¨ùî± √© um bot multi-dispositivo para WhatsApp, inspirado em um dos meus escritores favoritos, Edgar A. Poe. Ele vem com uma variedade de ferramentas para utilit√°rios, desenvolvimento, hacking, gerenciamento de grupos, divers√£o, jogos e baixadores, projetado para ser meu assistente IA pessoal no WhatsApp. N√£o gosto de depender do ChatGPT; prefiro criar meu pr√≥prio modelo para atender √†s minhas necessidades."
        btnhome = '[INICIO]';
      btnsobre = '[SOBRE]';
      btngal = '[GALERIA]';
      btncontact = '[CONTATO]';
      btnlang = '[Language/Idioma/Langue/–Ø–∑—ã–∫/Ë®ÄË™û]'
      btnreturn = '[VOLTAR]';
      sitext = 'WEBSITES QUE FIZ';
      bbnsite = '[WEBSITES]';
      bbnvid = "[GALERIA]";
      btnproject = "[PROJETOS]";
      sobretexto = [
        `\n>// Fala a√≠! Eu sou o Henry ‚Äì desenvolvedor, gamer e criador digital, apaixonado por tecnologia que desafia limites (e minha paci√™ncia, √†s vezes).`,
        `Escrevo c√≥digos que *geralmente* funcionam, crio interfaces criativas, e desenvolvo apps pra deixar a web mais interessante. Meus pronomes? TCP/IP.`,
        `Tenho experi√™ncia com JavaScript, Vue, React, Python, PHP, Node, e v√°rias outras ferramentas que uso pra tirar ideias do papel. Front-end, back-end, banco de dados ‚Äì se envolve c√≥digo, eu t√¥ dentro.`,
        `Atualmente, t√¥ mergulhando em Ciberseguran√ßa e Arquitetura de Redes. Ent√£o, se voc√™ busca algu√©m que construa, quebre e (√°s vezes) solucione o problema, sou o cara certo (?).`
      ];
      hometexto = "> ROBCO INDUSTRIES (TM) TERMLINK PROTOCOL\n> ACCESSING LOGS #27...\n\n--- LOG ENTRY INITIALIZED ---\n\nBem-vindo ao meu portf√≥lio, inspirado no ic√¥nico Termlink da ROBCO Industries da s√©rie Fallout.\n\nSou  Henry, desenvolvedor backend movido por uma paix√£o por software, redes e tudo relacionado √† TI. Aqui, voc√™ encontrar√° uma amostra dos meus projetos e meus links de contacto :) .\n\n> SYSTEM STATUS: ALL SYSTEMS NORMAL\n\n";
      homeReturn = "--- PRESSIONE PARA CONTINUAR ---" 
      arcangelos = "ArcangelOS Distro √© meu portf√≥lio pessoal, projetado para simular um ambiente KDE Linux, assim como este terminal do Fallout. Ele apresenta ferramentas para download, fotos, alguns dos meus projetos e de mim mesmo. Talvez um dia eu crie minha pr√≥pria distro."
} 
else if (language === 'es') {
      btnterminal="[TERMINAL]"
      ezymap = "üîç Terminal interactivo para Nmap con ajustes preestablecidos de escaneo, alternancia de flags, selecci√≥n de scripts NSE y construcci√≥n de comandos en tiempo real."  
  btngames = "[JUEGOS]"
  halflife = "As√≠ es, el cl√°sico Œªùñ∫ùóÖùñø ùóÖùóÇùñøùñæ, el amanecer dorado de los videojuegos, ahora en la web. Todo el cr√©dito es para x8BitRain por hacerlo jugable en l√≠nea ‚Äî yo solo ajust√© algunas cosas y lo sum√© a mi portafolio porque, sinceramente, esta joya ten√≠a que estar."

  gamesTitle = "ACCESANDO ARCHIVO: JUEGOS... [RobCo TERMINAL] | ESTADO: ONLINE"
  
  exitgame = "Inspirado en ese juego RPG basado en texto que juega Elliot Alderson en Mr. Robot (S4E11). ¬øPuedes encontrar la salida? ¬øEres un 1 o solo otro 0?"
  
  pokemon = "Un juego de batalla Pok√©mon basado en la web. Tiene ataques, objetos y todo eso. No est√° muy pulido, la respuesta es un desastre, pero es un caos divertido."
  
  breach = "S√≠, ese mini-juego de hacking de Cyberpunk 2077 que a todos les encanta, el NETTECH Breach Protocol. Sigue la matriz y hackea como V."
  
  rogue = "Un juego rogue-like aleatorio que hice en la web. Los controles est√°n algo desordenados, pero bueno, es jugable."
  
  dino = "El famoso juego del dinosaurio de Chrome, pero... digamos que es un poco m√°s ‚Äòminimalista‚Äô."
  
  rick = "El mejor juego de mi portafolio. En serio, te va a encantar."
  
        laravel = "Este es un proyecto personal que hice para probar Laravel con CRUD, jugando con SQL a trav√©s de Eloquent, simulando un entorno comercial y creando un panel para gestionar clientes y transacciones."

    pong = "Un proyecto r√°pido que hice en Python, un juego de ping-pong para jugar solo o con alguien m√°s, usando pygame, algunas mec√°nicas chidas y una IA (bastante loca, pero funciona)."

    scripts = "Bueno, estos son unos scripts desordenados que escrib√≠, m√°s que nada para m√°quinas Capture the Flag y ciberseguridad, algunos c√≥digos √∫tiles y automatizaci√≥n en asp, php, python, bash, lo que sea."

        termlink = "Robco.TERMLINK es un script en Python que emula el sistema de autenticaci√≥n de terminal de la serie de juegos Fallout. No solo aporta la atm√≥sfera de Fallout, sino que tambi√©n incluye funciones integradas y personalizables en su consola RobCo, como activar servicios del sistema, leer journalctl, un editor de texto, y mucho m√°s, haciendo que la inicializaci√≥n de tu bash sea tanto nost√°lgica como funcional."
    contactinfo = "[TERMLINK PROTOCOL]\n> RIT-V300. DATOS DE USUARIO\nLEYENDO INFORMACI√ìN_DE_CONTACTO\n\n"
    flowmvc = 'FlowManager es un panel financiero desarrollado en Laravel utilizando la estructura MVC, dise√±ado para ayudar a los usuarios a gestionar ingresos y gastos, generando informes mensuales y anuales en formato PDF. Ofrece una visi√≥n organizada de las actividades financieras, convirti√©ndose en una herramienta √∫til para el seguimiento y reporte financiero.'
        projectTitle = '>SET ROUTE/PATH=GET:ASC PROYECTOS.F\n\n'
        edgarbot = "ùîàùî°ùî§ùîûùîØ Íì•ùî©ùî©ùîûùî´ ùîÖùî¨ùî± es un bot multi-dispositivo de WhatsApp, inspirado en uno de mis escritores favoritos, Edgar A. Poe. Viene con una variedad de herramientas para utilidades, desarrollo, hacking, gesti√≥n de grupos, diversi√≥n, juegos y descargadores, dise√±ado para ser mi asistente IA personal en WhatsApp. No me gusta depender de ChatGPT; prefiero crear mi propio modelo para adaptarlo a mis necesidades."
        btnhome = '[INICIO]';
    btnsobre = '[ACERCA DE]';
    btngal = '[GALER√çA]';
    btncontact = '[CONTACTO]';
    btnlang = '[Language/Idioma/Langue/–Ø–∑—ã–∫/Ë®ÄË™û]'
    btnreturn = '[VOLVER]';
    sitext = 'SITIOS WEB QUE HE CREADO';
    bbnsite = '[SITIOS WEB]';
    btnproject = "[PROYECTOS]";

    bbnvid = "[GALERIA]"
    arcangelos = "ArcangelOS Distro es mi portafolio personal, dise√±ado para simular un entorno KDE Linux, similar a este terminal de Fallout. Presenta herramientas para descargar, fotos y muestras de mis proyectos y de m√≠ mismo. Tal vez alg√∫n d√≠a cree mi propia distro."
    sobretexto = [
      `\n>// ¬°Hola! Soy Henry ‚Äì desarrollador, gamer y creador digital con una pasi√≥n por la tecnolog√≠a que desaf√≠a l√≠mites (y a veces mi paciencia).`,
      `Hago c√≥digo que *casi siempre* funciona, dise√±o interfaces limpias, y creo apps para hacer la web un poco m√°s interesante. ¬øMis pronombres? TCP/IP.`,
      `Me manejo bien con JavaScript, Vue, React, Python, PHP, Node, y otras herramientas que uso para llevar ideas a la realidad. Frontend, backend, bases de datos ‚Äì si lleva c√≥digo, ah√≠ estoy.`,
      `Actualmente, me estoy adentrando en Ciberseguridad Ofensiva e Ingenier√≠a de Software, aprendiendo a hackear (√©ticamente, por supuesto) y a construir algunas herramientas √∫tiles. As√≠ que, si buscas a alguien que pueda construir, romper y (generalmente) arreglar cosas, soy yosoy.`
    ];
    hometexto = "> ROBCO INDUSTRIES (TM) TERMLINK PROTOCOL\n> ACCESSING LOGS #27...\n\n--- LOG ENTRY INITIALIZED ---\n\nBienvenido a mi portafolio, inspirado en el ic√≥nico Termlink de ROBCO Industries de la serie Fallout.\n\nSoy Henry, un desarrollador backend impulsado por una gran pasi√≥n por el software, las redes y todo lo relacionado con la inform√°tica. Aqu√≠ encontrar√°s una muestra de mi trabajo, cada proyecto un paso en mi viaje para construir e innovar en el mundo de la tecnolog√≠a.\n\n> SYSTEM STATUS: ALL SYSTEMS NORMAL\n\n";
    homeReturn = "--- PRESIONE PARA CONTINUAR ---"
} 

  else if (language === 'ja') {
   ezymap = "üîç NmapÁî®„ÅÆ„Ç§„É≥„Çø„É©„ÇØ„ÉÜ„Ç£„Éñ„Å™„Çø„Éº„Éü„Éä„É´„ÄÇ„Çπ„Ç≠„É£„É≥„Éó„É™„Çª„ÉÉ„Éà„ÄÅ„Éï„É©„Ç∞Âàá„ÇäÊõø„Åà„ÄÅNSE„Çπ„ÇØ„É™„Éó„ÉàÈÅ∏Êäû„ÄÅ„É™„Ç¢„É´„Çø„Ç§„É†„ÅÆ„Ç≥„Éû„É≥„ÉâÊßãÁØâ„ÅåÂèØËÉΩ„ÄÇ"  
    btngames = "[„Ç≤„Éº„É†]"
    halflife = "„Åù„ÅÜ„ÄÅ„ÅÇ„ÅÆÂêç‰Ωú Œªùñ∫ùóÖùñø ùóÖùóÇùñøùñæ„ÄÇ„Ç≤„Éº„É†ÈªÑÈáëÊúü„ÅÆ‰ºùË™¨„Åå„ÄÅ„Å§„ÅÑ„Å´Web„ÅßÈÅä„Åπ„Çã„Çà„ÅÜ„Å´„ÄÇÁßªÊ§ç„Åó„Åü„ÅÆ„ÅØx8BitRain„ÄÅÂÉï„ÅØÂ∞ë„Åó„Å†„ÅëÊâã„ÇíÂä†„Åà„Å¶„Éù„Éº„Éà„Éï„Ç©„É™„Ç™„Å´Ëºâ„Åõ„Åü„Å†„Åë„ÄÇ„Åì„ÅÆÂêç‰Ωú„ÅØÂ§ñ„Åõ„Å™„ÅÑ„Åã„Çâ„Å≠„ÄÇ"

    gamesTitle = "„Éï„Ç°„Ç§„É´„Ç¢„ÇØ„Çª„Çπ‰∏≠: „Ç≤„Éº„É†... [RobCo TERMINAL] | „Çπ„ÉÜ„Éº„Çø„Çπ: „Ç™„É≥„É©„Ç§„É≥"
    
    exitgame = "Mr. RobotÔºàS4E11Ôºâ„Åß„Ç®„É™„Ç™„ÉÉ„Éà„Éª„Ç™„Éº„É´„ÉÄ„Éº„ÇΩ„É≥„Åå„Éó„É¨„Ç§„Åó„Å¶„ÅÑ„Çã„ÉÜ„Ç≠„Çπ„Éà„Éô„Éº„Çπ„ÅÆRPG„Ç≤„Éº„É†„Å´„Ç§„É≥„Çπ„Éë„Ç§„Ç¢„Åï„Çå„Åü„ÇÇ„ÅÆ„ÄÇËÑ±Âá∫ÊñπÊ≥ï„ÇíË¶ã„Å§„Åë„Çâ„Çå„Çã„ÅãÔºü„ÅÇ„Å™„Åü„ÅØ1„Å™„ÅÆ„Åã„ÄÅ„Åù„Çå„Å®„ÇÇ„Åü„Å†„ÅÆ0„Å™„ÅÆ„ÅãÔºü"
    
    pokemon = "Web„Éô„Éº„Çπ„ÅÆ„Éù„Ç±„É¢„É≥„Éê„Éà„É´„Ç≤„Éº„É†„ÄÇÊîªÊíÉ„ÄÅ„Ç¢„Ç§„ÉÜ„É†„ÄÅ„Åù„ÅÆ‰ªñËâ≤„ÄÖ„ÄÇ„ÅÇ„Åæ„ÇäÊ¥óÁ∑¥„Åï„Çå„Å¶„ÅÑ„Å™„ÅÑ„Åó„ÄÅ„É¨„Çπ„Éù„É≥„Çπ„ÅØ„Å≤„Å©„ÅÑ„Åë„Å©„ÄÅÊ•Ω„Åó„ÅÑÊ∑∑‰π±„Å†„Çà„ÄÇ"
    
    breach = "„ÅÇ„ÅÆCyberpunk 2077„ÅÆ„Éè„ÉÉ„Ç≠„É≥„Ç∞„Éü„Éã„Ç≤„Éº„É†„ÄÅ„Åø„Çì„Å™„ÅåÂ§ßÂ•Ω„Åç„Å™NETTECH Breach Protocol„Å†„Çà„ÄÇ„Éû„Éà„É™„ÉÉ„ÇØ„Çπ„ÇíËøΩ„Å£„Å¶„ÄÅV„Åø„Åü„ÅÑ„Å´„Éè„ÉÉ„ÇØ„Åó„Çà„ÅÜ„ÄÇ"
    
    rogue = "„Ç¶„Çß„Éñ„Åß‰Ωú„Å£„Åü„É©„É≥„ÉÄ„É†„Å™„É≠„Éº„Ç∞„É©„Ç§„ÇØ„Ç≤„Éº„É†„ÄÇÊìç‰Ωú„ÅØ„Å°„Çá„Å£„Å®„Éê„Çø„Éê„Çø„Åó„Å¶„Çã„Åë„Å©„ÄÅ„Åæ„ÅÅÈÅä„Åπ„Çã„Çà„ÄÇ"
    
    dino = "ÊúâÂêç„Å™Chrome„ÅÆÊÅêÁ´ú„Ç≤„Éº„É†„Å†„Åë„Å©... „Å°„Çá„Å£„Å®‚Äò„Éü„Éã„Éû„É´‚Äô„Å†„Å≠„ÄÇ"
     btnterminal ="[„Ç≥„Éû„É≥„Éâ]"
    rick = "„Éù„Éº„Éà„Éï„Ç©„É™„Ç™„ÅÆ‰∏≠„Åß‰∏ÄÁï™„ÅÆ„Ç≤„Éº„É†„Å†„Çà„ÄÇÁµ∂ÂØæÊ∞ó„Å´ÂÖ•„Çã„Å®ÊÄù„ÅÜ„ÄÇ"
    
      laravel = "„Åì„Çå„ÅØLaravel„ÅßCRUD„ÇíË©¶„Åô„Åü„ÇÅ„Å´‰Ωú„Å£„ÅüÂÄã‰∫∫ÁöÑ„Å™„Éó„É≠„Ç∏„Çß„ÇØ„Éà„Åß„ÄÅEloquent„Çí‰Ωø„Å£„Å¶SQL„Çí„ÅÑ„Åò„Çä„Å™„Åå„Çâ„ÄÅÂïÜÊ•≠Áí∞Â¢É„Çí„Ç∑„Éü„É•„É¨„Éº„Éà„Åó„Å¶„ÄÅ„ÇØ„É©„Ç§„Ç¢„É≥„Éà„ÇÑÂèñÂºï„ÇíÁÆ°ÁêÜ„Åô„Çã„Åü„ÇÅ„ÅÆ„Éë„Éç„É´„Çí‰Ωú„Å£„ÅüÊÑü„Åò„ÄÇ"

      pong = "Python„Åß‰Ωú„Å£„ÅüÁ∞°Âçò„Å™„Éó„É≠„Ç∏„Çß„ÇØ„Éà„Åß„ÄÅ1‰∫∫„Åß„ÇÇ2‰∫∫„Åß„ÇÇÈÅä„Åπ„Çã„Éî„É≥„Éù„É≥„Ç≤„Éº„É†„Çí‰ΩúÊàê„ÄÇpygame‰Ωø„Å£„Å¶„ÄÅ„ÅÑ„Åè„Å§„Åã„ÅÆ„É°„Ç´„Éã„ÇØ„Çπ„Å®AIÔºà„Å°„Çá„Å£„Å®„Ç´„Ç™„Çπ„Å†„Åë„Å©„ÄÅÂãï„ÅèÔºâ„ÇÇÊê≠Ëºâ„ÄÇ"

      scripts = "„Åì„Çå„ÄÅ„Å°„Çá„Å£„Å®„Åî„Å°„ÇÉ„Åî„Å°„ÇÉ„Åó„Åü„Çπ„ÇØ„É™„Éó„Éà„Å†„Åë„Å©„ÄÅ‰∏ª„Å´Capture the Flag„ÅÆ„Éû„Ç∑„É≥„ÇÑ„Çµ„Ç§„Éê„Éº„Çª„Ç≠„É•„É™„ÉÜ„Ç£Áî®„Å´Êõ∏„ÅÑ„Åü„ÇÑ„Å§„ÄÇÂΩπÁ´ã„Å§„Ç≥„Éº„Éâ„Å®Ëá™ÂãïÂåñ„ÅÆ„Çπ„ÇØ„É™„Éó„Éà„Çíasp„ÄÅphp„ÄÅpython„ÄÅbash„ÅßÊõ∏„ÅÑ„Å¶„ÇãÊÑü„Åò„ÄÅ„Å™„Çì„Åß„ÇÇ„ÅÇ„Çä„ÄÇ"

          // „Éá„Éï„Ç©„É´„ÉàË®ÄË™ûÔºàËã±Ë™ûÔºâ
      flowmvc = "FlowManager„ÅØ„ÄÅLaravel„Çí‰ΩøÁî®„Åó„Å¶MVCÊßãÈÄ†„ÅßÈñãÁô∫„Åï„Çå„ÅüË≤°Âãô„ÉÄ„ÉÉ„Ç∑„É•„Éú„Éº„Éâ„Åß„ÄÅ„É¶„Éº„Ç∂„Éº„ÅåÂèéÂÖ•„Å®ÊîØÂá∫„ÇíÁÆ°ÁêÜ„Åó„ÄÅÊúàÊ¨°„Åä„Çà„Å≥Âπ¥Ê¨°„ÅÆPDF„É¨„Éù„Éº„Éà„ÇíÁîüÊàê„Åß„Åç„Çã„Çà„ÅÜ„Å´Ë®≠Ë®à„Åï„Çå„Å¶„ÅÑ„Åæ„Åô„ÄÇ„Åì„Çå„ÅØ„ÄÅË≤°ÂãôÊ¥ªÂãï„ÅÆÊï¥ÁêÜ„Åï„Çå„ÅüÊ¶ÇË¶Å„ÇíÊèê‰æõ„Åó„ÄÅË≤°Âãô„ÅÆËøΩË∑°„Å®Â†±Âëä„Å´ÂΩπÁ´ã„Å§„ÉÑ„Éº„É´„Åß„Åô„ÄÇ";
      projectTitle = '>SET ROUTE/PATH=GET:ASC PROJECTS.F\n\n';
      edgarbot = "ùîàùî°ùî§ùîûùîØ Íì•ùî©ùî©ùîûùî´ ùîÖùî¨ùî±„ÅØ„ÄÅÁßÅ„ÅÆÂ•Ω„Åç„Å™‰ΩúÂÆ∂„Ç®„Éâ„Ç¨„Éº„Éª„Ç¢„É©„É≥„Éª„Éù„Éº„Å´„Ç§„É≥„Çπ„Éë„Ç§„Ç¢„Åï„Çå„ÅüWhatsApp„ÅÆ„Éû„É´„ÉÅ„Éá„Éê„Ç§„Çπ„Éú„ÉÉ„Éà„Åß„Åô„ÄÇ„É¶„Éº„ÉÜ„Ç£„É™„ÉÜ„Ç£„ÄÅÈñãÁô∫„ÄÅ„Éè„ÉÉ„Ç≠„É≥„Ç∞„ÄÅ„Ç∞„É´„Éº„ÉóÁÆ°ÁêÜ„ÄÅÊ•Ω„Åó„Åï„ÄÅ„Ç≤„Éº„É†„ÄÅ„ÉÄ„Ç¶„É≥„É≠„Éº„ÉÄ„Éº„ÅÆ„Åï„Åæ„Åñ„Åæ„Å™„ÉÑ„Éº„É´„ÅåÂÇô„Çè„Å£„Å¶„Åä„Çä„ÄÅWhatsApp„ÅßÁßÅ„ÅÆ„Éë„Éº„ÇΩ„Éä„É´AI„Ç¢„Ç∑„Çπ„Çø„É≥„Éà„Å®„Åó„Å¶Ë®≠Ë®à„Åï„Çå„Å¶„ÅÑ„Åæ„Åô„ÄÇÁßÅ„ÅØChatGPT„Å´È†º„Çã„ÅÆ„ÅåÂ•Ω„Åç„Åß„ÅØ„ÅÇ„Çä„Åæ„Åõ„Çì„ÄÇËá™ÂàÜ„ÅÆ„Éã„Éº„Ç∫„Å´Âêà„Çè„Åõ„Å¶Ëá™ÂàÜ„ÅÆ„É¢„Éá„É´„Çí‰Ωú„Çã„Åì„Å®„ÇíÂ•Ω„Åø„Åæ„Åô„ÄÇ";
      arcangelos = "ArcangelOS Distro„ÅØ„ÄÅKDE LinuxÁí∞Â¢É„ÇíÊ®°ÂÄ£„Åô„Çã„Çà„ÅÜ„Å´Ë®≠Ë®à„Åï„Çå„ÅüÁßÅ„ÅÆÂÄã‰∫∫ÁöÑ„Å™„Éù„Éº„Éà„Éï„Ç©„É™„Ç™„Åß„Åô„ÄÇ„Åì„ÅÆFallout„Çø„Éº„Éü„Éä„É´„ÅÆ„Çà„ÅÜ„Å´„ÄÅ„ÉÄ„Ç¶„É≥„É≠„Éº„ÉâÁî®„ÅÆ„ÉÑ„Éº„É´„ÄÅÂÜôÁúü„ÄÅÁßÅ„ÅÆ„Éó„É≠„Ç∏„Çß„ÇØ„Éà„Å®Ëá™ÂàÜËá™Ë∫´„ÅÆÁ¥π‰ªã„ÅåÂê´„Åæ„Çå„Å¶„ÅÑ„Åæ„Åô„ÄÇ„ÅÑ„Å§„ÅãËá™ÂàÜ„ÅÆ„Éá„Ç£„Çπ„Éà„É™„Éì„É•„Éº„Ç∑„Éß„É≥„Çí‰Ωú„Çã„Åã„ÇÇ„Åó„Çå„Åæ„Åõ„Çì„ÄÇ";
      termlink = "Robco.TERMLINK„ÅØ„ÄÅFallout„Ç≤„Éº„É†„Ç∑„É™„Éº„Ç∫„ÅÆ„Çø„Éº„Éü„Éä„É´Ë™çË®º„Ç∑„Çπ„ÉÜ„É†„Çí„Ç®„Éü„É•„É¨„Éº„Éà„Åô„ÇãPython„Çπ„ÇØ„É™„Éó„Éà„Åß„Åô„ÄÇFallout„ÅÆÈõ∞Âõ≤Ê∞ó„ÇíÊèê‰æõ„Åô„Çã„Å†„Åë„Åß„Å™„Åè„ÄÅRobCo„Ç≥„É≥„ÇΩ„Éº„É´„Å´ÁµÑ„ÅøËæº„Åæ„Çå„Åü„Ç´„Çπ„Çø„Éû„Ç§„Ç∫ÂèØËÉΩ„Å™Ê©üËÉΩÔºà„Ç∑„Çπ„ÉÜ„É†„Çµ„Éº„Éì„Çπ„ÅÆËµ∑Âãï„ÄÅjournalctl„ÅÆË™≠„ÅøÂèñ„Çä„ÄÅ„ÉÜ„Ç≠„Çπ„Éà„Ç®„Éá„Ç£„Çø„Éº„Å™„Å©Ôºâ„Åå„ÅÇ„Çä„ÄÅBash„ÅÆÂàùÊúüÂåñ„ÇíÊáê„Åã„Åó„Åè„Åã„Å§Ê©üËÉΩÁöÑ„Å´„Åó„Åæ„Åô„ÄÇ";
      contactinfo = "[TERMLINK PROTOCOL]\n> RIT-V300. USER DATA\nREADING CONTACT_INFORMATION\n\n";
      btnhome = '[„Éõ„Éº„É†]';
      btnsobre = '[„Å´„Å§„ÅÑ„Å¶]';
      btngal = '[„ÇÆ„É£„É©„É™„Éº]';
      btncontact = '[ÈÄ£Áµ°ÂÖà]';
      btnlang = '[Language/Idioma/Langue/–Ø–∑—ã–∫/Ë®ÄË™û]'
      btnreturn = '[Êàª„Çã]';
      sitext = 'ÁßÅ„Åå‰ΩúÊàê„Åó„Åü„Ç¶„Çß„Éñ„Çµ„Ç§„Éà';
      btnproject = "[„Éó„É≠„Ç∏„Çß„ÇØ„Éà]";
      bbnsite = '[„Ç¶„Çß„Éñ„Çµ„Ç§„Éà]';
      bbnvid = "[„ÇÆ„É£„É©„É™„Éº]";
      sobretexto = [
        `\n>// „Åì„Çì„Å´„Å°„ÅØÔºÅÁßÅ„ÅØ„Éò„É≥„É™„Éº„Åß„Åô ‚Äî ÈñãÁô∫ËÄÖ„ÄÅ„Ç≤„Éº„Éû„Éº„ÄÅ„Éá„Ç∏„Çø„É´„ÇØ„É™„Ç®„Ç§„Çø„Éº„Åß„ÄÅÂ¢ÉÁïå„ÇíÊäº„ÅóÂ∫É„Åí„ÇãÊäÄË°ìÔºàÊôÇ„Å´„ÅØÁßÅ„ÅÆÂøçËÄêÂäõ„ÇÇÔºâ„Å´ÊÉÖÁÜ±„ÇíÊåÅ„Å£„Å¶„ÅÑ„Åæ„Åô„ÄÇ`,
        `ÁßÅ„ÅØ„ÄÅ*„Åª„Åº*Âãï‰Ωú„Åô„Çã„Ç≥„Éº„Éâ„Çí‰Ωú„Çä„ÄÅ„ÇØ„É™„Ç®„Ç§„ÉÜ„Ç£„Éñ„ÅßÂÆåÂÖ®„Å´UX/UI„Ç¨„Ç§„Éâ„Å´Ê≤ø„Å£„Åü„Ç§„É≥„Çø„Éº„Éï„Çß„Éº„ÇπÔºà„Åæ„Å£„Åü„Åè„Åù„ÅÜ„Åß„ÅØ„Å™„ÅÑÔºâ„Çí„Éá„Ç∂„Ç§„É≥„Åó„ÄÅ„Ç¶„Çß„Éñ„ÇíÂ∞ë„Åó„ÇØ„Éº„É´„Å´„Åô„Çã„Åì„Å®„ÇíÁõÆÊåá„Åó„Å¶„Ç¢„Éó„É™„ÇíÊßãÁØâ„Åó„Å¶„ÅÑ„Åæ„Åô„ÄÇÁßÅ„ÅÆ‰ª£ÂêçË©û„ÅØÔºüTCP/IP„ÄÇ`,
        `JavaScript„ÄÅVue„ÄÅReact„ÄÅPython„ÄÅPHP„ÄÅNode„Å™„Å©„ÅÆÊäÄË°ì„Å´Á≤æÈÄö„Åó„Å¶„Åä„Çä„ÄÅ„Ç¢„Ç§„Éá„Ç¢„ÇíÂÆüÁèæ„Åô„Çã„Åü„ÇÅ„ÅÆ„ÉÑ„Éº„É´„Çí‰Ωø„ÅÑ„Åì„Å™„Åó„Å¶„ÅÑ„Åæ„Åô„ÄÇ„Éï„É≠„É≥„Éà„Ç®„É≥„Éâ„ÄÅ„Éê„ÉÉ„ÇØ„Ç®„É≥„Éâ„ÄÅ„Éá„Éº„Çø„Éô„Éº„Çπ ‚Äî ÂêçÂâç„ÇíÊåô„Åí„Çå„Å∞„ÄÅ„Åä„Åù„Çâ„Åè„Åù„Çå„Å´Ëß¶„Çå„Å¶„ÅÑ„Çã„Åß„Åó„Çá„ÅÜ„ÄÇ`,
        `‰ªä„ÅØ„ÄÅ„Ç™„Éï„Çß„É≥„Ç∑„Éñ„Çµ„Ç§„Éê„Éº„Çª„Ç≠„É•„É™„ÉÜ„Ç£„Å®„ÇΩ„Éï„Éà„Ç¶„Çß„Ç¢„Ç®„É≥„Ç∏„Éã„Ç¢„É™„É≥„Ç∞„Å´Âèñ„ÇäÁµÑ„Çì„Åß„Åä„Çä„ÄÅ„Éè„ÉÉ„Ç≠„É≥„Ç∞Ôºà*ÂÄ´ÁêÜÁöÑ„Å´*„ÇÇ„Å°„Çç„ÇìÔºâ„ÇíÂ≠¶„Å≥„ÄÅ„ÅÑ„Åè„Å§„Åã„ÅÆ‰æøÂà©„Å™„ÉÑ„Éº„É´„Çí‰Ωú„Å£„Å¶„ÅÑ„Åæ„Åô„ÄÇ„Åß„Åô„ÅÆ„Åß„ÄÅ‰Ωï„Åã„Çí‰Ωú„Çä„ÄÅÂ£ä„Åó„ÄÅÔºàÈÄöÂ∏∏„ÅØÔºâ‰øÆÊ≠£„Åô„Çã„Åì„Å®„Åå„Åß„Åç„Çã‰∫∫„ÇíÊé¢„Åó„Å¶„ÅÑ„Çã„Å™„Çâ„ÄÅÁßÅ„ÅØ„Åù„ÅÆ‰∫∫„Åß„Åô„ÄÇ`
      ];
      // ÂøÖË¶Å„Å´Âøú„Åò„Å¶‰ªñ„ÅÆ„ÉÜ„Ç≠„Çπ„Éà„ÇíÊõ¥Êñ∞
      hometexto = "> ROBCO INDUSTRIES (TM) TERMLINK PROTOCOL\n> „É≠„Ç∞#27„Å´„Ç¢„ÇØ„Çª„Çπ‰∏≠...\n\n--- „É≠„Ç∞„Ç®„É≥„Éà„É™ÈñãÂßã ---\n\nFallout„Ç∑„É™„Éº„Ç∫„ÅÆË±°Âæ¥ÁöÑ„Å™ROBCO Industries Termlink„Åã„Çâ„Ç§„É≥„Çπ„Éë„Ç§„Ç¢„Åï„Çå„Åü„Éù„Éº„Éà„Éï„Ç©„É™„Ç™„Å∏„Çà„ÅÜ„Åì„Åù„ÄÇ\n\nÁßÅ„ÅØ„Éò„É≥„É™„Éº„ÄÅ„ÇΩ„Éï„Éà„Ç¶„Çß„Ç¢„ÄÅ„Éç„ÉÉ„Éà„ÉØ„Éº„ÇØ„ÄÅITÂÖ®Ëà¨„Å´ÊÉÖÁÜ±„ÇíÊ≥®„Åê„Éê„ÉÉ„ÇØ„Ç®„É≥„ÉâÈñãÁô∫ËÄÖ„Åß„Åô„ÄÇ„Åì„Åì„Åß„ÅØ„ÄÅÁßÅ„ÅÆ‰ªï‰∫ã„ÅÆÁ¥π‰ªã„Å®ÈÄ£Áµ°ÂÖà„ÇíË¶ã„Å§„Åë„Çã„Åì„Å®„Åå„Åß„Åç„Åæ„Åô„ÄÇ\n\n> „Ç∑„Çπ„ÉÜ„É†„Çπ„ÉÜ„Éº„Çø„Çπ: „Åô„Åπ„Å¶Ê≠£Â∏∏";
      homeReturn = "  --- Á∂öË°å„Åô„Çã„Å´„ÅØ„ÄÅ‰ªªÊÑè„ÅÆ„Ç≠„Éº„ÇíÊäº„Åó„Å¶„Åè„Å†„Åï„ÅÑ ---";

}
  else if (language === 'ru') {
    ezymap = "üîç –ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–π —Ç–µ—Ä–º–∏–Ω–∞–ª –¥–ª—è Nmap —Å –ø—Ä–µ–¥—É—Å—Ç–∞–Ω–æ–≤–∫–∞–º–∏ —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è, –ø–µ—Ä–µ–∫–ª—é—á–∞—Ç–µ–ª—è–º–∏ —Ñ–ª–∞–≥–æ–≤, –≤—ã–±–æ—Ä–æ–º —Å–∫—Ä–∏–ø—Ç–æ–≤ NSE –∏ –ø–æ—Å—Ç—Ä–æ–µ–Ω–∏–µ–º –∫–æ–º–∞–Ω–¥—ã –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏."  
    btngames = "[–ò–ì–†–´]"
    halflife = "–î–∞, –∏–º–µ–Ω–Ω–æ –æ–Ω ‚Äî –∫–ª–∞—Å—Å–∏–∫–∞ Œªùñ∫ùóÖùñø ùóÖùóÇùñøùñæ, –∑–æ–ª–æ—Ç–∞—è —ç—Ä–∞ –∏–≥—Ä, —Ç–µ–ø–µ—Ä—å –≤ –±—Ä–∞—É–∑–µ—Ä–µ. –í—Å–µ –∑–∞—Å–ª—É–≥–∏ —É x8BitRain –∑–∞ —ç—Ç–æ—Ç –ø–æ—Ä—Ç ‚Äî —è –ª–∏—à—å –Ω–µ–º–Ω–æ–≥–æ –¥–æ—Ä–∞–±–æ—Ç–∞–ª –∏ –¥–æ–±–∞–≤–∏–ª –≤ –ø–æ—Ä—Ç—Ñ–æ–ª–∏–æ, –ø–æ—Ç–æ–º—É —á—Ç–æ —Ç–∞–∫–∞—è –ª–µ–≥–µ–Ω–¥–∞ –Ω–µ –º–æ–≥–ª–∞ –æ—Å—Ç–∞—Ç—å—Å—è –≤ —Å—Ç–æ—Ä–æ–Ω–µ."

    gamesTitle = "–î–û–°–¢–£–ü –ö –§–ê–ô–õ–£: –ò–ì–†–´... [RobCo TERMINAL] | –°–¢–ê–¢–£–°: –û–ù–õ–ê–ô–ù"
    
    exitgame = "–í–¥–æ—Ö–Ω–æ–≤–ª–µ–Ω–æ —Ç–µ–º RPG, –≤ –∫–æ—Ç–æ—Ä–æ–µ –∏–≥—Ä–∞–µ—Ç –≠–ª–∏–æ—Ç –û–ª–¥–µ—Ä—Å–æ–Ω –≤ Mr. Robot (S4E11). –°–º–æ–∂–µ—à—å –Ω–∞–π—Ç–∏ –≤—ã—Ö–æ–¥? –¢—ã 1 –∏–ª–∏ –ø—Ä–æ—Å—Ç–æ –µ—â–µ –æ–¥–∏–Ω 0?"
    
    pokemon = "–í–µ–±-–∏–≥—Ä–∞ —Å –ø–æ–∫–µ–º–æ–Ω–∞–º–∏. –ï—Å—Ç—å –∞—Ç–∞–∫–∏, –ø—Ä–µ–¥–º–µ—Ç—ã –∏ –≤—Å–µ —Ç–∞–∫–æ–µ. –ù–µ –æ—á–µ–Ω—å –æ—Ç–ø–æ–ª–∏—Ä–æ–≤–∞–Ω–æ, –æ—Ç–∫–ª–∏–∫ ‚Äî –ø–æ–ª–Ω—ã–π –±–∞—Ä–¥–∞–∫, –Ω–æ —ç—Ç–æ –≤–µ—Å–µ–ª—å–µ –≤ —Ö–∞–æ—Å–µ."
    
    breach = "–î–∞, —ç—Ç–æ—Ç –º–∏–Ω–∏-–∏–≥—Ä–∞ –ø–æ —Ö–∞–∫–µ—Ä—Å—Ç–≤—É –∏–∑ Cyberpunk 2077, –∫–æ—Ç–æ—Ä—ã–π –≤—Å–µ–º –Ω—Ä–∞–≤–∏—Ç—Å—è ‚Äî NETTECH Breach Protocol. –°–ª–µ–¥–∏ –∑–∞ –º–∞—Ç—Ä–∏—Ü–µ–π –∏ —Ö–∞–∫–Ω–∏ –∫–∞–∫ V."
    
    rogue = "–†–∞–Ω–¥–æ–º–Ω–∞—è rogue-like –∏–≥—Ä–∞, –∫–æ—Ç–æ—Ä—É—é —è —Å–¥–µ–ª–∞–ª –Ω–∞ –≤–µ–±–µ. –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –Ω–µ–º–Ω–æ–≥–æ —Å—É–º–±—É—Ä–Ω–æ–µ, –Ω–æ, —ç–π, –∏–≥—Ä–∞—Ç—å –º–æ–∂–Ω–æ."
    
    dino = "–ó–Ω–∞–º–µ–Ω–∏—Ç–∞—è –∏–≥—Ä–∞ —Å –¥–∏–Ω–æ–∑–∞–≤—Ä–æ–º –∏–∑ Chrome, –Ω–æ... —Å–∫–∞–∂–µ–º, –æ–Ω–∞ –±–æ–ª–µ–µ ‚Äò–º–∏–Ω–∏–º–∞–ª–∏—Å—Ç–∏—á–Ω–∞‚Äô."
    
    rick = "–õ—É—á—à–∞—è –∏–≥—Ä–∞ –≤ –º–æ–µ–º –ø–æ—Ä—Ç—Ñ–æ–ª–∏–æ. –°–µ—Ä—å–µ–∑–Ω–æ, —Ç–µ–±–µ –ø–æ–Ω—Ä–∞–≤–∏—Ç—Å—è."
    
    laravel = "–≠—Ç–æ –ª–∏—á–Ω—ã–π –ø—Ä–æ–µ–∫—Ç –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è Laravel —Å CRUD, —è –∫–æ–≤—ã—Ä—è—é—Å—å —Å SQL —á–µ—Ä–µ–∑ Eloquent, –º–æ–¥–µ–ª–∏—Ä—É—é –∫–æ–º–º–µ—Ä—á–µ—Å–∫—É—é —Å—Ä–µ–¥—É –∏ –¥–µ–ª–∞—é –ø–∞–Ω–µ–ª—å –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∫–ª–∏–µ–Ω—Ç–∞–º–∏ –∏ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—è–º–∏."

    pong = "–ë—ã—Å—Ç—Ä—ã–π –ø—Ä–æ–µ–∫—Ç –Ω–∞ Python, —Å–¥–µ–ª–∞–ª –∏–≥—Ä—É –≤ –ø–∏–Ω–≥-–ø–æ–Ω–≥, –º–æ–∂–Ω–æ –∏–≥—Ä–∞—Ç—å –æ–¥–Ω–æ–º—É –∏–ª–∏ –≤–¥–≤–æ–µ–º, –∏—Å–ø–æ–ª—å–∑—É—é pygame, –ø–∞—Ä—É –º–µ—Ö–∞–Ω–∏–∫ –∏ –ò–ò (–Ω–µ–º–Ω–æ–≥–æ —Å—É–º–∞—Å—à–µ–¥—à–∏–π, –Ω–æ —Ä–∞–±–æ—Ç–∞–µ—Ç)."

    scripts = "–ö–æ—Ä–æ—á–µ, –≤–æ—Ç –Ω–µ—Å–∫–æ–ª—å–∫–æ –±–µ—Å–ø–æ—Ä—è–¥–æ—á–Ω—ã—Ö —Å–∫—Ä–∏–ø—Ç–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ —è –Ω–∞–ø–∏—Å–∞–ª, –≤ –æ—Å–Ω–æ–≤–Ω–æ–º –¥–ª—è –º–∞—à–∏–Ω Capture the Flag –∏ –∫–∏–±–µ—Ä–±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏, –ø–æ–ª–µ–∑–Ω—ã–µ –∫–æ–¥—ã –∏ –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è –Ω–∞ asp, php, python, bash ‚Äî –∫–æ—Ä–æ—á–µ, —á—Ç–æ —É–≥–æ–¥–Ω–æ."
    btnproject = "[–ü–†–û–ï–ö–¢–´]";
    flowmvc = "FlowManager ‚Äî —ç—Ç–æ —Ñ–∏–Ω–∞–Ω—Å–æ–≤–∞—è –ø–∞–Ω–µ–ª—å, —Ä–∞–∑—Ä–∞–±–æ—Ç–∞–Ω–Ω–∞—è –Ω–∞ Laravel —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—ã MVC, –ø—Ä–µ–¥–Ω–∞–∑–Ω–∞—á–µ–Ω–Ω–∞—è –¥–ª—è –ø–æ–º–æ—â–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º –≤ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–∏ –¥–æ—Ö–æ–¥–∞–º–∏ –∏ —Ä–∞—Å—Ö–æ–¥–∞–º–∏, –∞ —Ç–∞–∫–∂–µ –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –µ–∂–µ–º–µ—Å—è—á–Ω—ã—Ö –∏ –µ–∂–µ–≥–æ–¥–Ω—ã—Ö –æ—Ç—á–µ—Ç–æ–≤ –≤ —Ñ–æ—Ä–º–∞—Ç–µ PDF. –û–Ω–∞ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç –æ—Ä–≥–∞–Ω–∏–∑–æ–≤–∞–Ω–Ω—ã–π –æ–±–∑–æ—Ä —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã—Ö –æ–ø–µ—Ä–∞—Ü–∏–π, —á—Ç–æ –¥–µ–ª–∞–µ—Ç –µ–µ –ø–æ–ª–µ–∑–Ω—ã–º –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–º –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –∏ –æ—Ç—á–µ—Ç–Ω–æ—Å—Ç–∏ –ø–æ —Ñ–∏–Ω–∞–Ω—Å–∞–º.";
    projectTitle = '>SET ROUTE/PATH=GET:ASC PROJECTS.F\n\n';
    edgarbot = "ùîàùî°ùî§ùîûùîØ Íì•ùî©ùî©ùîûùî´ ùîÖùî¨ùî± ‚Äî —ç—Ç–æ –º–Ω–æ–≥–æ—Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–π –±–æ—Ç –¥–ª—è WhatsApp, –≤–¥–æ—Ö–Ω–æ–≤–ª–µ–Ω–Ω—ã–π –æ–¥–Ω–∏–º –∏–∑ –º–æ–∏—Ö –ª—é–±–∏–º—ã—Ö –ø–∏—Å–∞—Ç–µ–ª–µ–π, –≠–¥–≥–∞—Ä–æ–º –ê. –ü–æ. –û–Ω –æ—Å–Ω–∞—â–µ–Ω —Ä–∞–∑–ª–∏—á–Ω—ã–º–∏ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–∞–º–∏ –¥–ª—è —É—Ç–∏–ª–∏—Ç, —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏, —Ö–∞–∫–µ—Ä—Å–∫–∏—Ö –∑–∞–¥–∞—á, —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –≥—Ä—É–ø–ø–∞–º–∏, —Ä–∞–∑–≤–ª–µ—á–µ–Ω–∏–π, –∏–≥—Ä –∏ –∑–∞–≥—Ä—É–∑—á–∏–∫–æ–≤, –∏ –ø—Ä–µ–¥–Ω–∞–∑–Ω–∞—á–µ–Ω –±—ã—Ç—å –º–æ–∏–º –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–º –ò–ò-–∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–æ–º –≤ WhatsApp. –Ø –Ω–µ –ª—é–±–ª—é –ø–æ–ª–∞–≥–∞—Ç—å—Å—è –Ω–∞ ChatGPT; —è –ø—Ä–µ–¥–ø–æ—á–∏—Ç–∞—é —Å–æ–∑–¥–∞–≤–∞—Ç—å —Å–≤–æ—é –º–æ–¥–µ–ª—å, —á—Ç–æ–±—ã –æ–Ω–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–æ–≤–∞–ª–∞ –º–æ–∏–º –Ω—É–∂–¥–∞–º.";
    arcangelos = "ArcangelOS Distro ‚Äî —ç—Ç–æ –º–æ–π –ª–∏—á–Ω—ã–π –ø–æ—Ä—Ç—Ñ–æ–ª–∏–æ, —Å–æ–∑–¥–∞–Ω–Ω—ã–π –¥–ª—è –∏–º–∏—Ç–∞—Ü–∏–∏ —Å—Ä–µ–¥—ã KDE Linux, –ø–æ—Ö–æ–∂–µ–π –Ω–∞ —ç—Ç–æ—Ç —Ç–µ—Ä–º–∏–Ω–∞–ª Fallout. –í –Ω–µ–º –µ—Å—Ç—å –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è, —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ –∏ –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏ –º–æ–∏—Ö –ø—Ä–æ–µ–∫—Ç–æ–≤ –∏ —Å–µ–±—è. –í–æ–∑–º–æ–∂–Ω–æ, –∫–æ–≥–¥–∞-–Ω–∏–±—É–¥—å —è —Å–æ–∑–¥–∞–º —Å–≤–æ—é —Å–æ–±—Å—Ç–≤–µ–Ω–Ω—É—é –¥–∏—Å—Ç—Ä–∏–±—É—Ü–∏—é.";
    termlink = "Robco.TERMLINK ‚Äî —ç—Ç–æ Python-—Å–∫—Ä–∏–ø—Ç, —ç–º—É–ª–∏—Ä—É—é—â–∏–π —Å–∏—Å—Ç–µ–º—É –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏ —Ç–µ—Ä–º–∏–Ω–∞–ª–∞ –∏–∑ —Å–µ—Ä–∏–∏ –∏–≥—Ä Fallout. –û–Ω –Ω–µ —Ç–æ–ª—å–∫–æ –ø–µ—Ä–µ–¥–∞–µ—Ç –∞—Ç–º–æ—Å—Ñ–µ—Ä—É Fallout, –Ω–æ —Ç–∞–∫–∂–µ –≤–∫–ª—é—á–∞–µ—Ç –≤—Å—Ç—Ä–æ–µ–Ω–Ω—ã–µ –∏ –Ω–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –Ω–∞ —Å–≤–æ–µ–π –∫–æ–Ω—Å–æ–ª–∏ RobCo, —Ç–∞–∫–∏–µ –∫–∞–∫ –≤–∫–ª—é—á–µ–Ω–∏–µ —Å–∏—Å—Ç–µ–º–Ω—ã—Ö —Å–ª—É–∂–±, —á—Ç–µ–Ω–∏–µ –∂—É—Ä–Ω–∞–ª–æ–≤ systemctl, —Ç–µ–∫—Å—Ç–æ–≤—ã–π —Ä–µ–¥–∞–∫—Ç–æ—Ä –∏ –º–Ω–æ–≥–æ–µ –¥—Ä—É–≥–æ–µ, —á—Ç–æ –¥–µ–ª–∞–µ—Ç –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é bash –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–æ—Å—Ç–∞–ª—å–≥–∏—á–Ω–æ–π –∏ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–π.";
    contactinfo = "[TERMLINK PROTOCOL]\n> RIT-V300. USER DATA\nREADING CONTACT_INFORMATION\n\n";
    btnhome = '[–î–û–ú–ê–®–ù–Ø–Ø –°–¢–†–ê–ù–ò–¶–ê]';
    btnsobre = '[–û–ë–û –ú–ù–ï]';
    btngal = '[–ì–ê–õ–ï–†–ï–Ø]';
    btncontact = '[–ö–û–ù–¢–ê–ö–¢]';
    btnlang = '[Language/Idioma/Langue/–Ø–∑—ã–∫/Ë®ÄË™û]'
    btnreturn = '[–í–ï–†–ù–£–¢–¨–°–Ø]';
    sitext = '–í–ï–ë-–°–ê–ô–¢–´, –ö–û–¢–û–†–´–ï –Ø –°–û–ó–î–ê–õ';
    btnterminal= '[–ò–ù–¢–ï–†–§–ï–ô–° –ö–û–ú–ê–ù–î–ù–û–ô –°–¢–†–û–ö–ò]'
    bbnsite = '[–í–ï–ë-–°–ê–ô–¢–´]';
    bbnvid = "[–ì–ê–õ–ï–†–ï–Ø]";
    sobretexto = [
      `\n>// –ü—Ä–∏–≤–µ—Ç! –Ø –ì–µ–Ω—Ä–∏ ‚Äî —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫, –≥–µ–π–º–µ—Ä –∏ —Ü–∏—Ñ—Ä–æ–≤–æ–π —Å–æ–∑–¥–∞—Ç–µ–ª—å, —É–≤–ª–µ—á–µ–Ω–Ω—ã–π —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏—è–º–∏, –∫–æ—Ç–æ—Ä—ã–µ —Ä–∞–∑–¥–≤–∏–≥–∞—é—Ç –≥—Ä–∞–Ω–∏—Ü—ã (–∏ –∏–Ω–æ–≥–¥–∞ –º–æ—ë —Ç–µ—Ä–ø–µ–Ω–∏–µ).`,
      `–Ø –ø–∏—à—É –∫–æ–¥, –∫–æ—Ç–æ—Ä—ã–π *–≤ –æ—Å–Ω–æ–≤–Ω–æ–º* —Ä–∞–±–æ—Ç–∞–µ—Ç, —Ä–∞–∑—Ä–∞–±–∞—Ç—ã–≤–∞—é –∫—Ä–µ–∞—Ç–∏–≤–Ω—ã–µ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã, –æ—Ä–∏–µ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –Ω–∞ UX/UI (—Å–æ–≤—Å–µ–º –Ω–µ —Ç–∞–∫), –∏ —Å—Ç—Ä–æ—é –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è, –∫–æ—Ç–æ—Ä—ã–µ –¥–µ–ª–∞—é—Ç –≤–µ–± –Ω–µ–º–Ω–æ–≥–æ –∫—Ä—É—á–µ. –ú–æ–∏ –º–µ—Å—Ç–æ–∏–º–µ–Ω–∏—è? TCP/IP.`,
      `–£ –º–µ–Ω—è –µ—Å—Ç—å –æ–ø—ã—Ç —Ä–∞–±–æ—Ç—ã —Å JavaScript, Vue, React, Python, PHP, Node –∏ –¥—Ä—É–≥–∏–º–∏ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–∞–º–∏, –∫–æ—Ç–æ—Ä—ã–µ –ø–æ–º–æ–≥–∞—é—Ç –º–Ω–µ –≤–æ–ø–ª–æ—â–∞—Ç—å –∏–¥–µ–∏ –≤ –∂–∏–∑–Ω—å. Front-end, back-end, –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö ‚Äî –Ω–∞–∑—ã–≤–∞–π, –∏ —è, –≤–µ—Ä–æ—è—Ç–Ω–æ, —Å —ç—Ç–∏–º –≤–æ–∑–∏–ª—Å—è.`,
      `–°–µ–π—á–∞—Å —è –ø–æ–≥—Ä—É–∂–∞—é—Å—å –≤ Offensive Cybersecurity –∏ Software Engineering, —É—á—É—Å—å —Ö–∞–∫–µ—Ä—Å—Ç–≤—É (*—ç—Ç–∏—á–µ—Å–∫–∏*, –∫–æ–Ω–µ—á–Ω–æ) –∏ —Å—Ç—Ä–æ—é –ø–æ–ª–µ–∑–Ω—ã–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã. –¢–∞–∫ —á—Ç–æ, –µ—Å–ª–∏ –≤–∞–º –Ω—É–∂–µ–Ω –∫—Ç–æ-—Ç–æ, –∫—Ç–æ –º–æ–∂–µ—Ç —Å—Ç—Ä–æ–∏—Ç—å, –ª–æ–º–∞—Ç—å –∏ (–æ–±—ã—á–Ω–æ) —á–∏–Ω–∏—Ç—å –≤–µ—â–∏, —è —Ç–æ—Ç, –∫—Ç–æ –≤–∞–º –Ω—É–∂–µ–Ω.`
    ];
    // –û–±–Ω–æ–≤–∏—Ç—å –¥—Ä—É–≥–∏–µ —Ç–µ–∫—Å—Ç—ã –ø–æ –º–µ—Ä–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏
    hometexto = "> ROBCO INDUSTRIES (TM) TERMLINK PROTOCOL\n> –î–û–°–¢–£–ü –ö –ñ–£–†–ù–ê–õ–ê–ú #27...\n\n--- –ò–ù–ò–¶–ò–ê–õ–ò–ó–ê–¶–ò–Ø –ó–ê–ü–ò–°–ò ---\n\n–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –º–æ—ë –ø–æ—Ä—Ç—Ñ–æ–ª–∏–æ, –≤–¥–æ—Ö–Ω–æ–≤–ª–µ–Ω–Ω–æ–µ –∫—É–ª—å—Ç–æ–≤—ã–º —Ç–µ—Ä–º–∏–Ω–∞–ª–æ–º ROBCO Industries –∏–∑ —Å–µ—Ä–∏–∏ Fallout.\n\n–Ø –ì–µ–Ω—Ä–∏, backend-—Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫, –¥–≤–∏–∂–∏–º—ã–π –≥–ª—É–±–æ–∫–æ–π —Å—Ç—Ä–∞—Å—Ç—å—é –∫ –ø—Ä–æ–≥—Ä–∞–º–º–Ω–æ–º—É –æ–±–µ—Å–ø–µ—á–µ–Ω–∏—é, —Å–µ—Ç—è–º –∏ –≤—Å–µ–º—É, —á—Ç–æ —Å–≤—è–∑–∞–Ω–æ —Å IT. –ó–¥–µ—Å—å –≤—ã –Ω–∞–π–¥–µ—Ç–µ –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—é –º–æ–∏—Ö —Ä–∞–±–æ—Ç –∏ –º–æ–∏—Ö –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤.\n\n> –°–¢–ê–¢–£–° –°–ò–°–¢–ï–ú–´: –í–°–ï –°–ò–°–¢–ï–ú–´ –ù–û–†–ú–ê–õ–¨–ù–´";
    homeReturn = "  --- –ù–ê–ñ–ú–ò–¢–ï –õ–Æ–ë–£–Æ –ö–ù–û–ü–ö–£, –ß–¢–û–ë–´ –ü–†–û–î–û–õ–ñ–ò–¢–¨ ---";

}
  else if (language === 'fr') {
   ezymap = "üîç Terminal interactif pour Nmap avec pr√©r√©glages de scan, commutateurs de flags, s√©lection de scripts NSE et construction de commandes en temps r√©el."  
  btnterminal="[TERMINAL]" 
    halflife = "C‚Äôest bien √ßa, le classique Œªùñ∫ùóÖùñø ùóÖùóÇùñøùñæ, l‚Äô√¢ge d‚Äôor du jeu vid√©o, port√© sur le web. Tout le m√©rite revient √† x8BitRain pour l‚Äôavoir mis en ligne ‚Äî j‚Äôai juste apport√© quelques retouches et l‚Äôai ajout√© √† mon portfolio car ce bijou devait y √™tre."

    btngames = "[JEUX]"

gamesTitle = "ACCES AU FICHIER : JEUX... [RobCo TERMINAL] | √âTAT : EN LIGNE"

exitgame = "Inspir√© par ce jeu RPG textuel que joue Elliot Alderson dans Mr. Robot (S4E11). Tu peux trouver la sortie ? Es-tu un 1, ou juste un autre 0 ?"

pokemon = "Un jeu de bataille Pok√©mon bas√© sur le web. Il a des attaques, des objets et tout √ßa. Ce n'est pas tr√®s poli, la r√©activit√© est nulle, mais c‚Äôest un chaos amusant."

breach = "Ouais, ce mini-jeu de hacking de Cyberpunk 2077 que tout le monde adore, le NETTECH Breach Protocol. Suis la matrice et hacke-le comme V."

rogue = "Un jeu rogue-like al√©atoire que j‚Äôai fait sur le web. Les contr√¥les sont un peu partout, mais bon, il est jouable."

dino = "Le c√©l√®bre jeu du dinosaure Chrome, mais... disons que c‚Äôest un peu plus ‚Äòminimaliste‚Äô."

rick = "Le meilleur jeu de mon portfolio. S√©rieusement, tu vas l‚Äôadorer."
 
        laravel = "C'est un projet perso que j'ai fait pour tester Laravel avec CRUD, en bidouillant avec SQL via Eloquent, en simulant un environnement commercial et en cr√©ant un panneau pour g√©rer les clients et les transactions."

        pong = "Un projet rapide que j'ai fait en Python, un jeu de ping-pong √† jouer seul ou √† deux, avec pygame, quelques m√©caniques sympas et une IA (un peu chaotique, mais √ßa marche)."
        
        scripts = "Alors voil√†, ce sont des scripts un peu brouillons que j'ai √©crits, principalement pour des machines Capture the Flag et la cybers√©curit√©, des codes utiles et de l'automatisation g√©n√©rale en asp, php, python, bash, bref tout ce qu'il faut."
        
        projectTitle = '>SET ROUTE/PATH=GET:ASC PROJETS.F\n\n'
        termlink ="Robco.TERMLINK est un script Python qui √©mule le syst√®me d'authentification de terminal de la s√©rie de jeux Fallout. Non seulement il apporte l'ambiance de Fallout, mais il inclut √©galement des fonctionnalit√©s int√©gr√©es et modifiables sur sa console RobCo, telles que l'activation de services syst√®me, la lecture de journalctl, un √©diteur de texte, et bien plus encore, rendant l'initialisation de votre bash √† la fois nostalgique et fonctionnelle."
        edgarbot = "ùîàùî°ùî§ùîûùîØ Íì•ùî©ùî©ùîûùî´ ùîÖùî¨ùî± est un bot multi-appareil pour WhatsApp, inspir√© par l'un de mes √©crivains pr√©f√©r√©s, Edgar A. Poe. Il propose une vari√©t√© d'outils pour les utilitaires, le d√©veloppement, le hacking, la gestion de groupes, le divertissement, les jeux et les t√©l√©chargeurs, con√ßu pour √™tre mon assistant IA personnel sur WhatsApp. Je n'aime pas d√©pendre de ChatGPT; je pr√©f√®re cr√©er mon propre mod√®le pour r√©pondre √† mes besoins."
        contactinfo = "[TERMLINK PROTOCOL]\n> RIT-V300. DONN√âES UTILISATEUR\nLECTURE INFORMATIONS_DE_CONTACT\n\n";
    flowmvc ="FlowManager est un tableau de bord financier d√©velopp√© en Laravel avec la structure MVC, con√ßu pour aider les utilisateurs √† g√©rer les revenus et les d√©penses tout en g√©n√©rant des rapports PDF mensuels et annuels. Il fournit une vue d'ensemble organis√©e des activit√©s financi√®res, en faisant un outil utile pour le suivi et le reporting financiers."
    btnhome = '[ACCUEIL]';
    btnsobre = '[√Ä PROPOS]';
    btngal = '[GALERIE]';
    btncontact = '[CONTACT]';
    btnlang = '[Language/Idioma/Langue/–Ø–∑—ã–∫/Ë®ÄË™û]'
    btnreturn = '[RETOUR]';
    btnproject = "[PROJETS]";
    sitext = 'LES SITES WEB QUE J\'AI CR√â√âS';
    bbnsite = '[SITES INTERNET]';
    bbnvid = "[GALERIE]"
    sobretexto = [
      `\n>// Salut ! Moi, c‚Äôest Henry ‚Äì d√©veloppeur, gamer et cr√©ateur digital, passionn√© par la tech qui repousse les limites (et parfois ma patience).`,
      `Je code des trucs qui *marchent presque toujours*, je con√ßois des interfaces propres, et je cr√©e des applis pour rendre le web un peu plus cool. Mes pronoms ? TCP/IP.`,
      `Je ma√Ætrise bien JavaScript, Vue, React, Python, PHP, Node, et d'autres outils que j'utilise pour donner vie aux id√©es. Front-end, back-end, bases de donn√©es ‚Äì si √ßa a du code, j‚Äôy suis.`,
      `n ce moment, je me plonge dans la cybers√©curit√© offensive et l‚Äôing√©nierie logicielle, apprenant √† hacker (√©thiquement, bien s√ªr) et √† construire quelques outils utiles. Donc, si vous cherchez quelqu‚Äôun capable de construire, casser et (g√©n√©ralement) r√©parer des choses, je suis la personne qu'il vous faut.`
    ];
    arcangelos = "ArcangelOS Distro est mon portfolio personnel, con√ßu pour simuler un environnement KDE Linux, un peu comme ce terminal Fallout. Il propose des outils √† t√©l√©charger, des photos et des pr√©sentations de mes projets et de moi-m√™me. Peut-√™tre qu'un jour je cr√©erai ma propre distro."
    hometexto = "> ROBCO INDUSTRIES (TM) TERMLINK PROTOCOL\n> ACCESSING LOGS #27...\n\n--- LOG ENTRY INITIALIZED ---\n\nBienvenido a mi portafolio, inspirado en el ic√≥nico Termlink de ROBCO Industries de la serie Fallout.\n\nSoy Henry, un desarrollador backend impulsado por una gran pasi√≥n por el software, las redes y todo lo relacionado con la inform√°tica. Aqu√≠ encontrar√°s una muestra de mi trabajo, cada proyecto un paso en mi viaje para construir e innovar en el mundo de la tecnolog√≠a.\n\n> SYSTEM STATUS: ALL SYSTEMS NORMAL\n\n";
    homeReturn = "--- APPUYEZ POUR CONTINUER ---"
}
else {
  halflife = "That's right, the classic Œªùñ∫ùóÖùñø ùóÖùóÇùñøùñæ, the golden dawn of games, ported to web. Full credit goes to x8BitRain for making it playable online ‚Äî I just made a few tweaks and dropped it in my portfolio because, honestly, this gem had to be here."
  ezymap = "üîç Interactive terminal-based Nmap launcher with scan presets, flag toggles, NSE script selection, and real-time command building. "
      btngames = "[GAMES]"
btnterminal="[TERMINAL]"
    gamesTitle = "ACCESSING FILE: GAMES... [RobCo TERMINAL] | STATUS: ONLINE"

    exitgame = "Inspired by that Text-Based RPG game Elliot Alderson plays in Mr. Robot (S4E11). Can you find the escape? Are you a 1, or just another 0?"

    pokemon = "A web-based Pok√©mon battle game. It's got attacks, items, and all that jazz. Not super polished, but it's fun chaos."

    breach = "Yeah, that one hacking mini-game from Cyberpunk 2077 that everybody loves, the NETTECH Breach Protocol. Follow the matrix and hack it like V."

    rogue = "A random rogue-like game I threw together on the web. The controls are a little all over the place, but hey, it‚Äôs playable."

    dino = "The famous Chrome dinosaur game, but... let‚Äôs just say it‚Äôs a little more ‚Äòminimalistic‚Äô."

    rick = "The best game in my portfolio. Seriously, you‚Äôll love it."

        flowmvc="FlowManager is a financial dashboard developed in Laravel using the MVC structure, designed to help users manage income and expenses while generating monthly and annual PDF reports. It provides an organized overview of financial activities, making it a useful tool for financial tracking and reporting."
        projectTitle = '>SET ROUTE/PATH=GET:ASC PROJECTS.F\n\n'
    edgarbot = "ùîàùî°ùî§ùîûùîØ Íì•ùî©ùî©ùîûùî´ ùîÖùî¨ùî± is a WhatsApp multi-device bot, inspired by one of my favorite writers, Edgar A. Poe. It comes with a variety of tools for utilities, development, hacking, group management, fun, games, and downloaders, designed to be my personal AI assistant on WhatsApp. I don't like relying on ChatGPT; I prefer creating my own model to fit my needs.'"
    arcangelos = "ArcangelOS Distro is my personal portfolio, designed to simulate a KDE Linux environment, much like this Fallout terminal. It features tools for download, photos, and showcases of my projects and myself. Maybe one day I‚Äôll create my own distro."
    termlink = "Robco.TERMLINK is a Python script that emulates the terminal authentication system from the Fallout game series. Not only does it deliver Fallout vibes, but it also includes built-in and customizable features on its RobCo console, like switching on system services, reading journalctl, a text editor, and more‚Äîmaking your bash initialization both nostalgic and functional."
        contactinfo = "[TERMLINK PROTOCOL]\n> RIT-V300. USER DATA\nREADING CONTACT_INFORMATION\n\n";
        btnhome = '[HOME]';
        btnsobre = '[ABOUT]';
        btngal = '[GALLERY]';
        btncontact = '[CONTACT]';
    btnlang = '[Language/Idioma/Langue/–Ø–∑—ã–∫/Ë®ÄË™û]'
        btnreturn = '[RETURN]';
        sitext = 'WEBSITES I\'VE DONE';
        btnproject = "[PROJECTS]";
        bbnsite = '[WEBSITES]';
    bbnvid = "[GALLERY]"
        sobretexto = [
      `\n>// Hey there! I'm Henry ‚Äì a developer, gamer, and digital creator with a love for tech that pushes boundaries (and sometimes my patience).`,
      `I code things that *mostly* work, design some creative and totally UX/UI guided interfaces (totally not), and build apps that aim to make the web a little cooler. My pronouns? TCP/IP.`,
      `I got experience in JavaScript, Vue, React, Python, PHP, Node, and a handful of other tools that help me bring ideas to life. Front-end, back-end, databases ‚Äì you name it, I probably mess with it.`,
      `Right now, I‚Äôm diving into Offensive Cybersecurity & Software Engineering, learning to hack (*ethically*, of course) and build some useful tools . So if you're looking for someone who can build, break, and (usually) fix things, I'm the guy.`
    ];
        //Update other text as needed
        hometexto = "> ROBCO INDUSTRIES (TM) TERMLINK PROTOCOL\n> ACCESSING LOGS #27...\n\n--- LOG ENTRY INITIALIZED ---\n\nWelcome to my portfolio, inspired by the iconic ROBCO Industries Termlink from the Fallout series.\n\nI‚Äôm Henry, a backend developer driven by a deep passion for software, networks, and all things IT. Here, you‚Äôll find a showcase of my work and my contacts.\n\n> SYSTEM STATUS: ALL SYSTEMS NORMAL\n\n";
    homeReturn ="  --- PRESS ANY KEY TO CONTINUE ---"
  }


  // Store the selected language in localStorage
   localStorage.setItem('selectedLanguage', language);
}


// Handle initial language setup (use the stored language or default to English)
const storedLanguage = localStorage.getItem('selectedLanguage');
if (storedLanguage) {
  changeLanguage(storedLanguage);
} else {
  changeLanguage('en');
}




let contato = document.createElement("a");
		contato.innerText = btncontact;
		contato.classList.add("btn-contact")
		contato.href = "#";
		contato.onclick = () => {
			// remove all a tags and put a text with p and an a tag in the end to take back to preciois page.. Remove text and restore a tag buttons 
			   // Create a <p> element with a message
    const message = document.createElement('p');
    message.innerText = contactinfo
const contactTable = document.createElement('table');
contactTable.style.borderCollapse = 'collapse';

// Contact entries
const contacts = [
    { type: 'GitHub', name:'ARCANGEL0', link: 'https://github.com/ARCANGEL0/' },
    { type: 'Instagram', name:'h.arcangelo', link: 'https://instagram.com/h.arcangelo' },
    { type: 'WhatsApp/Phone', name: '+351 927285125', link: 'https://api.whatsapp.com/send?phone=351927285125' },
    { type: 'Website',name: 'ArcangelOS', link: 'https://arcangelo.net' },
    { type: 'Email',name:'henrique.c.arcangelo@gmail.com', link: 'mailto:rick_arcangelo@hotmail.com,henry.arcangello@proton.me,henry.arcangello@gmail.com' },
    { type: 'LinkedIn', name:'Henrique Arcangelo', link:'https://www.linkedin.com/in/henryarcangelo/' },
    { type: 'Hack The Box', name:'xSam4el', link: 'https://app.hackthebox.com/profile/126962' },
];

contacts.forEach(contact => {
    const row = contactTable.insertRow();
    const typeCell = row.insertCell();
    const linkCell = row.insertCell();

    typeCell.innerText = contact.type;
    typeCell.style.padding = '5px';
    typeCell.style.border = '1px solid #008000';

    linkCell.innerHTML = `<a href="${contact.link}" target="_blank">${contact.name}</a>`;
    linkCell.style.padding = '5px';
    linkCell.style.border = '1px solid #008000';
});


// Append the contact form to the message
message.appendChild(contactTable);

    // Create a "Go Back" <a> tag
    const goBackLink = document.createElement("a");
    goBackLink.innerText = btnreturn;
    goBackLink.classList.add("btnReturn")
    goBackLink.href = "#";
    goBackLink.onclick = () => {
        // Remove the message and "Go Back" link and restore the "Logout" and "Contact" buttons
        message.remove();
        goBackLink.remove();
        // outro.appendChild(logout);
        // outro.appendChild(contato);
        pAud("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX")

type([inicio, sobre, galeria, projetos, games, contato, terminal ,idioma], { processChars: false , wait: 10 }, outro);
    };


    // Remove the "Logout" and "Contact" buttons
    inicio.remove();
    sobre.remove();
    projetos.remove();
    galeria.remove();
    games.remove();
    
    contato.remove();
    idioma.remove();
    terminal.remove();
pAud("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX")

    // Append the message and "Go Back" link to the 'outro' element
type([message, goBackLink], { processChars: false , wait: 10 }, outro);
 
       
			
			
		};
		
		
let projetos = document.createElement("a");
		projetos.innerText = btnproject;
		projetos.classList.add("btn-project")
		projetos.href = "#";
		projetos.onclick = () => {	
                  const messageP = document.createElement('p');
                  messageP.innerText = projectTitle;

                  const scrollableContainer = document.createElement('div');
                  scrollableContainer.style.overflowY = 'auto';
                  scrollableContainer.style.maxHeight = '60vh';
                  scrollableContainer.style.border = '0px solid #00ff00'; // Bright green border for the terminal look
                  scrollableContainer.style.padding = '30px';
                  scrollableContainer.style.color = '#00ff00'; // Bright green text


                  const projectsTable = document.createElement('table');
                  projectsTable.style.borderCollapse = 'collapse';
                  projectsTable.style.maxWidth = '70vw';
                  projectsTable.style.wordWrap = 'break-word';

                  const projs = [
                      { type: edgarbot, name:'ùîàùî°ùî§ùîûùîØ Íì•ùî©ùî©ùîûùî´ ùîÖùî¨ùî±', link: 'https://github.com/ARCANGEL0/edgarbot-MD' },
                      { type: flowmvc , name: 'ùóôùóπùóºùòÑ ·Æøùòîùò¢ùòØùò¢ùò®ùò¶ùò≥', link: 'https://github.com/ARCANGEL0/flowManager' },
                      { type: ezymap , name: ' üúÖ ùòåùòªùò∫ùòîùò¢ùò±', link: 'https://github.com/ARCANGEL0/EzyMap' },
                      { type: termlink, name: 'ùó•ùóºùóØùóñùóº.ùñ≥êÑíùñ±ùñ¨ùñ´ùñ®ùñ≠ùñ™', link: 'https://github.com/robco-termlink' },
                      { type: arcangelos, name: 'ùõåùóøùó∞ùóÆùóªùó¥ùó≤ùóπÍì≥S L…™…¥·¥úx', link: 'https://arcangelo.net' },
                      { type: scripts, name: 'ùöÇùöëùöéùöïùöï ùöÇùöåùöõùöíùöôùöùùöú', link: 'https://github.com/ARCANGEL0/Scripts' },
                      { type: pong, name: 'ùòóùò∫ùòµùò©ùò∞ùòØ ùòóùòêÃÜùòØùò®ùòó√∏ùòØùò®', link: 'https://github.com/ARCANGEL0/PythonPong' },
                      { type: laravel, name: 'ùóüùóÆùóøùóÆùòÉùó≤ùóπ D·¥Äs ú ô·¥è·¥Ä Ä·¥Ö', link: 'https://github.com/ARCANGEL0/LaravelDashboard' },
                      
                      
                      

                  ];

                  projs.forEach(projk => {
                      const rowP = projectsTable.insertRow();
                      const typeCellP = rowP.insertCell();
                      const linkCellP = rowP.insertCell();

                      linkCellP.innerText = projk.type;
                      typeCellP.style.padding = '5px';
                      typeCellP.style.border = '1px solid #008000';
                      typeCellP.style.whiteSpace = 'normal';
                      typeCellP.style.minWidth = '10vw';

                      typeCellP.innerHTML = `<a href="${projk.link}" target="_blank">${projk.name}</a>`;
                      linkCellP.style.padding = '5px';
                      linkCellP.style.border = '1px solid #008000';
                      linkCellP.style.whiteSpace = 'normal';
                  });

                  scrollableContainer.appendChild(projectsTable);
                  messageP.appendChild(scrollableContainer);

                  const goBackLinkP = document.createElement("a");
                  goBackLinkP.innerText = btnreturn;
                  goBackLinkP.classList.add("btnReturn");
                  goBackLinkP.href = "#";
                  goBackLinkP.onclick = () => {
                      messageP.remove();
                      goBackLinkP.remove();
                      pAud("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX")

                      type([inicio, sobre, galeria, projetos, games, contato, terminal, idioma], { processChars: false, wait: 10 }, outro);


                  };
                  inicio.remove();
                  sobre.remove();
                  projetos.remove();
                  galeria.remove();
                  games.remove();
                  
                  contato.remove();
                  idioma.remove();
                  terminal.remove();
                  pAud("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX")


                  type([goBackLinkP, messageP], { processChars: false, wait: 10 }, outro);


         };
            
		
	
  
         let games = document.createElement("a");
         games.innerText = btngames;
         games.classList.add("btn-games")
         games.href = "#";
         games.onclick = () => {	
                       const messageP2 = document.createElement('p');
                       messageP2.innerText = gamesTitle;
     
                       const scrollableContainerGame = document.createElement('div');
                       scrollableContainerGame.style.overflowY = 'auto';
                       scrollableContainerGame.style.maxHeight = '60vh';
                       scrollableContainerGame.style.border = '0px solid #00ff00'; // Bright green border for the terminal look
                       scrollableContainerGame.style.padding = '30px';
                       scrollableContainerGame.style.color = '#00ff00'; // Bright green text
     
     
                       const projectsTableGame = document.createElement('table');
                       projectsTableGame.style.borderCollapse = 'collapse';
                       projectsTableGame.style.maxWidth = '70vw';
                       projectsTableGame.style.wordWrap = 'break-word';
     
                       const gams = [
                           { type: exitgame, name:'ÔΩÖÔº∏ÔΩâÔΩî  ·ö§', link: 'https://arcangelo.net/fallout?run=friend' },
                           { type: breach , name: 'ùó°ùóòùù•ùóòùóñùóõ ùóïùó•ùù£ùóîùóñùóõ ùó£ùó•‚õ∂ùóßùó¢ùóñùöπùóü', link: 'https://arcangelo.net/fallout?run=friend' },
                           { type: halflife, name: 'ùñßŒªùñ´ùñ• - ùñ´ùñ®ùñ•ùñ§', link: 'https://arcangelo.net/valve' },
                           { type: dino, name: 'D…™…¥·¥è ‡†Ö', link: 'https://arcangelo.net/fallout?run=dino' },
                           { type: pokemon, name: 'ùôøùöòÃÅùöîùöéùöñùöòùöó ‚¶∫', link: 'https://arcangelo.net/fallout?run=pokemon' },
                           { type: rogue, name: 'ùó•ùóºùó¥ùòÇùó≤ ÍóÉ', link: 'https://arcangelo.net/fallout?run=rogue' },
                           { type: rick, name: 'ÔºüÔºüÔºüÔºü', link: 'https://arcangelo.net/fallout?run=rick' },
                           
                           
     
                       ];
     
                       gams.forEach(game => {
                           const rowG = projectsTableGame.insertRow();
                           const typeCellG = rowG.insertCell();
                           const linkCellG = rowG.insertCell();
     
                           linkCellG.innerText = game.type;
                           typeCellG.style.padding = '5px';
                           typeCellG.style.border = '1px solid #008000';
                           typeCellG.style.whiteSpace = 'normal';
                           typeCellG.style.minWidth = '10vw';
     
                           typeCellG.innerHTML = `<a href="${game.link}" target="_blank">${game.name}</a>`;
                           linkCellG.style.padding = '5px';
                           linkCellG.style.border = '1px solid #008000';
                           linkCellG.style.whiteSpace = 'normal';
                       });
     
                       scrollableContainerGame.appendChild(projectsTableGame);
                       messageP2.appendChild(scrollableContainerGame);
     
                       const goBackLinkG = document.createElement("a");
                       goBackLinkG.innerText = btnreturn;
                       goBackLinkG.classList.add("btnReturn");
                       goBackLinkG.href = "#";
                       goBackLinkG.onclick = () => {
                           messageP2.remove();
                           goBackLinkG.remove();
                           pAud("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX")
     
                           type([inicio, sobre, galeria, projetos, games, contato, terminal, idioma], { processChars: false, wait: 10 }, outro);
     
     
                       };
     
                       inicio.remove();
                       sobre.remove();
                       galeria.remove();
                       
                       projetos.remove();
                       games.remove();

                       contato.remove();
                       idioma.remove();
                       terminal.remove();
                       pAud("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX")
     
     
                       type([goBackLinkG, messageP2], { processChars: false, wait: 10 }, outro);
     
     
              };
                 
  
       
       
       
              let galeria = document.createElement("a");
const style = document.createElement("style");

// Define the CSS content
const cssContent = `
  .galMainDiv {
    display: flex;
    flex-direction: row;
    width: 50vw; 
    height: 50vh;
  }

   .sitesheader:hover{
    color: yellow !important;
    background: transparent !important;
   }
  .next { 
--slice-0: inset(50% 50% 50% 50%);
  --slice-1: inset(80% 0 0 0);
  --slice-2: inset(50% 0 30% 0);
  --slice-3: inset(10% 0 85% 0);
  --slice-4: inset(40% 0 43% 0);
  --slice-5: inset(80% 0 5% 0);
  content: "LGN";


  left: 0;
  right: 0;
  bottom: 0;

  transform: scaleX(-1);
  }

  .carousel-button { 
    height: 150px;
    padding: 40px;
   margin: 150px 150px 0 150px !important;
  }

   .sites {
    display: flex;
    flex-wrap: wrap;
    justify-content: center;
    gap: 20px;
    position: relative;
  }

  .sites img {
    position: relative;
    width: 150px;
    height: auto;
    transition: transform 0.3s ease, filter 0.3s ease;
    object-fit: contain;
  }

  .sites img:hover {
    transform: scale(1.1);
    filter: brightness(1.4);
  }

  .galMainDiv {
    display: flex;
    flex-direction: row;
    width: 50vw; 
    height: 50vh;
  }

  .next { 
--slice-0: inset(50% 50% 50% 50%);
  --slice-1: inset(80% 0 0 0);
  --slice-2: inset(50% 0 30% 0);
  --slice-3: inset(10% 0 85% 0);
  --slice-4: inset(40% 0 43% 0);
  --slice-5: inset(80% 0 5% 0);
  content: "LGN";


  left: 0;
  right: 0;
  bottom: 0;

  transform: scaleX(-1);
  }

  .carousel-button { 
    height: 150px;
    padding: 40px;
   margin: 150px 150px 0 150px !important;
  }
:root {
  --img-size: 180px;
  --bright-green: #00FF00;  /* Terminal Bright Green */
}

.sites {
  position: relative;
  width: 56vw;
  height: 55vh;
  overflow: hidden;
}

/* Base styling for images */
.sites > img {
  
  position: absolute;
  width: 15vw;
  height: auto;
  object-fit: cover;
  filter: opacity(0.3) drop-shadow(0 5px 2px green) invert(17%) sepia(74%) saturate(179%) hue-rotate(81deg);
  /* invert(67%) sepia(74%) saturate(179%) hue-rotate(81deg) brightness(113%) contrast(128%); */
}




.sites > img:nth-of-type(1) {

    top: 33%;
    left: -3%;
    width: 15%;
  }
.sites > img:nth-of-type(2) {
  top: -15%; 
  left: 10%;
  width: 20%;
}
.sites > img:nth-of-type(3) {
    top: 46%;
    width: 21%;
    left: 21%;
  }
.sites > img:nth-of-type(4) {
  top: 11%; 
  left: 42%;
}

/* Glitch overlay */
.sites > img::after {
  content: "";
  position: absolute;
  inset: 0;
  background-size: cover;
  background-position: center;
  background-repeat: no-repeat;
  pointer-events: none;
}

/* 4) Hook each ::after to its own image URL */
.sites > img:nth-of-type(1)::after {
  background-image: url("images/Escoteiros.png");
}
.sites > img:nth-of-type(2)::after {
  background-image: url("images/Arc.png");
}
.sites > img:nth-of-type(3)::after {
  background-image: url("images/Info.png");
}
.sites > img:nth-of-type(4)::after {
  background-image: url("images/Lna.png");
}

/* Glitch keyframes: horizontal bands and movement */
@keyframes glitch-slices {
  0% {
    clip: rect(10px, var(--img-size), 40px, 0);
    transform: translateX(0);
  }
  15% {
    clip: rect(60px, var(--img-size), 90px, 0);
    transform: translateX(-8px);
  }
  30% {
    clip: rect(110px, var(--img-size), 140px, 0);
    transform: translateX(6px);
  }
  45% {
    clip: rect(30px, var(--img-size), 70px, 0);
    transform: translateX(-6px);
  }
  60% {
    clip: rect(80px, var(--img-size), 120px, 0);
    transform: translateX(10px);
  }
  75% {
    clip: rect(50px, var(--img-size), 85px, 0);
    transform: translateX(-5px);
  }
  100% {
    clip: rect(0px, var(--img-size), var(--img-size), 0);
    transform: translateX(0);
  }
}

/* Hover effect: Brighten green */
.sites > img:hover {
  filter: opacity(0.8) drop-shadow(0 9px 2px green) invert(67%) sepia(74%) saturate(179%) hue-rotate(81deg);
  /* invert(67%) sepia(74%) saturate(179%) hue-rotate(81deg) brightness(113%) contrast(128%); */

  cursor: pointer; /* Show cursor pointer on hover */
}

/* Additional horizontal sync distortion animation */
@keyframes sync-shift {
  0% {
    transform: translateX(-3px);
  }
  50% {
    transform: translateX(3px);
  }
  
  @keyframes noise-anim {
  --steps: 20;
  0% {
    clip: rect(random(100)px, 9999px, random(100)px, 0);
  }
  100% {
    clip: rect(random(100)px, 9999px, random(100)px, 0);
  }
}
  100% {
    transform: translateX(-3px);
  }
}



img{
  animation: glitchz 0.5s ease-in infinite alternate-reverse;;
}

@keyframes glitchz {
  0%, 100% {
    transform: translate(0px, 0px) skew(0deg);
  }

  2%, 96% {
    transform: translate(0px, 0px) skew(0deg);
  }
  4%, 94% {
    transform: translate(0px, 0px) skew(0deg);
  }
  6%, 92% {
    transform: translate(0px, 0px) skew(0deg);
  }
  8%, 90% {
    transform: translate(0px, 0px) skew(0deg);
  }
  10%, 88% {
    transform: translate(0px, 0px) skew(0deg);
  }
  12%, 86% {
    transform: translate(0px, 0px) skew(0deg);
  }
  14%, 84% {
    transform: translate(0px, 0px) skew(0deg);
  }
  16%, 82% {
    transform: translate(0px, 0px) skew(0deg);
  }
  18%, 80% {
    transform: translate(0px, 0px) skew(0deg);
  }

  20%, 78% {
    transform: translate(-1px, 0px) skew(-1deg);
  }
  22%, 76% {
    transform: translate(1px, 0px) skew(1deg);
  }
  24%, 74% {
    transform: translate(0px, 0px) skew(0deg);
  }

  26%, 72% {
    transform: translate(-1px, 0px) skew(-1deg);
  }
  28%, 70% {
    transform: translate(1px, 0px) skew(1deg);
  }
  30%, 68% {
    transform: translate(0px, 0px) skew(0deg);
  }

  32%, 66% {
    transform: translate(-1px, 0px) skew(-2deg);
  }
  34%, 64% {
    transform: translate(1px, 0px) skew(2deg);
  }
  36%, 62% {
    transform: translate(0px, 0px) skew(0deg);
  }

  38%, 60% {
    transform: translate(-2px, 0px) skew(-1deg);
  }
  40%, 58% {
    transform: translate(2px, 0px) skew(1deg);
  }
  42%, 56% {
    transform: translate(0px, 0px) skew(0deg);
  }

  44%, 54% {
    transform: translate(-1px, 0px) skew(0deg);
  }
  46%, 52% {
    transform: translate(1px, 0px) skew(0deg);
  }

  48%, 50% {
    transform: translate(0px, 0px) skew(0deg);
  }
}



  .sites img::after {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: rgba(0, 255, 0, 0.3);
    border-radius: 10px;
    transition: opacity 0.3s ease;
    opacity: 0;
  }

  .sites img:hover::after {
    opacity: 1;
  }

  .sites img:before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: repeating-linear-gradient(transparent, transparent 2px, rgba(0, 255, 0, 0.3) 2px, rgba(0, 255, 0, 0.3) 4px);
    animation: scanlines 1.5s infinite linear;
    border-radius: 10px;
    pointer-events: none;
  }

  @keyframes scanlines {
    0% {
      background-position: 0 0;
    }
    100% {
      background-position: 0 10px;
    }
  }

  /* Horizontal sync shift effect */
  @keyframes sync-shift {
    0% {
      transform: translateX(-3px);
    }
    50% {
      transform: translateX(3px);
    }
    100% {
      transform: translateX(-3px);
    }
  }

  .sites img:hover {
    animation: sync-shift 0.3s ease-in-out infinite;
  }
`;

// Set the content of the <style> element
style.textContent = cssContent;

// Append the <style> element to the <head> of the document
document.head.appendChild(style);


		galeria.innerText = btngal;
galeria.classList.add("btn-gal")
		galeria.href = "#";
		galeria.onclick = () => {
			
		inicio.remove();

    sobre.remove();
    games.remove();

    galeria.remove();
    
    contato.remove();
    projetos.remove();
    idioma.remove();
    terminal.remove() 
    
    
  
  
    var divgallery = document.getElementsByClassName("typer")[4];
    

    
    
// Access the third "typer" element (remember, the index is zero-based)

    divgallery.classList.add('divgal')
    const backGal = document.createElement("a");
    backGal.innerText = btnreturn;
    backGal.style.marginTop = "10px"
    backGal.classList.add("btnReturn")
    backGal.href = "#";
    backGal.onclick = () => {
        // Remove the message and "Go Back" link and restore the "Logout" and "Contact" buttons
        divgallery.remove();
        backGal.remove();
        divsites.remove()
        btnVid.remove()
        mainGalDiv.remove()
        btnSites.remove()
        btnVid.remove()
   // outro.appendChild(logout);
        // outro.appendChild(contato);
        pAud("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX")

        
type([inicio, sobre, galeria, projetos, games, contato, terminal,idioma], { processChars: false , wait: 10 }, outro);


    };


const btnSites = document.createElement("a");
    btnSites.innerText = bbnsite;
    btnSites.style.marginTop = "10px"
    btnSites.classList.add("btnReturn")
    btnSites.href = "#";
    btnSites.onclick = () => {
        // Remove the message and "Go Back" link and restore the "Logout" and "Contact" buttons
       mainGalDiv.remove()
        btnSites.remove();
        // outro.appendChild(logout);
        // outro.appendChild(contato);
pAud("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX")

type([btnVid,divsites], { processChars: false , wait: 10 }, outro);

    };
const btnVid = document.createElement("a");
    btnVid.innerText = bbnvid;
    btnVid.style.marginTop = "10px"
    btnVid.classList.add("btnReturn")
    btnVid.href = "#";
    btnVid.onclick = () => {
        // Remove the message and "Go Back" link and restore the "Logout" and "Contact" buttons
  divsites.remove();
  btnVid.remove();
        // outro.appendChild(logout);
        // outro.appendChild(contato);
pAud("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX")

type([btnSites,mainGalDiv ], { processChars: false , wait: 10 }, outro);
 
    };


		  
		// Array de URLs de imagens
const VideosUrl = [
    'images/gallery/alpha2.mp4',
    'images/gallery/Videos/lna.mp4',
    'images/gallery/Videos/lnadigital.mp4',
      'images/gallery/Videos/escoteiros.mp4',
    'images/gallery/Videos/arcUI.mp4',
    'images/gallery/Videos/hadesign.mp4',
        'images/gallery/Videos/GreenWaste.mp4',
    'images/gallery/Videos/arcUI.mp4',

    'images/gallery/Videos/pong.mp4',
];

divgallery.appendChild(backGal);
divgallery.appendChild(btnSites)
divgallery.appendChild(btnVid)

btnVid.remove()
const mainGalDiv = document.createElement("div")
mainGalDiv.classList.add("galMainDiv")


const prevBtn = document.createElement("a");
prevBtn.textContent = "<<<";
prevBtn.classList.add('carousel-button')
mainGalDiv.appendChild(prevBtn);
			
const nextBtn = document.createElement("a");
nextBtn.textContent = "<<<";
nextBtn.classList.add('carousel-button')
nextBtn.classList.add('next')

let currentIndex = 0;

prevBtn.onclick = () => {
	currentIndex--
     if (currentIndex<=VideosUrl.length && currentIndex>0) {
    

vid.src=VideosUrl[currentIndex]
     }
     if (currentIndex<0){
     	 currentIndex=0
vid.src=VideosUrl[currentIndex]    
     
}

}
nextBtn.onclick = () => {
	currentIndex++
     if (currentIndex<VideosUrl.length && currentIndex>=0) {
     
vid.src=VideosUrl[currentIndex]

     }
     if (currentIndex>VideosUrl.length){
     	 currentIndex=0
vid.src=VideosUrl[currentIndex]    
     
}
}
mainGalDiv.style.marginTop='20px'
mainGalDiv.style.marginBottom='20px'
const vid = document.createElement("video");

vid.src=VideosUrl[currentIndex]
vid.autoplay = true
vid.style.height='auto'

mainGalDiv.appendChild(vid)
mainGalDiv.appendChild(nextBtn);


divgallery.appendChild(mainGalDiv)


let divsites = document.createElement("div");
divsites.classList.add("divsites");
let divsimages = document.createElement("div")
			divsimages.classList.add("sites");
divsimages.style.display = "flex";
divsimages.style.flexWrap = "wrap"; // Allow elements to wrap to the next line

let escoteiro = document.createElement("img");
escoteiro.src = "images/Escoteiros.png";
escoteiro.onclick = () => {
  window.open("https://arcangel0.github.io/77GEMAR", "_blank");
};

let arc = document.createElement("img");
arc.src = "images/Arc.png";
arc.onclick = () => {
  window.open("https://arcangel0.github.io/ARC_UI", "_blank");
};

let info = document.createElement("img");
info.src = "images/Info.png";
info.onclick = () => {
  window.open("https://arcangeloinfo.com.br", "_blank");
};

let lna = document.createElement("img");
lna.src = "images/Lna.png";
lna.onclick = () => {
  window.open("https://arcangelo.net/LNA", "_blank");
};
let sitestxt = document.createElement("a");
sitestxt.innerText = sitext
sitestxt.classList.add("sitesheader")
sitestxt.style.marginTop="6%"
divsites.appendChild(sitestxt)
divsimages.appendChild(escoteiro);
divsimages.appendChild(arc);
divsimages.appendChild(info);
divsimages.appendChild(lna);

divsimages.style.display = "flex";
divsites.appendChild(divsimages)
divgallery.appendChild(divsites);
divsites.remove()
		}; // function end fim galeriq
		
		let sobre = document.createElement("a");



		sobre.innerText = btnsobre;
		sobre.classList.add("btn-sobre")

		sobre.href = "#";
		sobre.onclick = async () =>  {		
		
		
		
		
		inicio.remove();

    sobre.remove();

    galeria.remove();
    
    projetos.remove();
    contato.remove();
    idioma.remove();
    terminal.remove() 
    
    games.remove();

    var divsobre = document.getElementsByClassName("typer")[4];
    

    
    
// Access the third "typer" element (remember, the index is zero-based)

    divsobre.classList.add('divsob')
    const backSobre = document.createElement("a");
    backSobre.innerText = btnreturn;
    backSobre.classList.add("btnReturn")
    backSobre.style.marginTop = "10px"
    backSobre.href = "#";
    backSobre.onclick = () => {
        // Remove the message and "Go Back" link and restore the "Logout" and "Contact" buttons
        divsobre.remove();
        backSobre.remove();
        // outro.appendChild(logout);
        // outro.appendChild(contato);
pAud("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX")

type([inicio, sobre, galeria, projetos, games, contato, terminal ,idioma], { processChars: false , wait: 10 }, outro);

    };
    
 
      const gifImage2 = document.createElement("img");
      
		gifImage2.src = "images/me.gif";

gifImage2.style.height = "36vh"

gifImage2.style.width = "48vw"
		  
gifImage2.style.display = "block";
gifImage2.style.margin = "0 5vw";
		   
		  


divsobre.appendChild(backSobre)

pAud("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX")

	await type(
			sobretexto,
			FAST,
			divsobre 
		);
divsobre.appendChild(gifImage2)
	

}
		let terminal = document.createElement("a");
		terminal.innerText = btnterminal;
     terminal.classList.add("btn-terminal")
		terminal.href = "#";
		terminal.onclick = () => {
		  outro.remove();
		  login()
		};
		
			let inicio = document.createElement("a");
    
		inicio.innerText = btnhome;
    inicio.classList.add('btn-home')
		inicio.href = "#";
		inicio.onclick = () =>  {		
		  
      

		  const gifImage = document.createElement("img");
		  // Create a new <p> elemen
		  const divinicio = document.createElement("div")
		  divinicio.classList.add("divinicio")
		  const divtextinicio = document.createElement("div")
		  divtextinicio.classList.add("divtextinicio") 
		  const divgif = document.createElement("div")
		  divgif.classList.add("divgif")
const iniciotext = document.createElement("p");

// Set the text for the <p> element
iniciotext.innerText = hometexto

iniciotext.classList.add("inicioheader")

// Assuming you have a container div with an id of "portfolio" to append the <p> element to


gifImage.src = "images/Code.gif";

gifImage.style.marginTop = "15px"
gifImage.style.marginBottom= "15px"
gifImage.style.width = "92vw"
gifImage.style.height= "50vh"
// Append the image to divgif



iniciotext.style.top = "0";
iniciotext.style.left = "0";
iniciotext.style.width = "87vw";
iniciotext.style.height = "100%";
iniciotext.style.margin = "0";
divinicio.style.marginLeft = "20px"
divinicio.appendChild(divtextinicio);
divinicio.appendChild(divgif);
divtextinicio.appendChild(iniciotext);



		  const goBackLinkIn = document.createElement("a");
    goBackLinkIn.innerText = homeReturn;
    goBackLinkIn.classList.add('btnReturn')
    goBackLinkIn.style.marginTop = "10px"
    goBackLinkIn.href = "#";
    goBackLinkIn.onclick = () => {
        // Remove the message and "Go Back" link and restore the "Logout" and "Contact" buttons
        divinicio.remove();
        goBackLinkIn.remove();
        // outro.appendChild(logout);
pAud("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX")

        // outro.appendChild(contato);
type([inicio, sobre, galeria, projetos, games, contato, terminal ,idioma], { processChars: false , wait: 10 }, outro);

    };

  
    // Remove the "Logout" and "Contact" buttons
    inicio.remove();
    sobre.remove();
    galeria.remove();
    projetos.remove();
    
    games.remove();

    contato.remove();
    idioma.remove();
    terminal.remove();

    // Append the message and "Go Back" link to the 'outro' element
pAud("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX")

type([divinicio, goBackLinkIn], { processChars: false , wait: 10 }, outro);
    
		
		};
		
		
		let idioma = document.createElement("a");
    idioma.classList.add("btn-lang")


		idioma.innerText = btnlang;

		idioma.href = "#";
		idioma.onclick = () => {

inicio.remove();
    sobre.remove();
    galeria.remove();
    projetos.remove();
    
    games.remove();
    contato.remove();
    idioma.remove();
    terminal.remove();
			
const backLang = document.createElement("a");
    backLang.innerText = btnreturn
    backLang.classList.add("btnReturn")
    backLang.href = "#";
    backLang.onclick = () => {
        // Remove the message and "Go Back" link and restore the "Logout" and "Contact" buttons
        port.remove();
        spa.remove();
        rus.remove()
        jap.remove()
        eng.remove()
        fre.remove()
        backLang.remove();
        // outro.appendChild(logout);
        // outro.appendChild(contato);
pAud("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX")

type([inicio, sobre, galeria, projetos, games, contato, terminal ,idioma], { processChars: false , wait: 10 }, outro);

    };

    // Remove the "Logout" and "Contact" buttons
    


let port = document.createElement("a");
		port.innerText = "[PORTUGU√äS]";
		port.href = "#";
		port.onclick = () => { 
		  
		  changeLanguage('pt')
		  
		  updateTexts()
		  port.remove();
      spa.remove();
      rus.remove()
      jap.remove()
      eng.remove()
      fre.remove()
        backLang.remove();
        // outro.appendChild(logout);
        // outro.appendChild(contato);
pAud("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX")

type([inicio, sobre, galeria, projetos, games, contato, terminal ,idioma], { processChars: false , wait: 10 }, outro);
		  
		}
		
let eng = document.createElement("a");
		eng.innerText = "[ENGLISH]";
		eng.href = "#";
		eng.onclick = () => { 
		  changeLanguage('en')
		  
		  updateTexts() 
		  
		  port.remove();
      spa.remove();
      rus.remove()
      jap.remove()
      eng.remove()
      fre.remove()
        backLang.remove();
        // outro.appendChild(logout);
        // outro.appendChild(contato);
pAud("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX")

type([inicio, sobre, galeria, projetos, games, contato, terminal ,idioma], { processChars: false , wait: 10 }, outro);

		}
		let rus = document.createElement("a");
		rus.innerText = "[—Ä—É—Å—Å–∫–∏–π]";
		rus.href = "#";
		rus.onclick = () => { 
		  changeLanguage('ru')
		  
		  updateTexts() 
		  
		  port.remove();
      spa.remove();
      rus.remove()
      jap.remove()
      eng.remove()
      fre.remove()
        backLang.remove();
        // outro.appendChild(logout);
        // outro.appendChild(contato);
pAud("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX")

type([inicio, sobre, galeria, projetos, games, contato, terminal ,idioma], { processChars: false , wait: 10 }, outro);

		}
    let jap = document.createElement("a");
		jap.innerText = "[Êó•Êú¨Ë™û]";
		jap.href = "#";
		jap.onclick = () => { 
		  changeLanguage('ja')
		  
		  updateTexts() 
		  
		  port.remove();
      spa.remove();
      rus.remove()
      jap.remove()
      eng.remove()
      fre.remove()
        backLang.remove();
        // outro.appendChild(logout);
        // outro.appendChild(contato);
pAud("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX")

type([inicio, sobre, galeria, projetos, games, contato, terminal ,idioma], { processChars: false , wait: 10 }, outro);

		}
let spa = document.createElement("a");
		spa.innerText = "[ESPAN√ïL]";
		spa.href = "#";
		spa.onclick = () => { 
		  changeLanguage('es')
		  updateTexts()
		  port.remove();
      spa.remove();
      rus.remove()
      jap.remove()
      eng.remove()
      fre.remove()
        backLang.remove();
        // outro.appendChild(logout);
        // outro.appendChild(contato);
pAud("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX")

type([inicio, sobre, galeria, projetos, games, contato, terminal ,idioma], { processChars: false , wait: 10 }, outro);

		}
		
let fre = document.createElement("a");
		fre.innerText = "[FRAN√áAIS]";
		fre.href = "#";
		fre.onclick = () => { 
		  changeLanguage('fr')
		  updateTexts()
		  port.remove();
      spa.remove();
      rus.remove()
      jap.remove()
      eng.remove()
      fre.remove()
        backLang.remove();
        // outro.appendChild(logout);
        // outro.appendChild(contato);
        pAud("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX")
        type([inicio, sobre, galeria, projetos, games, contato, terminal ,idioma], { processChars: false , wait: 10 }, outro);

		}
    // Append the message and "Go Back" link to the 'outro' element
    pAud("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX")
    type([backLang,port, eng, spa, fre,rus,jap], { processChars: false , wait: 10 }, outro);
		  
		};


	;
  pAud("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX")
  type([inicio, sobre, galeria, projetos, games, contato, terminal,idioma], { processChars: false , wait: 5 }, outro);

	});

	outro.remove();
}

const stylesheets = ["fallout"];
const templates = ["fallout"];

export { stylesheets, templates };
export default command;
