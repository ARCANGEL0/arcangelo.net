<?xml version="1.0"?>
<doc>
    <assembly>
        <name>DevToys.Api</name>
    </assembly>
    <members>
        <member name="T:DevToys.Api.DictionaryExtensions">
            <summary>
            Provides extension methods for dictionaries.
            </summary>
        </member>
        <member name="M:DevToys.Api.DictionaryExtensions.GetValueOrDefault``2(System.Collections.Generic.IDictionary{``0,``1},``0)">
            <summary>
            Gets the value at the given key, or a default value.
            </summary>
            <typeparam name="TKey">The type of the keys in the dictionary.</typeparam>
            <typeparam name="TValue">The type of the values in the dictionary.</typeparam>
            <param name="dictionary">The dictionary to retrieve the value from.</param>
            <param name="key">The key to retrieve the value for.</param>
            <returns>The value associated with the specified key, or the default value if the key is not found.</returns>
        </member>
        <member name="T:DevToys.Api.IClipboard">
            <summary>
            Provides a platform agnostic way to interact with the clipboard of the operating system the app is running on.
            </summary>
        </member>
        <member name="M:DevToys.Api.IClipboard.GetClipboardDataAsync">
            <summary>
            Retrieves data from the system clipboard.
            </summary>
            <remarks>
            This method may try to access to the UI thread.
            </remarks>
            <returns>The data currently stored in the system clipboard.</returns>
        </member>
        <member name="M:DevToys.Api.IClipboard.GetClipboardTextAsync">
            <summary>
            Retrieves text from the system clipboard.
            </summary>
            <remarks>
            This method may try to access to the UI thread.
            </remarks>
            <returns>The text currently stored in the system clipboard, or null if nothing is present.</returns>
        </member>
        <member name="M:DevToys.Api.IClipboard.GetClipboardFilesAsync">
            <summary>
            Retrieves files from the system clipboard.
            </summary>
            <remarks>
            This method may try to access to the UI thread.
            </remarks>
            <returns>The files currently stored in the system clipboard, or null if nothing is present.</returns>
        </member>
        <member name="M:DevToys.Api.IClipboard.GetClipboardImageAsync">
            <summary>
            Retrieves the image from the system clipboard.
            </summary>
            <remarks>
            This method may try to access to the UI thread.
            </remarks>
            <returns>The image currently stored in the system clipboard, or null if nothing is present.</returns>
        </member>
        <member name="M:DevToys.Api.IClipboard.SetClipboardTextAsync(System.String)">
            <summary>
            Sets text to the system clipboard.
            </summary>
            <remarks>
            This method may try to access to the UI thread.
            </remarks>
            <param name="data">The data to be stored in the system clipboard.</param>
        </member>
        <member name="M:DevToys.Api.IClipboard.SetClipboardFilesAsync(System.IO.FileInfo[])">
            <summary>
            Sets files to the system clipboard.
            </summary>
            <remarks>
            This method may try to access to the UI thread.
            </remarks>
            <param name="filePaths">The list of files to be stored in the system clipboard.</param>
        </member>
        <member name="M:DevToys.Api.IClipboard.SetClipboardImageAsync(SixLabors.ImageSharp.Image)">
            <summary>
            Sets image to the system clipboard.
            </summary>
            <remarks>
            This method may try to access to the UI thread.
            </remarks>
            <param name="image">The image to be stored in the system clipboard.</param>
        </member>
        <member name="T:DevToys.Api.IFileStorage">
            <summary>
            Provides a platform agnostic way to interact with the file system of the operating system the app is running on.
            </summary>
        </member>
        <member name="P:DevToys.Api.IFileStorage.AppCacheDirectory">
            <summary>
            Gets application's directory to store cache data.
            Cache data can be used for any data that needs to persist longer than temporary data, but shouldn't be data that is
            required to operate the app, as the operating system may clear this storage.
            </summary>
        </member>
        <member name="M:DevToys.Api.IFileStorage.PickSaveFileAsync(System.String[])">
            <summary>
            Prompt the user to select a location to save a file, and decide of the file name.
            </summary>
            <param name="fileTypes">The list of file types the user can choose. For example, ".txt". Use "*" for any file type.</param>
            <returns>If succeeded, returns a write-only stream corresponding to the file the user selected, otherwise, returns null.</returns>
        </member>
        <member name="M:DevToys.Api.IFileStorage.PickOpenFileAsync(System.String[])">
            <summary>
            Prompt the user to select a file to open.
            </summary>
            <remarks>The returned items contain a stream. It won't be disposed automatically. It is important to dispose the stream yourself, when not needed anymore</remarks>
            <param name="fileTypes">The list of file types the user can choose. For example, ".txt". Use "*" for any file type.</param>
            <returns>If succeeded, returns a read-only stream corresponding to the file the user selected, otherwise, returns null.</returns>
        </member>
        <member name="M:DevToys.Api.IFileStorage.PickOpenFilesAsync(System.String[])">
            <summary>
            Prompt the user to select many files to open.
            </summary>
            <remarks>The returned items contain a stream. It won't be disposed automatically. It is important to dispose the stream yourself, when not needed anymore</remarks>
            <param name="fileTypes">The list of file types the user can choose. For example, ".txt". Use "*" for any file type.</param>
            <returns>If succeeded, returns a read-only stream corresponding to the file the user selected, otherwise, returns null.</returns>
        </member>
        <member name="M:DevToys.Api.IFileStorage.PickFolderAsync">
            <summary>
            Prompt the user to select a folder.
            </summary>
            <returns>If succeeded, returns the absolute path to the folder the user selected, otherwise, returns null.</returns>
        </member>
        <member name="M:DevToys.Api.IFileStorage.FileExists(System.String)">
            <summary>
            Determines whether the file indicated by the given <paramref name="relativeOrAbsoluteFilePath"/> exists.
            If a relative path is indicated, use the <see cref="P:DevToys.Api.IFileStorage.AppCacheDirectory"/> as working directory.
            </summary>
            <param name="relativeOrAbsoluteFilePath">The path to the file to check.</param>
            <returns>Returns true if the file exist</returns>
        </member>
        <member name="M:DevToys.Api.IFileStorage.OpenReadFile(System.String)">
            <summary>
            Tries to open the given <paramref name="relativeOrAbsoluteFilePath"/> with read access rights.
            If a relative path is indicated, use the <see cref="P:DevToys.Api.IFileStorage.AppCacheDirectory"/> as working directory.
            </summary>
            <param name="relativeOrAbsoluteFilePath">The path to the file to read.</param>
            <returns>Returns a read-only stream if the file exist and can be read, otherwise, raise an exception.</returns>
        </member>
        <member name="M:DevToys.Api.IFileStorage.OpenWriteFile(System.String,System.Boolean)">
            <summary>
            Tries to open the given <paramref name="relativeOrAbsoluteFilePath"/> with write access rights. The file will be created if it doesn't exist.
            If a relative path is indicated, use the <see cref="P:DevToys.Api.IFileStorage.AppCacheDirectory"/> as working directory.
            </summary>
            <param name="relativeOrAbsoluteFilePath">The path to the file to write.</param>
            <param name="replaceIfExist">If true and that the file indicated by <paramref name="relativeOrAbsoluteFilePath"/> already exist, overwrite it. Otherwise, open it without replacing it.</param>
            <returns>Returns a write-only stream.</returns>
        </member>
        <member name="M:DevToys.Api.IFileStorage.CreateSelfDestroyingTempFile(System.String)">
            <summary>
            Creates a new temporary file in <see cref="P:DevToys.Api.IFileStorage.AppCacheDirectory"/> that will be deleted when the app stops, or the next time is starts.
            </summary>
            <param name="desiredFileExtension">(optional) The extension the temporary file should use.</param>
            <returns>Returns information to the file.</returns>
        </member>
        <member name="T:DevToys.Api.IFontProvider">
            <summary>
            Provides a platform agnostic way to retrieve information about fonts installed on the operating system.
            </summary>
        </member>
        <member name="M:DevToys.Api.IFontProvider.GetFontFamilies">
            <summary>
            Retrieves the list of font families available on the operating system.
            </summary>
        </member>
        <member name="T:DevToys.Api.LoggingExtensions">
            <summary>
            Provides extension methods for logging.
            </summary>
        </member>
        <member name="P:DevToys.Api.LoggingExtensions.LoggerFactory">
            <summary>
            Sets the <see cref="T:Microsoft.Extensions.Logging.ILoggerFactory"/>.
            </summary>
        </member>
        <member name="M:DevToys.Api.LoggingExtensions.Log(System.Type)">
            <summary>
            Creates an instance of <see cref="T:Microsoft.Extensions.Logging.ILogger"/> for the specified type.
            </summary>
            <param name="forType">The type to create the logger for.</param>
            <returns>An instance of <see cref="T:Microsoft.Extensions.Logging.ILogger"/>.</returns>
        </member>
        <member name="M:DevToys.Api.LoggingExtensions.Log``1(``0)">
            <summary>
            Creates an instance of <see cref="T:Microsoft.Extensions.Logging.ILogger"/> for the given object's type.
            </summary>
            <typeparam name="T">The type of the object.</typeparam>
            <param name="instance">The object instance.</param>
            <returns>An instance of <see cref="T:Microsoft.Extensions.Logging.ILogger"/>.</returns>
        </member>
        <member name="T:DevToys.Api.ObservableCollectionExtensions">
            <summary>
            Provides extension methods for <see cref="T:System.Collections.ObjectModel.ObservableCollection`1"/>.
            </summary>
        </member>
        <member name="M:DevToys.Api.ObservableCollectionExtensions.AddRange``1(System.Collections.ObjectModel.ObservableCollection{``0},System.Collections.Generic.IEnumerable{``0})">
            <summary> 
            Adds the elements of the specified collection to the end of the <see cref="T:System.Collections.ObjectModel.ObservableCollection`1"/>.
            </summary> 
            <typeparam name="T">The type of elements in the collection.</typeparam>
            <param name="origin">The <see cref="T:System.Collections.ObjectModel.ObservableCollection`1"/> to add elements to.</param>
            <param name="newItems">The collection whose elements should be added to the end of the <see cref="T:System.Collections.ObjectModel.ObservableCollection`1"/>.</param>
        </member>
        <member name="T:DevToys.Api.ObservableHashSet`1">
            <summary>
                COPY FROM https://github.com/dotnet/efcore/blob/2d7c4a407e3ae8b1fab38500465e37619786d362/src/EFCore/ChangeTracking/ObservableHashSet.cs
            </summary>
            <remarks>
                See <see href="https://aka.ms/efcore-docs-local-views">Local views of tracked entities in EF Core</see> for more information and
                examples.
            </remarks>
            <typeparam name="T">The type of elements in the hash set.</typeparam>
        </member>
        <member name="M:DevToys.Api.ObservableHashSet`1.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:DevToys.Api.ObservableHashSet`1" /> class
                that is empty and uses the default equality comparer for the set type.
            </summary>
        </member>
        <member name="M:DevToys.Api.ObservableHashSet`1.#ctor(System.Collections.Generic.IEqualityComparer{`0})">
            <summary>
                Initializes a new instance of the <see cref="T:DevToys.Api.ObservableHashSet`1" /> class
                that is empty and uses the specified equality comparer for the set type.
            </summary>
            <param name="comparer">
                The <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> implementation to use when
                comparing values in the set, or null to use the default <see cref="T:System.Collections.Generic.IEqualityComparer`1" />
                implementation for the set type.
            </param>
        </member>
        <member name="M:DevToys.Api.ObservableHashSet`1.#ctor(System.Collections.Generic.IEnumerable{`0})">
            <summary>
                Initializes a new instance of the <see cref="T:DevToys.Api.ObservableHashSet`1" /> class
                that uses the default equality comparer for the set type, contains elements copied
                from the specified collection, and has sufficient capacity to accommodate the
                number of elements copied.
            </summary>
            <param name="collection">The collection whose elements are copied to the new set.</param>
        </member>
        <member name="M:DevToys.Api.ObservableHashSet`1.#ctor(System.Collections.Generic.IEnumerable{`0},System.Collections.Generic.IEqualityComparer{`0})">
            <summary>
                Initializes a new instance of the <see cref="T:DevToys.Api.ObservableHashSet`1" /> class
                that uses the specified equality comparer for the set type, contains elements
                copied from the specified collection, and has sufficient capacity to accommodate
                the number of elements copied.
            </summary>
            <param name="collection">The collection whose elements are copied to the new set.</param>
            <param name="comparer">
                The <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> implementation to use when
                comparing values in the set, or null to use the default <see cref="T:System.Collections.Generic.IEqualityComparer`1" />
                implementation for the set type.
            </param>
        </member>
        <member name="E:DevToys.Api.ObservableHashSet`1.PropertyChanged">
            <summary>
                Occurs when a property of this hash set (such as <see cref="P:DevToys.Api.ObservableHashSet`1.Count" />) changes.
            </summary>
        </member>
        <member name="E:DevToys.Api.ObservableHashSet`1.PropertyChanging">
            <summary>
                Occurs when a property of this hash set (such as <see cref="P:DevToys.Api.ObservableHashSet`1.Count" />) is changing.
            </summary>
        </member>
        <member name="E:DevToys.Api.ObservableHashSet`1.CollectionChanged">
            <summary>
                Occurs when the contents of the hash set changes.
            </summary>
        </member>
        <member name="M:DevToys.Api.ObservableHashSet`1.Clear">
            <summary>
                Removes all elements from the hash set.
            </summary>
        </member>
        <member name="M:DevToys.Api.ObservableHashSet`1.Contains(`0)">
            <summary>
                Determines whether the hash set object contains the
                specified element.
            </summary>
            <param name="item">The element to locate in the hash set.</param>
            <returns>
                <see langword="true" /> if the hash set contains the specified element; otherwise, <see langword="false" />.
            </returns>
        </member>
        <member name="M:DevToys.Api.ObservableHashSet`1.CopyTo(`0[],System.Int32)">
            <summary>
                Copies the elements of the hash set to an array, starting at the specified array index.
            </summary>
            <param name="array">
                The one-dimensional array that is the destination of the elements copied from
                the hash set. The array must have zero-based indexing.
            </param>
            <param name="arrayIndex">The zero-based index in array at which copying begins.</param>
        </member>
        <member name="M:DevToys.Api.ObservableHashSet`1.Remove(`0)">
            <summary>
                Removes the specified element from the hash set.
            </summary>
            <param name="item">The element to remove.</param>
            <returns>
                <see langword="true" /> if the element is successfully found and removed; otherwise, <see langword="false" />.
            </returns>
        </member>
        <member name="P:DevToys.Api.ObservableHashSet`1.Count">
            <summary>
                Gets the number of elements that are contained in the hash set.
            </summary>
        </member>
        <member name="P:DevToys.Api.ObservableHashSet`1.IsReadOnly">
            <summary>
                Gets a value indicating whether the hash set is read-only.
            </summary>
        </member>
        <member name="M:DevToys.Api.ObservableHashSet`1.GetEnumerator">
            <summary>
                Returns an enumerator that iterates through the hash set.
            </summary>
            <returns>
                An enumerator for the hash set.
            </returns>
        </member>
        <member name="M:DevToys.Api.ObservableHashSet`1.System#Collections#Generic#IEnumerable{T}#GetEnumerator">
            <inheritdoc />
        </member>
        <member name="M:DevToys.Api.ObservableHashSet`1.System#Collections#IEnumerable#GetEnumerator">
            <inheritdoc />
        </member>
        <member name="M:DevToys.Api.ObservableHashSet`1.Add(`0)">
            <summary>
                Adds the specified element to the hash set.
            </summary>
            <param name="item">The element to add to the set.</param>
            <returns>
                <see langword="true" /> if the element is added to the hash set; <see langword="false" /> if the element is already present.
            </returns>
        </member>
        <member name="M:DevToys.Api.ObservableHashSet`1.UnionWith(System.Collections.Generic.IEnumerable{`0})">
            <summary>
                Modifies the hash set to contain all elements that are present in itself, the specified collection, or both.
            </summary>
            <param name="other">The collection to compare to the current hash set.</param>
        </member>
        <member name="M:DevToys.Api.ObservableHashSet`1.IntersectWith(System.Collections.Generic.IEnumerable{`0})">
            <summary>
                Modifies the current hash set to contain only
                elements that are present in that object and in the specified collection.
            </summary>
            <param name="other">The collection to compare to the current hash set.</param>
        </member>
        <member name="M:DevToys.Api.ObservableHashSet`1.ExceptWith(System.Collections.Generic.IEnumerable{`0})">
            <summary>
                Removes all elements in the specified collection from the hash set.
            </summary>
            <param name="other">The collection of items to remove from the current hash set.</param>
        </member>
        <member name="M:DevToys.Api.ObservableHashSet`1.SymmetricExceptWith(System.Collections.Generic.IEnumerable{`0})">
            <summary>
                Modifies the current hash set to contain only elements that are present either in that
                object or in the specified collection, but not both.
            </summary>
            <param name="other">The collection to compare to the current hash set.</param>
        </member>
        <member name="M:DevToys.Api.ObservableHashSet`1.IsSubsetOf(System.Collections.Generic.IEnumerable{`0})">
            <summary>
                Determines whether the hash set is a subset of the specified collection.
            </summary>
            <param name="other">The collection to compare to the current hash set.</param>
            <returns>
                <see langword="true" /> if the hash set is a subset of other; otherwise, <see langword="false" />.
            </returns>
        </member>
        <member name="M:DevToys.Api.ObservableHashSet`1.IsProperSubsetOf(System.Collections.Generic.IEnumerable{`0})">
            <summary>
                Determines whether the hash set is a proper subset of the specified collection.
            </summary>
            <param name="other">The collection to compare to the current hash set.</param>
            <returns>
                <see langword="true" /> if the hash set is a proper subset of other; otherwise, <see langword="false" />.
            </returns>
        </member>
        <member name="M:DevToys.Api.ObservableHashSet`1.IsSupersetOf(System.Collections.Generic.IEnumerable{`0})">
            <summary>
                Determines whether the hash set is a superset of the specified collection.
            </summary>
            <param name="other">The collection to compare to the current hash set.</param>
            <returns>
                <see langword="true" /> if the hash set is a superset of other; otherwise, <see langword="false" />.
            </returns>
        </member>
        <member name="M:DevToys.Api.ObservableHashSet`1.IsProperSupersetOf(System.Collections.Generic.IEnumerable{`0})">
            <summary>
                Determines whether the hash set is a proper superset of the specified collection.
            </summary>
            <param name="other">The collection to compare to the current hash set.</param>
            <returns>
                <see langword="true" /> if the hash set is a proper superset of other; otherwise, <see langword="false" />.
            </returns>
        </member>
        <member name="M:DevToys.Api.ObservableHashSet`1.Overlaps(System.Collections.Generic.IEnumerable{`0})">
            <summary>
                Determines whether the current System.Collections.Generic.HashSet`1 object and a specified collection share common elements.
            </summary>
            <param name="other">The collection to compare to the current hash set.</param>
            <returns>
                <see langword="true" /> if the hash set and other share at least one common element; otherwise, <see langword="false" />.
            </returns>
        </member>
        <member name="M:DevToys.Api.ObservableHashSet`1.SetEquals(System.Collections.Generic.IEnumerable{`0})">
            <summary>
                Determines whether the hash set and the specified collection contain the same elements.
            </summary>
            <param name="other">The collection to compare to the current hash set.</param>
            <returns>
                <see langword="true" /> if the hash set is equal to other; otherwise, <see langword="false" />.
            </returns>
        </member>
        <member name="M:DevToys.Api.ObservableHashSet`1.CopyTo(`0[])">
            <summary>
                Copies the elements of the hash set to an array.
            </summary>
            <param name="array">
                The one-dimensional array that is the destination of the elements copied from
                the hash set. The array must have zero-based indexing.
            </param>
        </member>
        <member name="M:DevToys.Api.ObservableHashSet`1.CopyTo(`0[],System.Int32,System.Int32)">
            <summary>
                Copies the specified number of elements of the hash set to an array, starting at the specified array index.
            </summary>
            <param name="array">
                The one-dimensional array that is the destination of the elements copied from
                the hash set. The array must have zero-based indexing.
            </param>
            <param name="arrayIndex">The zero-based index in array at which copying begins.</param>
            <param name="count">The number of elements to copy to array.</param>
        </member>
        <member name="M:DevToys.Api.ObservableHashSet`1.RemoveWhere(System.Predicate{`0})">
            <summary>
                Removes all elements that match the conditions defined by the specified predicate
                from the hash set.
            </summary>
            <param name="match">
                The <see cref="T:System.Predicate`1" /> delegate that defines the conditions of the elements to remove.
            </param>
            <returns>The number of elements that were removed from the hash set.</returns>
        </member>
        <member name="P:DevToys.Api.ObservableHashSet`1.Comparer">
            <summary>
                Gets the <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> object that is used to determine equality for the values in the set.
            </summary>
        </member>
        <member name="M:DevToys.Api.ObservableHashSet`1.TrimExcess">
            <summary>
                Sets the capacity of the hash set to the actual number of elements it contains, rounded up to a nearby,
                implementation-specific value.
            </summary>
        </member>
        <member name="M:DevToys.Api.ObservableHashSet`1.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)">
            <summary>
                Raises the <see cref="E:DevToys.Api.ObservableHashSet`1.PropertyChanged" /> event.
            </summary>
            <param name="e">Details of the property that changed.</param>
        </member>
        <member name="M:DevToys.Api.ObservableHashSet`1.OnPropertyChanging(System.ComponentModel.PropertyChangingEventArgs)">
            <summary>
                Raises the <see cref="E:DevToys.Api.ObservableHashSet`1.PropertyChanging" /> event.
            </summary>
            <param name="e">Details of the property that is changing.</param>
        </member>
        <member name="M:DevToys.Api.ObservableHashSet`1.OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary>
                Raises the <see cref="E:DevToys.Api.ObservableHashSet`1.CollectionChanged" /> event.
            </summary>
            <param name="e">Details of the change.</param>
        </member>
        <member name="T:DevToys.Api.OneOfExtensions">
            <summary>
            Extension methods for working with OneOf types.
            </summary>
        </member>
        <member name="M:DevToys.Api.OneOfExtensions.GetStreamAsync(OneOf.OneOf{System.String,System.IO.FileInfo},DevToys.Api.IFileStorage,System.Threading.CancellationToken)">
            <summary>
            Gets a stream asynchronously based on the input OneOf type.
            </summary>
            <param name="input">The input OneOf type.</param>
            <param name="fileStorage">The file storage implementation.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>A task that represents the asynchronous operation. The task result contains the stream and a flag indicating if the stream was successfully retrieved.</returns>
        </member>
        <member name="M:DevToys.Api.OneOfExtensions.GetStreamAsync(OneOf.OneOf{System.IO.FileInfo,System.String},DevToys.Api.IFileStorage,System.Threading.CancellationToken)">
            <summary>
            Gets a stream asynchronously based on the input OneOf type.
            </summary>
            <param name="input">The input OneOf type.</param>
            <param name="fileStorage">The file storage implementation.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>A task that represents the asynchronous operation. The task result contains the stream and a flag indicating if the stream was successfully retrieved.</returns>
        </member>
        <member name="M:DevToys.Api.OneOfExtensions.ReadAllTextAsync(OneOf.OneOf{System.String,System.IO.FileInfo},DevToys.Api.IFileStorage,System.Threading.CancellationToken)">
            <summary>
            Reads all text asynchronously based on the input OneOf type.
            </summary>
            <param name="input">The input OneOf type.</param>
            <param name="fileStorage">The file storage implementation.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>A task that represents the asynchronous operation. The task result contains the text content and a flag indicating if the content was successfully read.</returns>
        </member>
        <member name="M:DevToys.Api.OneOfExtensions.ReadAllTextAsync(OneOf.OneOf{System.IO.FileInfo,System.String},DevToys.Api.IFileStorage,System.Threading.CancellationToken)">
            <summary>
            Reads all text asynchronously based on the input OneOf type.
            </summary>
            <param name="input">The input OneOf type.</param>
            <param name="fileStorage">The file storage implementation.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>A task that represents the asynchronous operation. The task result contains the text content and a flag indicating if the content was successfully read.</returns>
        </member>
        <member name="T:DevToys.Api.ResultInfo`1">
            <summary>
            Record to contain both whether the task was a success and the resulting data
            </summary>
            <typeparam name="T">Type of the result</typeparam>
        </member>
        <member name="P:DevToys.Api.ResultInfo`1.Data">
            <summary>
            The resulting data or the task
            </summary>
        </member>
        <member name="P:DevToys.Api.ResultInfo`1.HasSucceeded">
            <summary>
            Whether the task succeeded
            </summary>
        </member>
        <member name="P:DevToys.Api.ResultInfo`1.ErrorMessage">
            <summary>
            Error message to display
            </summary>
        </member>
        <member name="M:DevToys.Api.ResultInfo`1.#ctor(`0,System.Boolean)">
            <summary>
            Record to contain both whether the task was a success and the resulting data
            </summary>
            <param name="data">The resulting data or the task</param>
            <param name="hasSucceeded">Whether the task succeeded</param>
        </member>
        <member name="M:DevToys.Api.ResultInfo`1.#ctor(`0,System.String,System.Boolean)">
            <summary>
            Record to contain both whether the task was a success and the resulting data
            </summary>
            <param name="data">The resulting data or the task</param>
            <param name="errorMessage">The error message</param>
            <param name="hasSucceeded">Whether the task succeeded</param>
        </member>
        <member name="T:DevToys.Api.ResultInfo`2">
            <summary>
            Record to contain both whether the task was a success and the resulting data
            </summary>
            <typeparam name="T">Type of the result</typeparam>
            <typeparam name="U">The severity of the result</typeparam>
        </member>
        <member name="P:DevToys.Api.ResultInfo`2.Data">
            <summary>
            The resulting data or the task
            </summary>
        </member>
        <member name="P:DevToys.Api.ResultInfo`2.Severity">
            <summary>
            Severity of the result
            </summary>
        </member>
        <member name="P:DevToys.Api.ResultInfo`2.ErrorMessage">
            <summary>
            Error message to display
            </summary>
        </member>
        <member name="M:DevToys.Api.ResultInfo`2.#ctor(`0,`1)">
            <summary>
            Record to contain both whether the task was a success and the resulting data
            </summary>
            <param name="data">The resulting data or the task</param>
            <param name="severity">The severity of the result</param>
        </member>
        <member name="M:DevToys.Api.ResultInfo`2.#ctor(System.String,`1)">
            <summary>
            Record to contain both whether the task was a success and the resulting data
            </summary>
            <param name="errorMessage">The error message</param>
            <param name="severity">The severity of the result</param>
        </member>
        <member name="M:DevToys.Api.ResultInfo`2.#ctor(`0,System.String,`1)">
            <summary>
            Record to contain both whether the task was a success and the resulting data
            </summary>
            <param name="data">The resulting data or the task</param>
            <param name="errorMessage">The error message</param>
            <param name="severity">The severity of the result</param>
        </member>
        <member name="T:DevToys.Api.ResultInfoSeverity">
            <summary>
            Represents the severity of a result.
            </summary>
        </member>
        <member name="F:DevToys.Api.ResultInfoSeverity.Success">
            <summary>
            Indicates the result is a success.
            </summary>
        </member>
        <member name="F:DevToys.Api.ResultInfoSeverity.Warning">
            <summary>
            Indicates the result is a warning.
            </summary>
        </member>
        <member name="F:DevToys.Api.ResultInfoSeverity.Error">
            <summary>
            Indicates the result is an error.
            </summary>
        </member>
        <member name="T:DevToys.Api.SandboxedFileReader">
            <summary>
            Represents a read-only access to a file on the file system.
            </summary>
            <remarks>
            The file can be read and accessed multiple times in parallel.
            In some cases, the file's resulting stream is non-seekable.
            Disposing the <see cref="T:DevToys.Api.SandboxedFileReader"/> will close the access to the file.
            </remarks>
        </member>
        <member name="F:DevToys.Api.SandboxedFileReader.BufferSize">
            <summary>
            The buffer size used for reading the file in chunks.
            </summary>
        </member>
        <member name="M:DevToys.Api.SandboxedFileReader.FromFileInfo(System.IO.FileInfo)">
            <summary>
            Creates a new instance of the <see cref="T:DevToys.Api.SandboxedFileReader"/> class from a <see cref="T:System.IO.FileInfo"/> object.
            </summary>
            <param name="fileInfo">The <see cref="T:System.IO.FileInfo"/> object representing the file.</param>
            <returns>A new instance of the <see cref="T:DevToys.Api.SandboxedFileReader"/> class.</returns>
        </member>
        <member name="M:DevToys.Api.SandboxedFileReader.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:DevToys.Api.SandboxedFileReader"/> class.
            </summary>
            <param name="fileName">The name of the file, including its extension.</param>
        </member>
        <member name="P:DevToys.Api.SandboxedFileReader.FileName">
            <summary>
            Gets or sets the name of the file, including its extension.
            </summary>
        </member>
        <member name="E:DevToys.Api.SandboxedFileReader.Disposed">
            <summary>
            Raised when the <see cref="T:DevToys.Api.SandboxedFileReader"/> is disposed.
            </summary>
        </member>
        <member name="M:DevToys.Api.SandboxedFileReader.OpenReadFileAsync(System.Threading.CancellationToken)">
            <summary>
            Opens the file for reading asynchronously.
            </summary>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>A task representing the asynchronous operation.</returns>
        </member>
        <member name="M:DevToys.Api.SandboxedFileReader.Dispose">
            <summary>
            Disposes the <see cref="T:DevToys.Api.SandboxedFileReader"/> and releases any resources used.
            </summary>
        </member>
        <member name="M:DevToys.Api.SandboxedFileReader.GetNewAccessToFileContentAsync(System.Threading.CancellationToken)">
            <summary>
            Gets a new stream that can be used to read the file. The stream gets disposed automatically
            when the <see cref="T:DevToys.Api.SandboxedFileReader"/> is disposed.
            </summary>
            <remarks>In some cases, the returned stream is non-seekable.</remarks>
            <param name="cancellationToken">The cancellation token.</param>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:DevToys.Api.SandboxedFileReader"/> has been disposed.</exception>"
            <returns>A task representing the asynchronous operation.</returns>
        </member>
        <member name="M:DevToys.Api.SandboxedFileReader.CopyFileContentToAsync(System.IO.Stream,System.Threading.CancellationToken)">
            <summary>
            Copies the content of the file to the given stream.
            </summary>
            <param name="destinationStream">The destination stream.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> representing the asynchronous operation.</returns>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:DevToys.Api.SandboxedFileReader"/> has been disposed.</exception>"
        </member>
        <member name="T:DevToys.Api.SimpleSandboxedFileReader">
            <summary>
            Represents a read-only access to a file on the file system.
            </summary>
            <remarks>
            The file can be read and accessed multiple times in parallel.
            In some cases, the file's resulting stream is non-seekable.
            Disposing the <see cref="T:DevToys.Api.SandboxedFileReader"/> will close the access to the file.
            </remarks>
        </member>
        <member name="T:DevToys.Api.ApplicationTheme">
            <summary>
            Specifies a UI theme that should be used for individual UIElement parts of an app UI.
            </summary>
        </member>
        <member name="F:DevToys.Api.ApplicationTheme.Light">
            <summary>
            Use the **Light** default theme.
            </summary>
        </member>
        <member name="F:DevToys.Api.ApplicationTheme.Dark">
            <summary>
            Use the **Dark** default theme.
            </summary>
        </member>
        <member name="T:DevToys.Api.AvailableApplicationTheme">
            <summary>
            Specifies a UI theme that should be used for individual UIElement parts of an app UI.
            </summary>
        </member>
        <member name="F:DevToys.Api.AvailableApplicationTheme.Default">
            <summary>
            Use the Application.RequestedTheme value for the element. This is the default.
            </summary>
        </member>
        <member name="F:DevToys.Api.AvailableApplicationTheme.Light">
            <summary>
            Use the **Light** default theme.
            </summary>
        </member>
        <member name="F:DevToys.Api.AvailableApplicationTheme.Dark">
            <summary>
            Use the **Dark** default theme.
            </summary>
        </member>
        <member name="T:DevToys.Api.IThemeListener">
            <summary>
            Provides information about the application theme.
            </summary>
        </member>
        <member name="P:DevToys.Api.IThemeListener.CurrentSystemTheme">
            <summary>
            Gets the current operating system theme.
            </summary>
        </member>
        <member name="P:DevToys.Api.IThemeListener.CurrentAppTheme">
            <summary>
            Gets the current app theme defined in the app settings.
            </summary>
        </member>
        <member name="P:DevToys.Api.IThemeListener.ActualAppTheme">
            <summary>
            Gets the actual theme applied in the app.
            </summary>
        </member>
        <member name="P:DevToys.Api.IThemeListener.IsHighContrast">
            <summary>
            Gets a value indicating whether the current theme is high contrast.
            </summary>
        </member>
        <member name="P:DevToys.Api.IThemeListener.IsCompactMode">
            <summary>
            Gets a value indicating whether the UI should be in compact mode.
            </summary>
        </member>
        <member name="P:DevToys.Api.IThemeListener.UserIsCompactModePreference">
            <summary>
            Gets a value indicating whether the customer wish to be in compact mode.
            </summary>
        </member>
        <member name="P:DevToys.Api.IThemeListener.UseLessAnimations">
            <summary>
            Gets a value indicating whether the app should use less animations.
            </summary>
        </member>
        <member name="E:DevToys.Api.IThemeListener.ThemeChanged">
            <summary>
            Raised when the theme has changed.
            </summary>
        </member>
        <member name="M:DevToys.Api.IThemeListener.ApplyDesiredColorTheme">
            <summary>
            Change the color theme of the app based on <see cref="P:DevToys.Api.IThemeListener.CurrentSystemTheme"/> and <see cref="P:DevToys.Api.IThemeListener.CurrentAppTheme"/>.
            </summary>
        </member>
        <member name="T:DevToys.Api.AsyncLazy`1">
            <summary>
            Represents an asynchronous lazy initialization.
            </summary>
            <typeparam name="T">The type of the value being lazily initialized.</typeparam>
        </member>
        <member name="M:DevToys.Api.AsyncLazy`1.#ctor(`0)">
            <summary>
            Creates a new instance of the <see cref="T:DevToys.Api.AsyncLazy`1"/> class with the specified value.
            </summary>
            <param name="value">The value to initialize the <see cref="T:DevToys.Api.AsyncLazy`1"/> instance with.</param>
        </member>
        <member name="M:DevToys.Api.AsyncLazy`1.#ctor(System.Func{`0})">
            <summary>
            Creates a new instance of the <see cref="T:DevToys.Api.AsyncLazy`1"/> class with the specified value factory.
            </summary>
            <param name="valueFactory">The delegate that represents the value factory.</param>
        </member>
        <member name="M:DevToys.Api.AsyncLazy`1.#ctor(System.Func{`0},System.Boolean)">
            <summary>
            Creates a new instance of the <see cref="T:DevToys.Api.AsyncLazy`1"/> class with the specified value factory and thread safety option.
            </summary>
            <param name="valueFactory">The delegate that represents the value factory.</param>
            <param name="isThreadSafe">A boolean value indicating whether the lazy initialization is thread-safe.</param>
        </member>
        <member name="M:DevToys.Api.AsyncLazy`1.#ctor(System.Func{`0},System.Threading.LazyThreadSafetyMode)">
            <summary>
            Creates a new instance of the <see cref="T:DevToys.Api.AsyncLazy`1"/> class with the specified value factory and thread safety mode.
            </summary>
            <param name="valueFactory">The delegate that represents the value factory.</param>
            <param name="mode">The thread safety mode for the lazy initialization.</param>
        </member>
        <member name="M:DevToys.Api.AsyncLazy`1.#ctor(System.Func{System.Threading.Tasks.Task{`0}})">
            <summary>
            Creates a new instance of the <see cref="T:DevToys.Api.AsyncLazy`1"/> class with the specified asynchronous value factory.
            </summary>
            <param name="valueFactory">The delegate that represents the asynchronous value factory.</param>
        </member>
        <member name="M:DevToys.Api.AsyncLazy`1.#ctor(System.Func{System.Threading.Tasks.Task{`0}},System.Boolean)">
            <summary>
            Creates a new instance of the <see cref="T:DevToys.Api.AsyncLazy`1"/> class with the specified asynchronous value factory and thread safety option.
            </summary>
            <param name="valueFactory">The delegate that represents the asynchronous value factory.</param>
            <param name="isThreadSafe">A boolean value indicating whether the lazy initialization is thread-safe.</param>
        </member>
        <member name="M:DevToys.Api.AsyncLazy`1.#ctor(System.Func{System.Threading.Tasks.Task{`0}},System.Threading.LazyThreadSafetyMode)">
            <summary>
            Creates a new instance of the <see cref="T:DevToys.Api.AsyncLazy`1"/> class with the specified asynchronous value factory and thread safety mode.
            </summary>
            <param name="valueFactory">The delegate that represents the asynchronous value factory.</param>
            <param name="mode">The thread safety mode for the lazy initialization.</param>
        </member>
        <member name="M:DevToys.Api.AsyncLazy`1.GetValueAsync">
            <summary>
            Gets a task that represents the asynchronous initialization of the value.
            </summary>
            <returns>A task that represents the asynchronous initialization of the value.</returns>
        </member>
        <member name="P:DevToys.Api.AsyncLazy`1.IsValueCreated">
            <summary>
            Determines whether the value has been created.
            </summary>
        </member>
        <member name="T:DevToys.Api.CancellationTokenExtension">
            <summary>
            Provides a set of helper method to play around with cancellation tokens.
            </summary>
        </member>
        <member name="M:DevToys.Api.CancellationTokenExtension.AsTask(System.Threading.CancellationToken)">
            <summary>
            Converts the <see cref="T:System.Threading.CancellationToken"/> to a <see cref="T:System.Threading.Tasks.Task"/>
            that cancels when the <see cref="T:System.Threading.CancellationToken"/> is being canceled.
            </summary>
        </member>
        <member name="T:DevToys.Api.DisposableSemaphore">
            <summary>
            Represents a semaphore that free other threads when disposing the result of the <see cref="M:DevToys.Api.DisposableSemaphore.WaitAsync(System.Threading.CancellationToken)"/> method.
            </summary>
        </member>
        <member name="P:DevToys.Api.DisposableSemaphore.Disposed">
            <summary>
            Gets a value indicating whether the semaphore has been disposed.
            </summary>
        </member>
        <member name="P:DevToys.Api.DisposableSemaphore.IsBusy">
            <summary>
            Gets a value indicating whether the semaphore is currently busy.
            </summary>
        </member>
        <member name="M:DevToys.Api.DisposableSemaphore.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:DevToys.Api.DisposableSemaphore"/> class.
            </summary>
            <param name="maxTasksCount">The maximum number of concurrent tasks that can be executed.</param>
        </member>
        <member name="M:DevToys.Api.DisposableSemaphore.Dispose">
            <summary>
            Releases all resources used by the <see cref="T:DevToys.Api.DisposableSemaphore"/>.
            </summary>
        </member>
        <member name="M:DevToys.Api.DisposableSemaphore.WaitAsync(System.Threading.CancellationToken)">
            <summary>
            Asynchronously waits for the semaphore to be available.
            </summary>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>An <see cref="T:System.IDisposable"/> object that should be disposed to release the semaphore.</returns>
        </member>
        <member name="M:DevToys.Api.DisposableSemaphore.DummyDisposable.Dispose">
            <summary>
            Releases the semaphore.
            </summary>
        </member>
        <member name="T:DevToys.Api.TaskExtensions">
            <summary>
            Provides a set of helper method to play around with threads.
            </summary>
        </member>
        <member name="M:DevToys.Api.TaskExtensions.Forget(System.Threading.Tasks.Task)">
            <summary>
            Runs a task without waiting for its result.
            </summary>
            <param name="_">The task to run.</param>
        </member>
        <member name="M:DevToys.Api.TaskExtensions.Forget``1(System.Threading.Tasks.Task{``0})">
            <summary>
            Runs a task without waiting for its result.
            </summary>
            <typeparam name="T">The type of the task result.</typeparam>
            <param name="_">The task to run.</param>
        </member>
        <member name="M:DevToys.Api.TaskExtensions.Forget(System.Threading.Tasks.ValueTask)">
            <summary>
            Runs a task without waiting for its result.
            </summary>
            <param name="_">The task to run.</param>
        </member>
        <member name="M:DevToys.Api.TaskExtensions.Forget``1(System.Threading.Tasks.ValueTask{``0})">
            <summary>
            Runs a task without waiting for its result.
            </summary>
            <typeparam name="T">The type of the task result.</typeparam>
            <param name="_">The task to run.</param>
        </member>
        <member name="M:DevToys.Api.TaskExtensions.ForgetSafely(System.Threading.Tasks.Task,System.Action{System.Exception})">
            <summary>
            Runs a task without waiting for its result. Swallows or handle any exception caused by the task.
            </summary>
            <param name="task">The task to run.</param>
            <param name="errorHandler">The action to run when an exception is caught.</param>
        </member>
        <member name="M:DevToys.Api.TaskExtensions.ForgetSafely(System.Threading.Tasks.ValueTask,System.Action{System.Exception})">
            <summary>
            Runs a task without waiting for its result. Swallows or handle any exception caused by the task.
            </summary>
            <param name="task">The task to run.</param>
            <param name="errorHandler">The action to run when an exception is caught.</param>
        </member>
        <member name="M:DevToys.Api.TaskExtensions.CompleteOnCurrentThread(System.Threading.Tasks.Task)">
            <summary>
            Gets the result of the task synchronously, on the current thread.
            </summary>
            <param name="task">The task to complete.</param>
        </member>
        <member name="M:DevToys.Api.TaskExtensions.CompleteOnCurrentThread``1(System.Threading.Tasks.Task{``0})">
            <summary>
            Gets the result of the task synchronously, on the current thread.
            </summary>
            <typeparam name="T">The type of the task result.</typeparam>
            <param name="task">The task to complete.</param>
            <returns>The result of the task.</returns>
        </member>
        <member name="T:DevToys.Api.TaskSchedulerAwaiter">
            <summary>
            An awaiter returned from <see cref="M:DevToys.Api.TaskSchedulerAwaiter.GetAwaiter"/>.
            </summary>
        </member>
        <member name="M:DevToys.Api.TaskSchedulerAwaiter.SwitchOffMainThreadAsync(System.Threading.CancellationToken)">
            <summary>
            Switches the execution context off the main thread asynchronously.
            </summary>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to observe while waiting for the task to complete.</param>
            <returns>A <see cref="T:DevToys.Api.TaskSchedulerAwaiter"/> configured to the appropriate <see cref="T:System.Threading.Tasks.TaskScheduler"/>.</returns>
            <exception cref="T:System.OperationCanceledException">The token has had cancellation requested.</exception>
        </member>
        <member name="F:DevToys.Api.TaskSchedulerAwaiter._scheduler">
            <summary>
            The scheduler for continuations.
            </summary>
        </member>
        <member name="F:DevToys.Api.TaskSchedulerAwaiter._alwaysYield">
            <summary>
            A value indicating whether <see cref="P:DevToys.Api.TaskSchedulerAwaiter.IsCompleted"/>
            should always return false.
            </summary>
        </member>
        <member name="M:DevToys.Api.TaskSchedulerAwaiter.#ctor(System.Threading.Tasks.TaskScheduler,System.Threading.CancellationToken,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:DevToys.Api.TaskSchedulerAwaiter"/> struct.
            </summary>
            <param name="scheduler">The scheduler for continuations.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to observe while waiting for the task to complete.</param>
            <param name="alwaysYield">A value indicating whether the caller should yield even if
            already executing on the desired task scheduler.</param>
        </member>
        <member name="M:DevToys.Api.TaskSchedulerAwaiter.GetAwaiter">
            <summary>
            Gets the <see cref="T:DevToys.Api.TaskSchedulerAwaiter"/>.
            </summary>
            <returns>
            Returns this instance.
            </returns>
        </member>
        <member name="P:DevToys.Api.TaskSchedulerAwaiter.IsCompleted">
            <summary>
            Gets a value indicating whether no yield is necessary.
            </summary>
            <value><c>true</c> if the caller is already running on that TaskScheduler.</value>
        </member>
        <member name="M:DevToys.Api.TaskSchedulerAwaiter.OnCompleted(System.Action)">
            <summary>
            Schedules a continuation to execute using the specified task scheduler.
            </summary>
            <param name="continuation">The delegate to invoke.</param>
        </member>
        <member name="M:DevToys.Api.TaskSchedulerAwaiter.UnsafeOnCompleted(System.Action)">
            <summary>
            Schedules a continuation to execute using the specified task scheduler
            without capturing the ExecutionContext.
            </summary>
            <param name="continuation">The action.</param>
        </member>
        <member name="M:DevToys.Api.TaskSchedulerAwaiter.GetResult">
            <summary>
            Does nothing.
            </summary>
        </member>
        <member name="T:DevToys.Api.IDataGridRow`1">
            <summary>
            Represents a data grid row with optional detail information.
            </summary>
            <typeparam name="T">The type of the detail information.</typeparam>
        </member>
        <member name="P:DevToys.Api.IDataGridRow`1.Details">
            <summary>
            Gets the element to display as detail information in the row.
            </summary>
        </member>
        <member name="T:DevToys.Api.IMefProvider">
            <summary>
            Provides a way to import MEF components on the fly.
            </summary>
        </member>
        <member name="M:DevToys.Api.IMefProvider.Import``1">
            <summary>
            Imports the given type.
            </summary>
        </member>
        <member name="M:DevToys.Api.IMefProvider.ImportMany``2">
            <summary>
            Imports the given type.
            </summary>
        </member>
        <member name="M:DevToys.Api.IMefProvider.SatisfyImports(System.Object)">
            <summary>
            Satisfies the imports of the specified <paramref name="object"/> exactly once and they will not ever be recomposed.
            </summary>
            <param name="object">The object containing MEF components to import.</param>
        </member>
        <member name="T:DevToys.Api.ISettingsProvider">
            <summary>
            Provides a set of methods to manage the application's settings.
            </summary>
        </member>
        <member name="E:DevToys.Api.ISettingsProvider.SettingChanged">
            <summary>
            Raised when a setting value has changed.
            </summary>
        </member>
        <member name="M:DevToys.Api.ISettingsProvider.GetSetting``1(DevToys.Api.SettingDefinition{``0})">
            <summary>
            Gets the value of a defined setting.
            </summary>
            <typeparam name="T">The type of value that will be retrieved.</typeparam>
            <param name="settingDefinition">The <see cref="T:DevToys.Api.SettingDefinition`1"/> that defines the targeted setting.</param>
            <returns>Return the value of the setting or its default value.</returns>
        </member>
        <member name="M:DevToys.Api.ISettingsProvider.SetSetting``1(DevToys.Api.SettingDefinition{``0},``0)">
            <summary>
            Sets the value of a given setting.
            </summary>
            <typeparam name="T">The type of value that will be set.</typeparam>
            <param name="settingDefinition">The <see cref="T:DevToys.Api.SettingDefinition`1"/> that defines the targeted setting.</param>
            <param name="value">The value to set</param>
        </member>
        <member name="M:DevToys.Api.ISettingsProvider.ResetSetting``1(DevToys.Api.SettingDefinition{``0})">
            <summary>
            Resets a given setting to its default value.
            </summary>
        </member>
        <member name="T:DevToys.Api.SettingChangedEventArgs">
            <summary>
            Represents the arguments of an event raised when an app setting change.
            </summary>
        </member>
        <member name="P:DevToys.Api.SettingChangedEventArgs.SettingName">
            <summary>
            Gets the name of the setting that changed.
            </summary>
        </member>
        <member name="P:DevToys.Api.SettingChangedEventArgs.NewValue">
            <summary>
            Gets the new value of the setting.
            </summary>
        </member>
        <member name="M:DevToys.Api.SettingChangedEventArgs.#ctor(System.String,System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:DevToys.Api.SettingChangedEventArgs"/> class.
            </summary>
            <param name="settingName">The name of the setting that changed.</param>
            <param name="newValue">The new value of the setting.</param>
        </member>
        <member name="T:DevToys.Api.SettingDefinition`1">
            <summary>
            Represents the definition of a setting in the application.
            </summary>
            <typeparam name="T">The type of value of the setting</typeparam>
        </member>
        <member name="P:DevToys.Api.SettingDefinition`1.Name">
            <summary>
            Gets the name of the setting.
            </summary>
        </member>
        <member name="P:DevToys.Api.SettingDefinition`1.DefaultValue">
            <summary>
            Gets the default value of the setting.
            </summary>
        </member>
        <member name="P:DevToys.Api.SettingDefinition`1.Serialize">
            <summary>
            Gets a callback that can be used to serialize the value of the setting.
            </summary>
        </member>
        <member name="P:DevToys.Api.SettingDefinition`1.Deserialize">
            <summary>
            Gets a callback that can be used to deserialize the value of the setting.
            </summary>
        </member>
        <member name="M:DevToys.Api.SettingDefinition`1.#ctor(System.String,`0)">
            <summary>
            Initializes a new instance of the <see cref="T:DevToys.Api.SettingDefinition`1"/> structure.
            </summary>
            <param name="name">The name of the setting. Should be unique.</param>
            <param name="defaultValue">The default value of the setting.</param>
        </member>
        <member name="M:DevToys.Api.SettingDefinition`1.#ctor(System.String,`0,System.Func{`0,System.String},System.Func{System.String,`0})">
            <summary>
            Initializes a new instance of the <see cref="T:DevToys.Api.SettingDefinition`1"/> structure.
            </summary>
            <param name="name">The name of the setting. Should be unique.</param>
            <param name="defaultValue">The default value of the setting.</param>
            <param name="serialize">A callback that can be used to serialize the value of the setting.</param>
            <param name="deserialize">A callback that can be used to deserialize the value of the setting.</param>
        </member>
        <member name="M:DevToys.Api.SettingDefinition`1.Equals(System.Object)">
            <summary>
            Determines whether the specified object is equal to the current object.
            </summary>
            <param name="obj">The object to compare with the current object.</param>
            <returns>true if the specified object is equal to the current object; otherwise, false.</returns>
        </member>
        <member name="M:DevToys.Api.SettingDefinition`1.Equals(DevToys.Api.SettingDefinition{`0})">
            <summary>
            Determines whether the specified <see cref="T:DevToys.Api.SettingDefinition`1"/> is equal to the current <see cref="T:DevToys.Api.SettingDefinition`1"/>.
            </summary>
            <param name="other">The <see cref="T:DevToys.Api.SettingDefinition`1"/> to compare with the current <see cref="T:DevToys.Api.SettingDefinition`1"/>.</param>
            <returns>true if the specified <see cref="T:DevToys.Api.SettingDefinition`1"/> is equal to the current <see cref="T:DevToys.Api.SettingDefinition`1"/>; otherwise, false.</returns>
        </member>
        <member name="M:DevToys.Api.SettingDefinition`1.GetHashCode">
            <summary>
            Returns the hash code for this <see cref="T:DevToys.Api.SettingDefinition`1"/>.
            </summary>
            <returns>A 32-bit signed integer hash code.</returns>
        </member>
        <member name="M:DevToys.Api.SettingDefinition`1.op_Equality(DevToys.Api.SettingDefinition{`0},DevToys.Api.SettingDefinition{`0})">
            <summary>
            Determines whether two specified <see cref="T:DevToys.Api.SettingDefinition`1"/> objects have the same value.
            </summary>
            <param name="left">The first <see cref="T:DevToys.Api.SettingDefinition`1"/> to compare.</param>
            <param name="right">The second <see cref="T:DevToys.Api.SettingDefinition`1"/> to compare.</param>
            <returns>true if the value of left is the same as the value of right; otherwise, false.</returns>
        </member>
        <member name="M:DevToys.Api.SettingDefinition`1.op_Inequality(DevToys.Api.SettingDefinition{`0},DevToys.Api.SettingDefinition{`0})">
            <summary>
            Determines whether two specified <see cref="T:DevToys.Api.SettingDefinition`1"/> objects have different values.
            </summary>
            <param name="left">The first <see cref="T:DevToys.Api.SettingDefinition`1"/> to compare.</param>
            <param name="right">The second <see cref="T:DevToys.Api.SettingDefinition`1"/> to compare.</param>
            <returns>true if the value of left is different from the value of right; otherwise, false.</returns>
        </member>
        <member name="M:DevToys.Api.SettingDefinition`1.GenerateName(System.String)">
            <summary>
            Generates the name of the setting by using the calling assembly, namespace, and class name.
            This is used to prevent collision between various extensions that may use the same setting name.
            </summary>
        </member>
        <member name="T:DevToys.Api.Strings.ApiText.ApiText">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:DevToys.Api.Strings.ApiText.ApiText.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:DevToys.Api.Strings.ApiText.ApiText.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:DevToys.Api.Strings.ApiText.ApiText.SwitchOffDefaultText">
            <summary>
              Looks up a localized string similar to Off.
            </summary>
        </member>
        <member name="P:DevToys.Api.Strings.ApiText.ApiText.SwitchOnDefaultText">
            <summary>
              Looks up a localized string similar to On.
            </summary>
        </member>
        <member name="T:DevToys.Api.TextSpan">
            <summary>
            Represents a span in a text.
            </summary>
        </member>
        <member name="M:DevToys.Api.TextSpan.#ctor(System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:DevToys.Api.TextSpan"/> class.
            </summary>
            <param name="startPosition">The position at which the span starts.</param>
            <param name="length">The length of the span.</param>
        </member>
        <member name="P:DevToys.Api.TextSpan.StartPosition">
            <summary>
            Gets the position at which the span starts.
            </summary>
        </member>
        <member name="P:DevToys.Api.TextSpan.Length">
            <summary>
            Gets the length of the span.
            </summary>
        </member>
        <member name="P:DevToys.Api.TextSpan.EndPosition">
            <summary>
            Gets the end position of the span.
            </summary>
        </member>
        <member name="M:DevToys.Api.TextSpan.FromBounds(System.Int32,System.Int32)">
            <summary>
            Creates a new <see cref="T:DevToys.Api.TextSpan"/> from the given start and end positions.
            </summary>
            <param name="start">The position at which the span starts.</param>
            <param name="end">The position at which the span ends.</param>
        </member>
        <member name="T:DevToys.Api.ConsoleProgressBar">
            <summary>
            A progress bar for the console.
            </summary>
        </member>
        <member name="M:DevToys.Api.ConsoleProgressBar.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:DevToys.Api.ConsoleProgressBar"/> class.
            </summary>
        </member>
        <member name="M:DevToys.Api.ConsoleProgressBar.Dispose">
            <inheritdoc/>
        </member>
        <member name="M:DevToys.Api.ConsoleProgressBar.Report(System.Double)">
            <inheritdoc/>
        </member>
        <member name="T:DevToys.Api.ICommandLineTool">
            <summary>
            Represents the factory for command line tool.
            </summary>
            <remarks>
            <example>
                <code>
                    [Export(typeof(ICommandLineTool))]
                    [Name("Base64 Encode / Decoder")]
                    [CommandName(
                        Name = "base64",
                        Alias = "b64",
                        DescriptionResourceName = nameof(Strings.Base64Description),
                        ResourceManagerBaseName = "MyProject.Strings")]
                    [TargetPlatform(Platform.Windows)]  // Optional
                    [TargetPlatform(Platform.MacOS)]    // Optional
                    internal sealed class Base64CommandLineTool : ICommandLineTool
                    {
                        [CommandLineOption(Name = "file", Alias = "f", IsRequired = true, DescriptionResourceName = nameof(Strings.Base64FileOptionDescription))]
                        internal FileInfo? File { get; set; }
                        
                        [CommandLineOption(Name = "utf8", DescriptionResourceName = nameof(Strings.Utf8OptionDescription))]
                        internal bool Utf8 { get; set; } = true; // Default value is true.
                        
                        public ValueTask&lt;int&gt; InvokeAsync(ILogger logger, CancellationToken cancellationToken)
                        {
                            // [...]
                            return 0; // Exit code.
                        }
                    }
                </code>
            </example>
            </remarks>
        </member>
        <member name="M:DevToys.Api.ICommandLineTool.InvokeAsync(Microsoft.Extensions.Logging.ILogger,System.Threading.CancellationToken)">
            <summary>
            Invoked when the user ran the app using the command and options defined by the current <see cref="T:DevToys.Api.ICommandLineTool"/>.
            </summary>
            <param name="logger">A logger, for reporting relevant telemetry information about health and performance of the tool.</param>
            <param name="cancellationToken">Gets canceled when the user wants to quit the app.</param>
            <returns>An Exit Code.</returns>
            <remarks>
            Using <paramref name="logger"/>:
            - DO report errors.
            - DO report information about performance of some tasks, if relevant.
            - DO report some system information, but only if it can truly be helpful when investigating performance or compatibility issues.
            - DO NOT report what the user input in the app as it might contains user personal information.
            </remarks>
        </member>
        <member name="T:DevToys.Api.FontDefinition">
            <summary>
            Represents a font definition.
            </summary>
        </member>
        <member name="M:DevToys.Api.FontDefinition.#ctor(System.String,System.IO.Stream)">
            <summary>
            Initializes a new instance of the <see cref="T:DevToys.Api.FontDefinition"/> class.
            </summary>
            <param name="fontFamily">The font family.</param>
            <param name="fontReader">The stream to read the font file.</param>
        </member>
        <member name="P:DevToys.Api.FontDefinition.FontFamily">
            <summary>
            Gets the font family.
            </summary>
        </member>
        <member name="P:DevToys.Api.FontDefinition.FontReader">
            <summary>
            Gets the stream to read the font file.
            </summary>
        </member>
        <member name="M:DevToys.Api.FontDefinition.Dispose">
            <summary>
            Disposes the font reader.
            </summary>
        </member>
        <member name="T:DevToys.Api.IUIButton">
            <summary>
            A component that represents a button, which reacts when clicking on it.
            </summary>
        </member>
        <member name="P:DevToys.Api.IUIButton.IsAccent">
            <summary>
            Gets whether the button appearance should be accented.
            </summary>
        </member>
        <member name="P:DevToys.Api.IUIButton.IsHyperlink">
            <summary>
            Gets whether the button appearance should be a hyperlink.
            </summary>
        </member>
        <member name="P:DevToys.Api.IUIButton.Text">
            <summary>
            Gets the text to display in the button.
            </summary>
        </member>
        <member name="P:DevToys.Api.IUIButton.IconFontName">
            <summary>
            Gets the name of the font containing the icon.
            </summary>
        </member>
        <member name="P:DevToys.Api.IUIButton.IconGlyph">
            <summary>
            Gets the glyph corresponding to the icon in the <see cref="P:DevToys.Api.IUIButton.IconFontName"/>.
            </summary>
        </member>
        <member name="P:DevToys.Api.IUIButton.OnClickAction">
            <summary>
            Gets the action to run when the user clicks the button.
            </summary>
        </member>
        <member name="E:DevToys.Api.IUIButton.TextChanged">
            <summary>
            Raised when <see cref="P:DevToys.Api.IUIButton.Text"/> is changed.
            </summary>
        </member>
        <member name="E:DevToys.Api.IUIButton.IsAccentChanged">
            <summary>
            Raised when <see cref="P:DevToys.Api.IUIButton.IsAccent"/> is changed.
            </summary>
        </member>
        <member name="E:DevToys.Api.IUIButton.IconFontNameChanged">
            <summary>
            Raised when <see cref="P:DevToys.Api.IUIButton.IconFontName"/> is changed.
            </summary>
        </member>
        <member name="E:DevToys.Api.IUIButton.IconGlyphChanged">
            <summary>
            Raised when <see cref="P:DevToys.Api.IUIButton.IconGlyph"/> is changed.
            </summary>
        </member>
        <member name="T:DevToys.Api.GUI">
            <summary>
            Provides a set of extension methods for various UI components.
            </summary>
            <summary>
            Provides a set of extension methods for various UI components.
            </summary>
        </member>
        <member name="M:DevToys.Api.GUI.Button">
            <summary>
            Create a component that represents a button, which reacts when clicking on it.
            </summary>
            <returns>The created <see cref="T:DevToys.Api.IUIButton"/> instance.</returns>
        </member>
        <member name="M:DevToys.Api.GUI.Button(System.String)">
            <summary>
            Create a component that represents a button, which reacts when clicking on it.
            </summary>
            <param name="id">An optional unique identifier for this UI element.</param>
            <returns>The created <see cref="T:DevToys.Api.IUIButton"/> instance.</returns>
        </member>
        <member name="M:DevToys.Api.GUI.Button(System.String,System.String)">
            <summary>
            Create a component that represents a button, which reacts when clicking on it.
            </summary>
            <param name="id">An optional unique identifier for this UI element.</param>
            <param name="text">The text to display in the button.</param>
        </member>
        <member name="M:DevToys.Api.GUI.Text(DevToys.Api.IUIButton,System.String)">
            <summary>
            Sets the <see cref="P:DevToys.Api.IUIButton.Text"/> of the button.
            </summary>
            <param name="element">The <see cref="T:DevToys.Api.IUIButton"/> instance.</param>
            <param name="text">The text to display in the button.</param>
            <returns>The updated <see cref="T:DevToys.Api.IUIButton"/> instance.</returns>
        </member>
        <member name="M:DevToys.Api.GUI.OnClick(DevToys.Api.IUIButton,System.Func{System.Threading.Tasks.ValueTask})">
            <summary>
            Sets the action to run when clicking on the button.
            </summary>
            <param name="element">The <see cref="T:DevToys.Api.IUIButton"/> instance.</param>
            <param name="actionOnClick">The action to run when clicking on the button.</param>
            <returns>The updated <see cref="T:DevToys.Api.IUIButton"/> instance.</returns>
        </member>
        <member name="M:DevToys.Api.GUI.OnClick(DevToys.Api.IUIButton,System.Action)">
            <summary>
            Sets the action to run when clicking on the button.
            </summary>
            <param name="element">The <see cref="T:DevToys.Api.IUIButton"/> instance.</param>
            <param name="actionOnClick">The action to run when clicking on the button.</param>
            <returns>The updated <see cref="T:DevToys.Api.IUIButton"/> instance.</returns>
        </member>
        <member name="M:DevToys.Api.GUI.AccentAppearance(DevToys.Api.IUIButton)">
            <summary>
            Sets the button to appear as accented.
            </summary>
            <param name="element">The <see cref="T:DevToys.Api.IUIButton"/> instance.</param>
            <returns>The updated <see cref="T:DevToys.Api.IUIButton"/> instance.</returns>
        </member>
        <member name="M:DevToys.Api.GUI.HyperlinkAppearance(DevToys.Api.IUIButton)">
            <summary>
            Sets the button to appear as a hyperlink.
            </summary>
            <param name="element">The <see cref="T:DevToys.Api.IUIButton"/> instance.</param>
            <returns>The updated <see cref="T:DevToys.Api.IUIButton"/> instance.</returns>
        </member>
        <member name="M:DevToys.Api.GUI.NeutralAppearance(DevToys.Api.IUIButton)">
            <summary>
            Sets the button to appear as neutral.
            </summary>
            <param name="element">The <see cref="T:DevToys.Api.IUIButton"/> instance.</param>
            <returns>The updated <see cref="T:DevToys.Api.IUIButton"/> instance.</returns>
        </member>
        <member name="M:DevToys.Api.GUI.Icon(DevToys.Api.IUIButton,System.String,System.Char)">
            <summary>
            Sets the icon of the button.
            </summary>
            <param name="element">The <see cref="T:DevToys.Api.IUIButton"/> instance.</param>
            <param name="fontName">The name of the font containing the icon.</param>
            <param name="glyph">The glyph corresponding to the icon in the <paramref name="fontName"/>.</param>
            <returns>The updated <see cref="T:DevToys.Api.IUIButton"/> instance.</returns>
        </member>
        <member name="M:DevToys.Api.GUI.Card(DevToys.Api.IUIElement)">
            <summary>
            A component that represents an empty card and <see cref="T:DevToys.Api.IUIElement"/> for the option value.
            </summary>
            <param name="uiElement">The UI element to display.</param>
        </member>
        <member name="M:DevToys.Api.GUI.Card(System.String,DevToys.Api.IUIElement)">
            <summary>
            A component that represents an empty card and <see cref="T:DevToys.Api.IUIElement"/> for the option value.
            </summary>
            <param name="id">An optional unique identifier for this UI element.</param>
            <param name="uiElement">The UI element to display.</param>
        </member>
        <member name="M:DevToys.Api.GUI.DataGrid">
            <summary>
            A component that represents a grid that can display data in with rows and columns.
            </summary>
        </member>
        <member name="M:DevToys.Api.GUI.DataGrid(System.String)">
            <summary>
            A component that represents a grid that can display data in with rows and columns.
            </summary>
            <param name="id">An optional unique identifier for this UI element.</param>
        </member>
        <member name="M:DevToys.Api.GUI.WithColumns(DevToys.Api.IUIDataGrid,System.String[])">
            <summary>
            Sets the title of each column in the data grid.
            </summary>
        </member>
        <member name="M:DevToys.Api.GUI.WithRows(DevToys.Api.IUIDataGrid,DevToys.Api.IUIDataGridRow[])">
            <summary>
            Sets the <see cref="P:DevToys.Api.IUIDataGrid.Rows"/> of the data grid.
            </summary>
        </member>
        <member name="M:DevToys.Api.GUI.OnRowSelected(DevToys.Api.IUIDataGrid,System.Func{DevToys.Api.IUIDataGridRow,System.Threading.Tasks.ValueTask})">
            <summary>
            Sets the action to run when selecting an item in the data grid.
            </summary>
        </member>
        <member name="M:DevToys.Api.GUI.OnRowSelected(DevToys.Api.IUIDataGrid,System.Action{DevToys.Api.IUIDataGridRow})">
            <summary>
            Sets the action to run when selecting an item in the data grid.
            </summary>
        </member>
        <member name="M:DevToys.Api.GUI.Select(DevToys.Api.IUIDataGrid,DevToys.Api.IUIDataGridRow)">
            <summary>
            Sets the <see cref="T:DevToys.Api.IUIDataGridRow"/> that should be selected in the data grid.
            If <paramref name="row"/> is null or does not exist in the data grid, no row will be selected.
            </summary>
        </member>
        <member name="M:DevToys.Api.GUI.Select(DevToys.Api.IUIDataGrid,System.Int32)">
            <summary>
            Sets the <see cref="T:DevToys.Api.IUIDataGridRow"/> that should be selected in the data grid, using its index in the data grid.
            If <paramref name="index"/> smaller or greater than the amount of rows in the data grid, no row will be selected.
            </summary>
        </member>
        <member name="M:DevToys.Api.GUI.AllowSelectItem(DevToys.Api.IUIDataGrid)">
            <summary>
            Allows the user to select a row in the data grid.
            </summary>
        </member>
        <member name="M:DevToys.Api.GUI.ForbidSelectItem(DevToys.Api.IUIDataGrid)">
            <summary>
            Prevents the user from selecting a row in the data grid.
            </summary>
        </member>
        <member name="M:DevToys.Api.GUI.Extendable(DevToys.Api.IUIDataGrid)">
            <summary>
            Indicates that the control can be extended to take the size of the whole tool boundaries.
            </summary>
            <remarks>
            When <see cref="P:DevToys.Api.IUIElement.IsVisible"/> is false and that the element is in full screen mode, the element goes back to normal mode.
            </remarks>
        </member>
        <member name="M:DevToys.Api.GUI.NotExtendable(DevToys.Api.IUIDataGrid)">
            <summary>
            Indicates that the control can not be extended to take the size of the whole tool boundaries.
            </summary>
        </member>
        <member name="M:DevToys.Api.GUI.CommandBarExtraContent(DevToys.Api.IUIDataGrid,DevToys.Api.IUIElement)">
            <summary>
            Defines an additional element to display in the command bar.
            </summary>
        </member>
        <member name="M:DevToys.Api.GUI.Cell(System.String)">
            <summary>
            Create component that represents a cell in a <see cref="T:DevToys.Api.IUIDataGridRow"/>.
            </summary>
            <param name="text">The text to display in the cell.</param>
        </member>
        <member name="M:DevToys.Api.GUI.Cell(DevToys.Api.IUIElement)">
            <summary>
            Create component that represents a cell in a <see cref="T:DevToys.Api.IUIDataGridRow"/>.
            </summary>
            <param name="uiElement">The element to display in the cell.</param>
        </member>
        <member name="M:DevToys.Api.GUI.Row(System.Object,DevToys.Api.IUIDataGridCell[])">
            <summary>
            Create component that represents an item in a list.
            </summary>
            <param name="value">The value associated to the item.</param>
            <param name="cells">The cells to display in the row.</param>
        </member>
        <member name="M:DevToys.Api.GUI.Row(System.Object,System.String[])">
            <summary>
            Create component that represents an item in a list.
            </summary>
            <param name="value">The value associated to the item.</param>
            <param name="cells">The cells to display in the row.</param>
        </member>
        <member name="M:DevToys.Api.GUI.Row(System.Object,DevToys.Api.IUIElement,DevToys.Api.IUIDataGridCell[])">
            <summary>
            Create component that represents an item in a list.
            </summary>
            <param name="value">The value associated to the item.</param>
            <param name="details">The element to display as detail information in the row.</param>
            <param name="cells">The cells to display in the row.</param>
        </member>
        <member name="M:DevToys.Api.GUI.Row(System.Object,DevToys.Api.IUIElement,System.String[])">
            <summary>
            Create component that represents an item in a list.
            </summary>
            <param name="value">The value associated to the item.</param>
            <param name="details">The element to display as detail information in the row.</param>
            <param name="cells">The cells to display in the row.</param>
        </member>
        <member name="M:DevToys.Api.GUI.DiffTextInput">
            <summary>
            A component that can be used to display side by side or inlined texts and highlight differences between them.
            </summary>
        </member>
        <member name="M:DevToys.Api.GUI.DiffTextInput(System.String)">
            <summary>
            A component that can be used to display side by side or inlined texts and highlight differences between them.
            </summary>
            <param name="id">An optional unique identifier for this UI element.</param>
        </member>
        <member name="M:DevToys.Api.GUI.OriginalText``1(``0,System.String)">
            <summary>
            Sets the unformatted original text of the control to compare with the modified one.
            </summary>
        </member>
        <member name="M:DevToys.Api.GUI.ModifiedText``1(``0,System.String)">
            <summary>
            Sets the unformatted modified text of the control to compare with the original one.
            </summary>
        </member>
        <member name="M:DevToys.Api.GUI.InlineView(DevToys.Api.IUIDiffTextInput)">
            <summary>
            Sets the <see cref="P:DevToys.Api.IUIDiffTextInput.InlineMode"/> to true.
            </summary>
        </member>
        <member name="M:DevToys.Api.GUI.SplitView(DevToys.Api.IUIDiffTextInput)">
            <summary>
            Sets the <see cref="P:DevToys.Api.IUIDiffTextInput.InlineMode"/> to false.
            </summary>
        </member>
        <member name="M:DevToys.Api.GUI.Extendable(DevToys.Api.IUIDiffTextInput)">
            <summary>
            Indicates that the control can be extended to take the size of the whole tool boundaries.
            </summary>
            <remarks>
            When <see cref="P:DevToys.Api.IUIElement.IsVisible"/> is false and that the element is in full screen mode, the element goes back to normal mode.
            </remarks>
        </member>
        <member name="M:DevToys.Api.GUI.NotExtendable(DevToys.Api.IUIDiffTextInput)">
            <summary>
            Indicates that the control can not be extended to take the size of the whole tool boundaries.
            </summary>
        </member>
        <member name="M:DevToys.Api.GUI.DropDownButton">
            <summary>
            Create a component that represents a drop down button where the user can click on a menu item.
            </summary>
        </member>
        <member name="M:DevToys.Api.GUI.DropDownButton(System.String)">
            <summary>
            Create a component that represents a drop down button where the user can click on a menu item.
            </summary>
            <param name="id">An optional unique identifier for this UI element.</param>
        </member>
        <member name="M:DevToys.Api.GUI.DropDownButton(System.String,System.String)">
            <summary>
            Create a component that represents a drop down button where the user can click on a menu item.
            </summary>
            <param name="id">An optional unique identifier for this UI element.</param>
            <param name="text">The text to display in the drop down button.</param>
        </member>
        <member name="M:DevToys.Api.GUI.Text(DevToys.Api.IUIDropDownButton,System.String)">
            <summary>
            Sets the <see cref="P:DevToys.Api.IUIDropDownButton.Text"/> of the drop down button.
            </summary>
        </member>
        <member name="M:DevToys.Api.GUI.Icon(DevToys.Api.IUIDropDownButton,System.String,System.Char)">
            <summary>
            Sets the icon of the drop down button.
            </summary>
        </member>
        <member name="M:DevToys.Api.GUI.WithMenuItems(DevToys.Api.IUIDropDownButton,DevToys.Api.IUIDropDownMenuItem[])">
            <summary>
            Sets the <see cref="P:DevToys.Api.IUIDropDownButton.MenuItems"/> in the drop down button.
            </summary>
        </member>
        <member name="M:DevToys.Api.GUI.Item(System.Object)">
            <summary>
            Create component that represents an item in a drop down list.
            </summary>
            <param name="value">The value associated to the item. It will be used to generate the text to display in the item</param>
        </member>
        <member name="M:DevToys.Api.GUI.Item(System.String,System.Object)">
            <summary>
            Create component that represents an item in a drop down list.
            </summary>
            <param name="text">The text to display in the item.</param>
            <param name="value">The value associated to the item.</param>
        </member>
        <member name="M:DevToys.Api.GUI.DropDownMenuItem">
            <summary>
            Create a component that represents a menu item, which reacts when clicking on it.
            </summary>
        </member>
        <member name="M:DevToys.Api.GUI.DropDownMenuItem(System.String)">
            <summary>
            Create a component that represents a menu item, which reacts when clicking on it.
            </summary>
            <param name="text">The text to display in the menu item.</param>
        </member>
        <member name="M:DevToys.Api.GUI.Text(DevToys.Api.IUIDropDownMenuItem,System.String)">
            <summary>
            Sets the <see cref="P:DevToys.Api.IUIDropDownMenuItem.Text"/> of the menu item.
            </summary>
        </member>
        <member name="M:DevToys.Api.GUI.OnClick(DevToys.Api.IUIDropDownMenuItem,System.Func{System.Threading.Tasks.ValueTask})">
            <summary>
            Sets the action to run when clicking on the menu item.
            </summary>
        </member>
        <member name="M:DevToys.Api.GUI.OnClick(DevToys.Api.IUIDropDownMenuItem,System.Action)">
            <summary>
            Sets the action to run when clicking on the menu item.
            </summary>
        </member>
        <member name="M:DevToys.Api.GUI.Icon(DevToys.Api.IUIDropDownMenuItem,System.String,System.Char)">
            <summary>
            Sets the icon of the menu item.
            </summary>
        </member>
        <member name="M:DevToys.Api.GUI.Hide``1(``0)">
            <summary>
            Hides the element.
            </summary>
        </member>
        <member name="M:DevToys.Api.GUI.Show``1(``0)">
            <summary>
            Shows the element.
            </summary>
        </member>
        <member name="M:DevToys.Api.GUI.Disable``1(``0)">
            <summary>
            Disable the element and its child elements.
            </summary>
        </member>
        <member name="M:DevToys.Api.GUI.Enable``1(``0)">
            <summary>
            Enable the element and its child elements.
            </summary>
        </member>
        <member name="M:DevToys.Api.GUI.AlignHorizontally``1(``0,DevToys.Api.UIHorizontalAlignment)">
            <summary>
            Align the element horizontally.
            </summary>
        </member>
        <member name="M:DevToys.Api.GUI.AlignVertically``1(``0,DevToys.Api.UIVerticalAlignment)">
            <summary>
            Align the element vertically.
            </summary>
        </member>
        <member name="M:DevToys.Api.GUI.FileSelector">
            <summary>
            Create a component that represents a drop zone and selector for files, folders, images coming from the clipboard.
            </summary>
        </member>
        <member name="M:DevToys.Api.GUI.FileSelector(System.String)">
            <summary>
            Create a component that represents a drop zone and selector for files, folders, images coming from the clipboard.
            </summary>
            <param name="id">An optional unique identifier for this UI element.</param>
        </member>
        <member name="M:DevToys.Api.GUI.WithFiles(DevToys.Api.IUIFileSelector,DevToys.Api.SandboxedFileReader[])">
            <summary>
            Sets selected files.
            </summary>
            <remarks>The items contain a stream. It won't be disposed automatically. It is important to dispose the stream yourself, when not needed anymore</remarks>
        </member>
        <member name="M:DevToys.Api.GUI.OnFilesSelected(DevToys.Api.IUIFileSelector,System.Func{DevToys.Api.SandboxedFileReader[],System.Threading.Tasks.ValueTask})">
            <summary>
            Sets the action to run when the user selected file(s).
            </summary>
            <remarks>The items contain a stream. It won't be disposed automatically. It is important to dispose the stream yourself, when not needed anymore</remarks>
        </member>
        <member name="M:DevToys.Api.GUI.OnFilesSelected(DevToys.Api.IUIFileSelector,System.Action{DevToys.Api.SandboxedFileReader[]})">
            <summary>
            Sets the action to run when the user selected file(s).
            </summary>
            <remarks>The items contain a stream. It won't be disposed automatically. It is important to dispose the stream yourself, when not needed anymore</remarks>
        </member>
        <member name="M:DevToys.Api.GUI.LimitFileTypesTo(DevToys.Api.IUIFileSelector,System.String[])">
            <summary>
            Sets the list of file extensions allowed to be selected. An empty list of file extensions indicates any kind of file.
            </summary>
        </member>
        <member name="M:DevToys.Api.GUI.LimitFileTypesToImages(DevToys.Api.IUIFileSelector)">
            <summary>
            Limits the list of selectable files to known supported image formats as defined in <see cref="F:DevToys.Api.PredefinedSupportedImageFormats.ImageFileExtensions"/>.
            </summary>
        </member>
        <member name="M:DevToys.Api.GUI.CanSelectOneFile(DevToys.Api.IUIFileSelector)">
            <summary>
            Allows the user to select only one file at once.
            </summary>
        </member>
        <member name="M:DevToys.Api.GUI.CanSelectManyFiles(DevToys.Api.IUIFileSelector)">
            <summary>
            Allows the user to select multiple files at once.
            </summary>
        </member>
        <member name="P:DevToys.Api.GUI.Auto">
            <summary>
            A grid length definition that automatically fits to its content.
            </summary>
        </member>
        <member name="M:DevToys.Api.GUI.Fraction(System.Int32)">
            <summary>
            A grid length definition that is sized as a weighted proportion of available space.
            </summary>
        </member>
        <member name="M:DevToys.Api.GUI.Grid">
            <summary>
            A component provides a flexible grid area that consists of columns and rows.
            Child elements of the Grid are measured and arranged according to their row/column assignments and other logic.
            </summary>
        </member>
        <member name="M:DevToys.Api.GUI.Grid(System.String)">
            <summary>
            A component provides a flexible grid area that consists of columns and rows.
            Child elements of the Grid are measured and arranged according to their row/column assignments and other logic.
            </summary>
            <param name="id">An optional unique identifier for this UI element.</param>
        </member>
        <member name="M:DevToys.Api.GUI.Rows(DevToys.Api.IUIGrid,DevToys.Api.UIGridLength[])">
            <summary>
            Sets the rows.
            </summary>
        </member>
        <member name="M:DevToys.Api.GUI.Rows``1(DevToys.Api.IUIGrid,System.ValueTuple{``0,DevToys.Api.UIGridLength}[])">
            <summary>
            Sets the rows.
            </summary>
        </member>
        <member name="M:DevToys.Api.GUI.Columns(DevToys.Api.IUIGrid,DevToys.Api.UIGridLength[])">
            <summary>
            Sets the columns.
            </summary>
        </member>
        <member name="M:DevToys.Api.GUI.Columns``1(DevToys.Api.IUIGrid,System.ValueTuple{``0,DevToys.Api.UIGridLength}[])">
            <summary>
            Sets the columns.
            </summary>
        </member>
        <member name="M:DevToys.Api.GUI.Cells(DevToys.Api.IUIGrid,DevToys.Api.IUIGridCell[])">
            <summary>
            Sets the cells in the grid.
            </summary>
        </member>
        <member name="M:DevToys.Api.GUI.RowNoSpacing(DevToys.Api.IUIGrid)">
            <summary>
            Sets no spacing between rows.
            </summary>
        </member>
        <member name="M:DevToys.Api.GUI.RowSmallSpacing(DevToys.Api.IUIGrid)">
            <summary>
            Sets a small spacing between rows.
            </summary>
        </member>
        <member name="M:DevToys.Api.GUI.RowMediumSpacing(DevToys.Api.IUIGrid)">
            <summary>
            Sets a medium spacing between rows.
            </summary>
        </member>
        <member name="M:DevToys.Api.GUI.RowLargeSpacing(DevToys.Api.IUIGrid)">
            <summary>
            Sets a large spacing between rows.
            </summary>
        </member>
        <member name="M:DevToys.Api.GUI.ColumnNoSpacing(DevToys.Api.IUIGrid)">
            <summary>
            Sets no spacing between columns.
            </summary>
        </member>
        <member name="M:DevToys.Api.GUI.ColumnSmallSpacing(DevToys.Api.IUIGrid)">
            <summary>
            Sets a small spacing between columns.
            </summary>
        </member>
        <member name="M:DevToys.Api.GUI.ColumnMediumSpacing(DevToys.Api.IUIGrid)">
            <summary>
            Sets a medium spacing between columns.
            </summary>
        </member>
        <member name="M:DevToys.Api.GUI.ColumnLargeSpacing(DevToys.Api.IUIGrid)">
            <summary>
            Sets a large spacing between columns.
            </summary>
        </member>
        <member name="M:DevToys.Api.GUI.Cell">
            <summary>
            Create a component hosted by a <see cref="T:DevToys.Api.IUIGrid"/> that represents a cell in a flexible grid.
            </summary>
        </member>
        <member name="M:DevToys.Api.GUI.Cell(System.Int32,System.Int32,System.Int32,System.Int32,DevToys.Api.IUIElement)">
            <summary>
            Create a component hosted by a <see cref="T:DevToys.Api.IUIGrid"/> that represents a cell in a flexible grid.
            </summary>
            <param name="row">The row alignment of the cell.</param>
            <param name="column">The column alignment of the cell.</param>
            <param name="rowSpan">A value that indicates the total number of rows that the cell content spans within the parent grid.</param>
            <param name="columnSpan">A value that indicates the total number of columns that the cell content spans within the parent grid.</param>
            <param name="child">The child element to display in the cell.</param>
        </member>
        <member name="M:DevToys.Api.GUI.Cell``2(``0,``1,DevToys.Api.IUIElement)">
            <summary>
            Create a component hosted by a <see cref="T:DevToys.Api.IUIGrid"/> that represents a cell in a flexible grid.
            </summary>
            <param name="row">The row where the cell should be placed.</param>
            <param name="column">The column where the cell should be placed.</param>
            <param name="child">The child element to display in the cell.</param>
        </member>
        <member name="M:DevToys.Api.GUI.Cell``2(``0,``0,``1,``1,DevToys.Api.IUIElement)">
            <summary>
            Create a component hosted by a <see cref="T:DevToys.Api.IUIGrid"/> that represents a cell in a flexible grid.
            </summary>
            <param name="firstRow">The first row where the cell should appear.</param>
            <param name="lastRow">The last row where the cell should appear.</param>
            <param name="firstColumn">The first column where the cell should appear.</param>
            <param name="lastColumn">The last column where the cell should appear.</param>
            <param name="child">The child element to display in the cell.</param>
        </member>
        <member name="M:DevToys.Api.GUI.Row(DevToys.Api.IUIGridCell,System.Int32)">
            <summary>
            Sets the row alignment of the cell.
            </summary>
        </member>
        <member name="M:DevToys.Api.GUI.Column(DevToys.Api.IUIGridCell,System.Int32)">
            <summary>
            Sets the column alignment of the cell.
            </summary>
        </member>
        <member name="M:DevToys.Api.GUI.RowSpan(DevToys.Api.IUIGridCell,System.Int32)">
            <summary>
            Sets a value that indicates the total number of rows that the cell content spans within the parent grid.
            </summary>
        </member>
        <member name="M:DevToys.Api.GUI.ColumnSpan(DevToys.Api.IUIGridCell,System.Int32)">
            <summary>
            Sets a value that indicates the total number of columns that the cell content spans within the parent grid.
            </summary>
        </member>
        <member name="M:DevToys.Api.GUI.WithChild(DevToys.Api.IUIGridCell,DevToys.Api.IUIElement)">
            <summary>
            Sets the child element to display in the cell.
            </summary>
        </member>
        <member name="M:DevToys.Api.GUI.Icon(System.String,System.Char)">
            <summary>
            A component that represents an icon.
            </summary>
            <param name="fontName">The name of the font containing the icon.</param>
            <param name="glyph">The glyph corresponding to the icon</param>
        </member>
        <member name="M:DevToys.Api.GUI.Icon(System.String,System.String,System.Char)">
            <summary>
            A component that represents an icon.
            </summary>
            <param name="id">An optional unique identifier for this UI element.</param>
            <param name="fontName">The name of the font containing the icon.</param>
            <param name="glyph">The glyph corresponding to the icon</param>
        </member>
        <member name="M:DevToys.Api.GUI.FontName(DevToys.Api.IUIIcon,System.String)">
            <summary>
            Sets the <see cref="P:DevToys.Api.IUIIcon.FontName"/> of the icon.
            </summary>
        </member>
        <member name="M:DevToys.Api.GUI.Glyph(DevToys.Api.IUIIcon,System.Char)">
            <summary>
            Sets the <see cref="P:DevToys.Api.IUIIcon.Glyph"/> of the icon.
            </summary>
        </member>
        <member name="M:DevToys.Api.GUI.Size(DevToys.Api.IUIIcon,System.Int32)">
            <summary>
            Sets the <see cref="P:DevToys.Api.IUIIcon.Size"/> of the icon.
            </summary>
        </member>
        <member name="M:DevToys.Api.GUI.ImageViewer">
            <summary>
            A component that displays an image and allows the user to perform some read-only actions on it.
            By default, image viewer supports BMP, GIF, JPEG, PBM, PNG, TIFF, TGA, WEBP, SVG formats.
            </summary>
            <returns>The created <see cref="T:DevToys.Api.IUIImageViewer"/> instance.</returns>
        </member>
        <member name="M:DevToys.Api.GUI.ImageViewer(System.String)">
            <summary>
            A component that displays an image and allows the user to perform some read-only actions on it.
            By default, image viewer supports BMP, GIF, JPEG, PBM, PNG, TIFF, TGA, WEBP, SVG formats.
            </summary>
            <param name="id">An optional unique identifier for this UI element.</param>
            <returns>The created <see cref="T:DevToys.Api.IUIImageViewer"/> instance.</returns>
        </member>
        <member name="M:DevToys.Api.GUI.WithFile(DevToys.Api.IUIImageViewer,System.IO.FileInfo)">
            <summary>
            Sets the <see cref="P:DevToys.Api.IUIImageViewer.ImageSource"/> from a <see cref="T:System.IO.FileInfo"/>.
            </summary>
            <param name="element">The <see cref="T:DevToys.Api.IUIImageViewer"/> instance.</param>
            <param name="imageFile">The <see cref="T:System.IO.FileInfo"/> representing the image file.</param>
            <returns>The updated <see cref="T:DevToys.Api.IUIImageViewer"/> instance.</returns>
        </member>
        <member name="M:DevToys.Api.GUI.WithPickedFile(DevToys.Api.IUIImageViewer,DevToys.Api.SandboxedFileReader,System.Boolean)">
            <summary>
            Sets the <see cref="P:DevToys.Api.IUIImageViewer.ImageSource"/> from a <see cref="T:DevToys.Api.SandboxedFileReader"/>.
            </summary>
            <param name="element">The <see cref="T:DevToys.Api.IUIImageViewer"/> instance.</param>
            <param name="pickedFile">The <see cref="T:DevToys.Api.SandboxedFileReader"/> representing the picked file.</param>
            <param name="disposeAutomatically">Indicates whether the <paramref name="pickedFile"/> should be disposed when not displayed in the UI anymore.</param>
            <returns>The updated <see cref="T:DevToys.Api.IUIImageViewer"/> instance.</returns>
        </member>
        <member name="M:DevToys.Api.GUI.WithImage(DevToys.Api.IUIImageViewer,SixLabors.ImageSharp.Image,System.Boolean)">
            <summary>
            Sets the <see cref="P:DevToys.Api.IUIImageViewer.ImageSource"/> from an <see cref="T:SixLabors.ImageSharp.Image"/>.
            </summary>
            <param name="element">The <see cref="T:DevToys.Api.IUIImageViewer"/> instance.</param>
            <param name="image">The <see cref="T:SixLabors.ImageSharp.Image"/> to display.</param>
            <param name="disposeAutomatically">Indicates whether the <paramref name="image"/> should be disposed when not displayed in the UI anymore.</param>
            <returns>The updated <see cref="T:DevToys.Api.IUIImageViewer"/> instance.</returns>
        </member>
        <member name="M:DevToys.Api.GUI.ManuallyHandleSaveAs(DevToys.Api.IUIImageViewer,System.String,System.Func{System.IO.FileStream,System.Threading.Tasks.ValueTask})">
            <summary>
            Adds a custom action to perform when the user saves the image with a specific file extension.
            </summary>
            <remarks>
            As a side effect of this method, the specified file extension will be available in the Save File Dialog when the user decides to save the image.
            When the user saves the image with the specified <paramref name="fileExtension"/>, the specified <paramref name="action"/> will be invoked
            with a <see cref="T:System.IO.FileStream"/> pointing to the file to save. The <paramref name="action"/> is responsible for writing the image to the file.
            </remarks>
            <param name="element">The <see cref="T:DevToys.Api.IUIImageViewer"/> instance.</param>
            <param name="fileExtension">The file extension to handle.</param>
            <param name="action">The action to perform when the user wishes to save the image with the given <paramref name="fileExtension"/>.</param>
            <returns>The updated <see cref="T:DevToys.Api.IUIImageViewer"/> instance.</returns>
        </member>
        <member name="M:DevToys.Api.GUI.RemoveManuallyHandleSaveAs(DevToys.Api.IUIImageViewer,System.String)">
            <summary>
            Removes the custom action to perform when the user saves the image with a specific file extension.
            </summary>
            <param name="element">The <see cref="T:DevToys.Api.IUIImageViewer"/> instance.</param>
            <param name="fileExtension">The file extension to remove.</param>
            <returns>The updated <see cref="T:DevToys.Api.IUIImageViewer"/> instance.</returns>
        </member>
        <member name="M:DevToys.Api.GUI.Clear(DevToys.Api.IUIImageViewer)">
            <summary>
            Clears the value of <see cref="P:DevToys.Api.IUIImageViewer.ImageSource"/>.
            </summary>
            <param name="element">The <see cref="T:DevToys.Api.IUIImageViewer"/> instance.</param>
            <returns>The updated <see cref="T:DevToys.Api.IUIImageViewer"/> instance.</returns>
        </member>
        <member name="M:DevToys.Api.GUI.InfoBar">
            <summary>
            Create a component that displays a bar aiming at indicating a relevant information to the user.
            </summary>
        </member>
        <member name="M:DevToys.Api.GUI.InfoBar(System.String)">
            <summary>
            Create a component that displays a bar aiming at indicating a relevant information to the user.
            </summary>
            <param name="id">An optional unique identifier for this UI element.</param>
        </member>
        <member name="M:DevToys.Api.GUI.InfoBar(System.String,System.String)">
            <summary>
            Create a component that displays a bar aiming at indicating a relevant information to the user.
            </summary>
            <param name="id">An optional unique identifier for this UI element.</param>
            <param name="title">The title to display in the bar.</param>
        </member>
        <member name="M:DevToys.Api.GUI.InfoBar(System.String,System.String,System.String)">
            <summary>
            Create a component that displays a bar aiming at indicating a relevant information to the user.
            </summary>
            <param name="id">An optional unique identifier for this UI element.</param>
            <param name="title">The title to display in the bar.</param>
            <param name="description">The description to display in the bar.</param>
        </member>
        <member name="M:DevToys.Api.GUI.InfoBar(System.String,System.String,System.String,DevToys.Api.UIInfoBarSeverity)">
            <summary>
            Create a component that displays a bar aiming at indicating a relevant information to the user.
            </summary>
            <param name="id">An optional unique identifier for this UI element.</param>
            <param name="title">The title to display in the bar.</param>
            <param name="description">The description to display in the bar.</param>
            <param name="severity">The severity of the information to display.</param>
        </member>
        <member name="M:DevToys.Api.GUI.Title(DevToys.Api.IUIInfoBar,System.String)">
            <summary>
            Sets the <see cref="P:DevToys.Api.IUIInfoBar.Title"/> of the bar.
            </summary>
        </member>
        <member name="M:DevToys.Api.GUI.Description(DevToys.Api.IUIInfoBar,System.String)">
            <summary>
            Sets the <see cref="P:DevToys.Api.IUIInfoBar.Description"/> of the bar.
            </summary>
        </member>
        <member name="M:DevToys.Api.GUI.WithActionButton(DevToys.Api.IUIInfoBar,System.String,System.Boolean,System.Func{System.Threading.Tasks.ValueTask})">
            <summary>
            Sets the optional action button of the bar. The bar closes when the user click on the button.
            </summary>
        </member>
        <member name="M:DevToys.Api.GUI.WithActionButton(DevToys.Api.IUIInfoBar,System.String,System.Boolean,System.Action)">
            <summary>
            Sets the optional action button of the bar. The bar closes when the user click on the button.
            </summary>
        </member>
        <member name="M:DevToys.Api.GUI.OnClose(DevToys.Api.IUIInfoBar,System.Func{System.Threading.Tasks.ValueTask})">
            <summary>
            Sets the action to run when the user clicks the action button.
            </summary>
        </member>
        <member name="M:DevToys.Api.GUI.OnClose(DevToys.Api.IUIInfoBar,System.Action)">
            <summary>
            Sets the action to run when the user clicks the action button.
            </summary>
        </member>
        <member name="M:DevToys.Api.GUI.Informational(DevToys.Api.IUIInfoBar)">
            <summary>
            Sets the <see cref="P:DevToys.Api.IUIInfoBar.Severity"/> to <see cref="F:DevToys.Api.UIInfoBarSeverity.Informational"/>.
            </summary>
        </member>
        <member name="M:DevToys.Api.GUI.Error(DevToys.Api.IUIInfoBar)">
            <summary>
            Sets the <see cref="P:DevToys.Api.IUIInfoBar.Severity"/> to <see cref="F:DevToys.Api.UIInfoBarSeverity.Error"/>.
            </summary>
        </member>
        <member name="M:DevToys.Api.GUI.Warning(DevToys.Api.IUIInfoBar)">
            <summary>
            Sets the <see cref="P:DevToys.Api.IUIInfoBar.Severity"/> to <see cref="F:DevToys.Api.UIInfoBarSeverity.Warning"/>.
            </summary>
        </member>
        <member name="M:DevToys.Api.GUI.Success(DevToys.Api.IUIInfoBar)">
            <summary>
            Sets the <see cref="P:DevToys.Api.IUIInfoBar.Severity"/> to <see cref="F:DevToys.Api.UIInfoBarSeverity.Success"/>.
            </summary>
        </member>
        <member name="M:DevToys.Api.GUI.ShowIcon(DevToys.Api.IUIInfoBar)">
            <summary>
            Shows the icon of the bar.
            </summary>
        </member>
        <member name="M:DevToys.Api.GUI.HideIcon(DevToys.Api.IUIInfoBar)">
            <summary>
            Hides the icon of the bar.
            </summary>
        </member>
        <member name="M:DevToys.Api.GUI.Open(DevToys.Api.IUIInfoBar)">
            <summary>
            Opens the bar.
            </summary>
        </member>
        <member name="M:DevToys.Api.GUI.Close(DevToys.Api.IUIInfoBar)">
            <summary>
            Closes the bar.
            </summary>
        </member>
        <member name="M:DevToys.Api.GUI.Closable(DevToys.Api.IUIInfoBar)">
            <summary>
            Makes the bar closable explicitly by the user.
            </summary>
        </member>
        <member name="M:DevToys.Api.GUI.NonClosable(DevToys.Api.IUIInfoBar)">
            <summary>
            Makes the bar not closable explicitly by the user.
            </summary>
        </member>
        <member name="M:DevToys.Api.GUI.Label">
            <summary>
            A component that displays a text.
            </summary>
        </member>
        <member name="M:DevToys.Api.GUI.Label(System.String)">
            <summary>
            A component that displays a text.
            </summary>
            <param name="id">An optional unique identifier for this UI element.</param>
        </member>
        <member name="M:DevToys.Api.GUI.Label(System.String,System.String)">
            <summary>
            A component that displays a text.
            </summary>
            <param name="id">An optional unique identifier for this UI element.</param>
            <param name="text">The text to display.</param>
        </member>
        <member name="M:DevToys.Api.GUI.Text(DevToys.Api.IUILabel,System.String)">
            <summary>
            Sets the <see cref="P:DevToys.Api.IUILabel.Text"/>.
            </summary>
        </member>
        <member name="M:DevToys.Api.GUI.Style(DevToys.Api.IUILabel,DevToys.Api.UILabelStyle)">
            <summary>
            Sets the text style.
            </summary>
        </member>
        <member name="M:DevToys.Api.GUI.WrapIfNeeded(DevToys.Api.IUILabel)">
            <summary>
            Sets the <see cref="P:DevToys.Api.IUILabel.AutoWrap"/> to true.
            </summary>
        </member>
        <member name="M:DevToys.Api.GUI.NeverWrap(DevToys.Api.IUILabel)">
            <summary>
            Sets the <see cref="P:DevToys.Api.IUILabel.AutoWrap"/> to false.
            </summary>
        </member>
        <member name="M:DevToys.Api.GUI.List">
            <summary>
            A component that represents a list of items.
            </summary>
        </member>
        <member name="M:DevToys.Api.GUI.List(System.String)">
            <summary>
            A component that represents a list of items.
            </summary>
            <param name="id">An optional unique identifier for this UI element.</param>
        </member>
        <member name="M:DevToys.Api.GUI.WithItems(DevToys.Api.IUIList,DevToys.Api.IUIListItem[])">
            <summary>
            Sets the <see cref="P:DevToys.Api.IUISelectDropDownList.Items"/> of the list.
            </summary>
        </member>
        <member name="M:DevToys.Api.GUI.OnItemSelected(DevToys.Api.IUIList,System.Func{DevToys.Api.IUIListItem,System.Threading.Tasks.ValueTask})">
            <summary>
            Sets the action to run when selecting an item in the list.
            </summary>
        </member>
        <member name="M:DevToys.Api.GUI.OnItemSelected(DevToys.Api.IUIList,System.Action{DevToys.Api.IUIListItem})">
            <summary>
            Sets the action to run when selecting an item in the list.
            </summary>
        </member>
        <member name="M:DevToys.Api.GUI.Select(DevToys.Api.IUIList,DevToys.Api.IUIListItem)">
            <summary>
            Sets the <see cref="T:DevToys.Api.IUIList"/> that should be selected in the list.
            If <paramref name="item"/> is null or does not exist in the list, no item will be selected.
            </summary>
        </member>
        <member name="M:DevToys.Api.GUI.Select(DevToys.Api.IUIList,System.Int32)">
            <summary>
            Sets the <see cref="T:DevToys.Api.IUIList"/> that should be selected in the list, using its index in the list.
            If <paramref name="index"/> smaller or greater than the amount of items in the list, no item will be selected.
            </summary>
        </member>
        <member name="M:DevToys.Api.GUI.AllowSelectItem(DevToys.Api.IUIList)">
            <summary>
            Allows the user to select an item in the list.
            </summary>
        </member>
        <member name="M:DevToys.Api.GUI.ForbidSelectItem(DevToys.Api.IUIList)">
            <summary>
            Prevents the user from selecting an item in the list.
            </summary>
        </member>
        <member name="M:DevToys.Api.GUI.RemoveValue(System.Collections.ObjectModel.ObservableCollection{DevToys.Api.IUIListItem},System.Object)">
            <summary>
            Removes the first occurrence of an <see cref="T:DevToys.Api.IUIListItem"/> where <see cref="P:DevToys.Api.IUIListItem.Value"/> match the given <paramref name="value"/>.
            </summary>
        </member>
        <member name="M:DevToys.Api.GUI.Item(DevToys.Api.IUIElement,System.Object)">
            <summary>
            Create component that represents an item in a list.
            </summary>
            <param name="uiElement">The element to display in the item.</param>
            <param name="value">The value associated to the item.</param>
        </member>
        <member name="M:DevToys.Api.GUI.MultiLineTextInput">
            <summary>
            A component that can be used to display or edit unformatted text on multiple lines.
            </summary>
            <remarks>
            This component is powered by Monaco Editor.
            </remarks>
        </member>
        <member name="M:DevToys.Api.GUI.MultiLineTextInput(System.String)">
            <summary>
            A component that can be used to display or edit unformatted text on multiple lines.
            </summary>
            <remarks>
            This component is powered by Monaco Editor.
            </remarks>
            <param name="id">An optional unique identifier for this UI element.</param>
        </member>
        <member name="M:DevToys.Api.GUI.MultiLineTextInput(System.String,System.String)">
            <summary>
            A component that can be used to display or edit unformatted text on multiple lines.
            </summary>
            <remarks>
            This component is powered by Monaco Editor.
            </remarks>
            <param name="id">An optional unique identifier for this UI element.</param>
            <param name="programmingLanguageName">
            <para>
            The programming language name to use to colorize the text in the control.
            </para>
            <para>
            Many languages are supported by default, such as JSON or XML. You can create a custom language support using <see cref="T:DevToys.Api.ILanguageService"/>.
            </para>
            </param>
        </member>
        <member name="M:DevToys.Api.GUI.Highlight(DevToys.Api.IUIMultiLineTextInput,DevToys.Api.UIHighlightedTextSpan[])">
            <summary>
            Sets the list of spans to highlight in the text document.
            </summary>
        </member>
        <member name="M:DevToys.Api.GUI.HoverTooltip(DevToys.Api.IUIMultiLineTextInput,DevToys.Api.UIHoverTooltip[])">
            <summary>
            Sets the list of tooltips to display on Word hover in the text document.
            </summary>
        </member>
        <member name="M:DevToys.Api.GUI.SynchronizeScrollBarWith(DevToys.Api.IUIMultiLineTextInput,DevToys.Api.IUIMultiLineTextInput)">
            <summary>
            Synchronizes the scroll bars of the given element with the scroll bars of the other element.
            </summary>
            <remarks>
            <para>
            Many languages are supported by default, such as JSON or XML. You can create a custom language support using <see cref="T:DevToys.Api.ILanguageService"/>.
            </para>
            </remarks>
        </member>
        <member name="M:DevToys.Api.GUI.Language(DevToys.Api.IUIMultiLineTextInput,System.String)">
            <summary>
            Sets the programming language name to use to colorize the text in the control.
            </summary>
        </member>
        <member name="M:DevToys.Api.GUI.Extendable(DevToys.Api.IUIMultiLineTextInput)">
            <summary>
            Indicates that the control can be extended to take the size of the whole tool boundaries.
            </summary>
            <remarks>
            When <see cref="P:DevToys.Api.IUIElement.IsVisible"/> is false and that the element is in full screen mode, the element goes back to normal mode.
            </remarks>
        </member>
        <member name="M:DevToys.Api.GUI.NotExtendable(DevToys.Api.IUIMultiLineTextInput)">
            <summary>
            Indicates that the control can not be extended to take the size of the whole tool boundaries.
            </summary>
        </member>
        <member name="M:DevToys.Api.GUI.AutoWrap(DevToys.Api.IUIMultiLineTextInput)">
            <summary>
            Indicates that the text in the editor will wrap automatically according to the user's settings.
            </summary>
        </member>
        <member name="M:DevToys.Api.GUI.AlwaysWrap(DevToys.Api.IUIMultiLineTextInput)">
            <summary>
            Indicates that the text in the editor will always wrap when it reaches the border of the editor.
            </summary>
        </member>
        <member name="M:DevToys.Api.GUI.NeverWrap(DevToys.Api.IUIMultiLineTextInput)">
            <summary>
            Indicates that the text in the editor will never wrap when it reaches the border of the editor.
            </summary>
        </member>
        <member name="M:DevToys.Api.GUI.AutoLineNumber(DevToys.Api.IUIMultiLineTextInput)">
            <summary>
            Indicates that the line number should be automatically shown or hidden depending on the user's settings.
            </summary>
        </member>
        <member name="M:DevToys.Api.GUI.AlwaysShowLineNumber(DevToys.Api.IUIMultiLineTextInput)">
            <summary>
            Indicates that the line number should always be displayed in the editor.
            </summary>
        </member>
        <member name="M:DevToys.Api.GUI.NeverShowLineNumber(DevToys.Api.IUIMultiLineTextInput)">
            <summary>
            Indicates that the line number should never be displayed in the editor.
            </summary>
        </member>
        <member name="M:DevToys.Api.GUI.Select(DevToys.Api.IUIMultiLineTextInput,DevToys.Api.TextSpan)">
            <summary>
            Selects the given span in the text document.
            </summary>
        </member>
        <member name="M:DevToys.Api.GUI.Select(DevToys.Api.IUIMultiLineTextInput,System.Int32,System.Int32)">
            <summary>
            Selects the given span in the text document.
            </summary>
        </member>
        <member name="M:DevToys.Api.GUI.NumberInput">
            <summary>
            A component that can be used to display or edit numbers on a single line.
            </summary>
        </member>
        <member name="M:DevToys.Api.GUI.NumberInput(System.String,System.Double,System.Double,System.Double)">
            <summary>
            A component that can be used to display or edit numbers on a single line.
            </summary>
            <param name="id">An optional unique identifier for this UI element.</param>
            <param name="min">The minimum value possible.</param>
            <param name="max">The maximum value possible.</param>
            <param name="step">The interval between legal numbers.</param>
        </member>
        <member name="M:DevToys.Api.GUI.Minimum(DevToys.Api.IUINumberInput,System.Double)">
            <summary>
            Sets the minimum value possible.
            </summary>
        </member>
        <member name="M:DevToys.Api.GUI.Maximum(DevToys.Api.IUINumberInput,System.Double)">
            <summary>
            Sets the maximum value possible.
            </summary>
        </member>
        <member name="M:DevToys.Api.GUI.Step(DevToys.Api.IUINumberInput,System.Double)">
            <summary>
            Sets the interval between legal numbers.
            </summary>
        </member>
        <member name="M:DevToys.Api.GUI.Value(DevToys.Api.IUINumberInput,System.Double)">
            <summary>
            Sets the <see cref="P:DevToys.Api.IUISingleLineTextInput.Text"/> property of the <see cref="T:DevToys.Api.IUINumberInput"/>.
            </summary>
        </member>
        <member name="M:DevToys.Api.GUI.OnValueChanged(DevToys.Api.IUINumberInput,System.Func{System.Double,System.Threading.Tasks.ValueTask})">
            <summary>
            Sets the action to run when the value changed.
            </summary>
        </member>
        <member name="M:DevToys.Api.GUI.OnValueChanged(DevToys.Api.IUINumberInput,System.Action{System.Double})">
            <summary>
            Sets the action to run when the value changed.
            </summary>
        </member>
        <member name="M:DevToys.Api.GUI.PasswordInput">
            <summary>
            A component that can be used to display or edit passwords on a single line.
            </summary>
        </member>
        <member name="M:DevToys.Api.GUI.PasswordInput(System.String)">
            <summary>
            A component that can be used to display or edit passwords on a single line.
            </summary>
            <param name="id">An optional unique identifier for this UI element.</param>
        </member>
        <member name="M:DevToys.Api.GUI.ProgressBar">
            <summary>
            Create a component that indicates the progress of an operation.
            </summary>
            <returns>The created <see cref="T:DevToys.Api.IUIProgressBar"/> instance.</returns>
        </member>
        <member name="M:DevToys.Api.GUI.ProgressBar(System.String)">
            <summary>
            Create a component that indicates the progress of an operation.
            </summary>
            <param name="id">An optional unique identifier for this UI element.</param>
            <returns>The created <see cref="T:DevToys.Api.IUIProgressBar"/> instance.</returns>
        </member>
        <member name="M:DevToys.Api.GUI.Progress``1(``0,System.Double)">
            <summary>
            Synchronously set the <see cref="P:DevToys.Api.IUIProgressBar.Value"/> property.
            </summary>
            <remarks>It is highly recommended to call this method when being on the UI thread.</remarks>
            <param name="element">The <see cref="T:DevToys.Api.IUIProgressBar"/> instance.</param>
            <param name="percentage">A value between 0 and 100.</param>
        </member>
        <member name="M:DevToys.Api.GUI.ProgressAsync``1(``0,System.Double)">
            <summary>
            Asynchronously set the <see cref="P:DevToys.Api.IUIProgressBar.Value"/> property. This method makes sure to update the
            progress bar's value without blocking the caller.
            </summary>
            <remarks>It is highly recommended to call this method when being off the UI thread.</remarks>
            <param name="element">The <see cref="T:DevToys.Api.IUIProgressBar"/> instance.</param>
            <param name="percentage">A value between 0 and 100.</param>
        </member>
        <member name="M:DevToys.Api.GUI.StartIndeterminateProgress``1(``0)">
            <summary>
            Indicates the progress bar should a generic, continuous progress feedback.
            </summary>
            <param name="element">The <see cref="T:DevToys.Api.IUIProgressBar"/> instance.</param>
        </member>
        <member name="M:DevToys.Api.GUI.StopIndeterminateProgress``1(``0)">
            <summary>
            Indicates the progress bar should show actual values.
            </summary>
            <param name="element">The <see cref="T:DevToys.Api.IUIProgressBar"/> instance.</param>
        </member>
        <member name="M:DevToys.Api.GUI.ProgressRing">
            <summary>
            Create a circular component that indicates the progress of an operation.
            </summary>
        </member>
        <member name="M:DevToys.Api.GUI.ProgressRing(System.String)">
            <summary>
            Create a circular component that indicates the progress of an operation.
            </summary>
            <param name="id">An optional unique identifier for this UI element.</param>
        </member>
        <member name="M:DevToys.Api.GUI.SelectDropDownList">
            <summary>
            A component that represents a drop down list where the user can select one item in it.
            </summary>
        </member>
        <member name="M:DevToys.Api.GUI.SelectDropDownList(System.String)">
            <summary>
            A component that represents a drop down list where the user can select one item in it.
            </summary>
            <param name="id">An optional unique identifier for this UI element.</param>
        </member>
        <member name="M:DevToys.Api.GUI.WithItems(DevToys.Api.IUISelectDropDownList,DevToys.Api.IUIDropDownListItem[])">
            <summary>
            Sets the <see cref="P:DevToys.Api.IUISelectDropDownList.Items"/> of the drop down list.
            </summary>
        </member>
        <member name="M:DevToys.Api.GUI.OnItemSelected(DevToys.Api.IUISelectDropDownList,System.Func{DevToys.Api.IUIDropDownListItem,System.Threading.Tasks.ValueTask})">
            <summary>
            Sets the action to run when selecting an item in the drop down list.
            </summary>
        </member>
        <member name="M:DevToys.Api.GUI.OnItemSelected(DevToys.Api.IUISelectDropDownList,System.Action{DevToys.Api.IUIDropDownListItem})">
            <summary>
            Sets the action to run when selecting an item in the drop down list.
            </summary>
        </member>
        <member name="M:DevToys.Api.GUI.Select(DevToys.Api.IUISelectDropDownList,DevToys.Api.IUIDropDownListItem)">
            <summary>
            Sets the <see cref="T:DevToys.Api.IUIDropDownListItem"/> that should be selected in the drop down list.
            If <paramref name="item"/> is null or does not exist in the list, no item will be selected.
            </summary>
        </member>
        <member name="M:DevToys.Api.GUI.Select(DevToys.Api.IUISelectDropDownList,System.Int32)">
            <summary>
            Sets the <see cref="T:DevToys.Api.IUIDropDownListItem"/> that should be selected in the drop down list, using its index in the list.
            If <paramref name="index"/> smaller or greater than the amount of items in the list, no item will be selected.
            </summary>
        </member>
        <member name="M:DevToys.Api.GUI.Setting">
            <summary>
            A component that represents a setting, with a title, description, icon and <see cref="T:DevToys.Api.IUIElement"/> for the option value.
            </summary>
            <returns>The created <see cref="T:DevToys.Api.IUISetting"/> instance.</returns>
        </member>
        <member name="M:DevToys.Api.GUI.Setting(System.String)">
            <summary>
            A component that represents a setting, with a title, description, icon and <see cref="T:DevToys.Api.IUIElement"/> for the option value.
            </summary>
            <param name="id">An optional unique identifier for this UI element.</param>
            <returns>The created <see cref="T:DevToys.Api.IUISetting"/> instance.</returns>
        </member>
        <member name="M:DevToys.Api.GUI.Description(DevToys.Api.IUISetting,System.String)">
            <summary>
            Sets the <see cref="P:DevToys.Api.IUISetting.Description"/> of the setting.
            </summary>
            <param name="element">The <see cref="T:DevToys.Api.IUISetting"/> instance.</param>
            <param name="text">The description text.</param>
            <returns>The updated <see cref="T:DevToys.Api.IUISetting"/> instance.</returns>
        </member>
        <member name="M:DevToys.Api.GUI.StateDescription(DevToys.Api.IUISetting,System.String)">
            <summary>
            Sets the <see cref="P:DevToys.Api.IUISetting.StateDescription"/> of the setting.
            </summary>
            <param name="element">The <see cref="T:DevToys.Api.IUISetting"/> instance.</param>
            <param name="text">The state description text.</param>
            <returns>The updated <see cref="T:DevToys.Api.IUISetting"/> instance.</returns>
        </member>
        <member name="M:DevToys.Api.GUI.Icon(DevToys.Api.IUISetting,System.String,System.Char)">
            <summary>
            Sets the <see cref="P:DevToys.Api.IUISetting.Icon"/> of the setting.
            </summary>
            <param name="element">The <see cref="T:DevToys.Api.IUISetting"/> instance.</param>
            <param name="fontName">The font name of the icon.</param>
            <param name="glyph">The glyph of the icon.</param>
            <returns>The updated <see cref="T:DevToys.Api.IUISetting"/> instance.</returns>
        </member>
        <member name="M:DevToys.Api.GUI.InteractiveElement(DevToys.Api.IUISetting,DevToys.Api.IUIElement)">
            <summary>
            Sets the <see cref="P:DevToys.Api.IUISetting.InteractiveElement"/> of the setting.
            </summary>
            <param name="element">The <see cref="T:DevToys.Api.IUISetting"/> instance.</param>
            <param name="uiElement">The interactive UI element.</param>
            <returns>The updated <see cref="T:DevToys.Api.IUISetting"/> instance.</returns>
        </member>
        <member name="M:DevToys.Api.GUI.Handle(DevToys.Api.IUISetting,DevToys.Api.ISettingsProvider,DevToys.Api.SettingDefinition{System.Boolean},System.Func{System.Boolean,System.Threading.Tasks.ValueTask})">
            <summary>
            Sets a <see cref="T:DevToys.Api.IUISwitch"/> to <see cref="P:DevToys.Api.IUISetting.InteractiveElement"/> and automatically associate the
            given <paramref name="settingDefinition"/> to the switch state.
            </summary>
            <param name="element">The <see cref="T:DevToys.Api.IUISetting"/> instance.</param>
            <param name="settingsProvider">The settings provider used for handling the given <paramref name="settingDefinition"/>.</param>
            <param name="settingDefinition">The definition of the setting to associate with this <see cref="T:DevToys.Api.IUISetting"/>.</param>
            <param name="onToggled">(optional) A method to invoke when the setting value changes.</param>
            <returns>The updated <see cref="T:DevToys.Api.IUISetting"/> instance.</returns>
            <remarks>
            The binding with the setting is going in both directions. When the setting is set, the switch is updated. When the switch is toggled, the setting is updated.
            </remarks>
        </member>
        <member name="M:DevToys.Api.GUI.Handle(DevToys.Api.IUISetting,DevToys.Api.ISettingsProvider,DevToys.Api.SettingDefinition{System.Boolean},System.Action{System.Boolean})">
            <summary>
            Sets a <see cref="T:DevToys.Api.IUISwitch"/> to <see cref="P:DevToys.Api.IUISetting.InteractiveElement"/> and automatically associate the
            given <paramref name="settingDefinition"/> to the switch state.
            </summary>
            <param name="element">The <see cref="T:DevToys.Api.IUISetting"/> instance.</param>
            <param name="settingsProvider">The settings provider used for handling the given <paramref name="settingDefinition"/>.</param>
            <param name="settingDefinition">The definition of the setting to associate with this <see cref="T:DevToys.Api.IUISetting"/>.</param>
            <param name="onToggled">(optional) A method to invoke when the setting value changes.</param>
            <returns>The updated <see cref="T:DevToys.Api.IUISetting"/> instance.</returns>
            <remarks>
            The binding with the setting is going in both directions. When the setting is set, the switch is updated. When the switch is toggled, the setting is updated.
            </remarks>
        </member>
        <member name="M:DevToys.Api.GUI.Handle(DevToys.Api.IUISetting,DevToys.Api.ISettingsProvider,DevToys.Api.SettingDefinition{System.Boolean},System.String,System.String,System.Func{System.Boolean,System.Threading.Tasks.ValueTask})">
            <summary>
            Sets a <see cref="T:DevToys.Api.IUISwitch"/> to <see cref="P:DevToys.Api.IUISetting.InteractiveElement"/> and automatically associate the
            given <paramref name="settingDefinition"/> to the switch state.
            </summary>
            <param name="element">The <see cref="T:DevToys.Api.IUISetting"/> instance.</param>
            <param name="settingsProvider">The settings provider used for handling the given <paramref name="settingDefinition"/>.</param>
            <param name="settingDefinition">The definition of the setting to associate to this <see cref="T:DevToys.Api.IUISetting"/>.</param>
            <param name="stateDescriptionWhenOn">The <see cref="P:DevToys.Api.IUISetting.StateDescription"/> to use when the option is On.</param>
            <param name="stateDescriptionWhenOff">The <see cref="P:DevToys.Api.IUISetting.StateDescription"/> to use when the option is Off.</param>
            <param name="onToggled">(optional) A method to invoke when the setting value changed.</param>
            <returns>The updated <see cref="T:DevToys.Api.IUISetting"/> instance.</returns>
            <remarks>
            The binding with the setting is going in both directions. When the setting is set, the switch is updated. When the switch is toggled, the setting is updated.
            </remarks>
        </member>
        <member name="M:DevToys.Api.GUI.Handle(DevToys.Api.IUISetting,DevToys.Api.ISettingsProvider,DevToys.Api.SettingDefinition{System.Boolean},System.String,System.String,System.Action{System.Boolean})">
            <summary>
            Sets a <see cref="T:DevToys.Api.IUISwitch"/> to <see cref="P:DevToys.Api.IUISetting.InteractiveElement"/> and automatically associate the
            given <paramref name="settingDefinition"/> to the switch state.
            </summary>
            <param name="element">The <see cref="T:DevToys.Api.IUISetting"/> instance.</param>
            <param name="settingsProvider">The settings provider used for handling the given <paramref name="settingDefinition"/>.</param>
            <param name="settingDefinition">The definition of the setting to associate to this <see cref="T:DevToys.Api.IUISetting"/>.</param>
            <param name="stateDescriptionWhenOn">The <see cref="P:DevToys.Api.IUISetting.StateDescription"/> to use when the option is On.</param>
            <param name="stateDescriptionWhenOff">The <see cref="P:DevToys.Api.IUISetting.StateDescription"/> to use when the option is Off.</param>
            <param name="onToggled">(optional) A method to invoke when the setting value changed.</param>
            <returns>The updated <see cref="T:DevToys.Api.IUISetting"/> instance.</returns>
            <remarks>
            The binding with the setting is going in both directions. When the setting is set, the switch is updated. When the switch is toggled, the setting is updated.
            </remarks>
        </member>
        <member name="M:DevToys.Api.GUI.Handle``1(DevToys.Api.IUISetting,DevToys.Api.ISettingsProvider,DevToys.Api.SettingDefinition{``0},System.Action{``0},DevToys.Api.IUIDropDownListItem[])">
            <summary>
            Sets a <see cref="T:DevToys.Api.IUISelectDropDownList"/> to <see cref="P:DevToys.Api.IUISetting.InteractiveElement"/> and automatically associate the
            given <paramref name="settingDefinition"/> to the switch state.
            </summary>
            <param name="element">The <see cref="T:DevToys.Api.IUISetting"/> instance.</param>
            <param name="settingsProvider">The settings provider used for handling the given <paramref name="settingDefinition"/>.</param>
            <param name="settingDefinition">The definition of the setting to associate to this <see cref="T:DevToys.Api.IUISetting"/>.</param>
            <param name="onOptionSelected">(optional) A method to invoke when the setting value changed.</param>
            <param name="dropDownListItems">(optional) A list of items to be displayed in the drop down list. <see cref="P:DevToys.Api.IUIDropDownListItem.Value"/> should be of type <typeparamref name="T"/>.</param>
            <returns>The updated <see cref="T:DevToys.Api.IUISetting"/> instance.</returns>
            <remarks>
            The binding with the setting is going in both directions. When the setting is changed, the drop down list is updated. When the drop down list is changed, the setting is updated.
            </remarks>
        </member>
        <member name="M:DevToys.Api.GUI.Handle``1(DevToys.Api.IUISetting,DevToys.Api.ISettingsProvider,DevToys.Api.SettingDefinition{``0},System.Func{``0,System.Threading.Tasks.ValueTask},DevToys.Api.IUIDropDownListItem[])">
            <summary>
            Sets a <see cref="T:DevToys.Api.IUISelectDropDownList"/> to <see cref="P:DevToys.Api.IUISetting.InteractiveElement"/> and automatically associate the
            given <paramref name="settingDefinition"/> to the switch state.
            </summary>
            <param name="element">The <see cref="T:DevToys.Api.IUISetting"/> instance.</param>
            <param name="settingsProvider">The settings provider used for handling the given <paramref name="settingDefinition"/>.</param>
            <param name="settingDefinition">The definition of the setting to associate to this <see cref="T:DevToys.Api.IUISetting"/>.</param>
            <param name="onOptionSelected">(optional) A method to invoke when the setting value changed.</param>
            <param name="dropDownListItems">(optional) A list of items to be displayed in the drop down list. <see cref="P:DevToys.Api.IUIDropDownListItem.Value"/> should be of type <typeparamref name="T"/>.</param>
            <returns>The updated <see cref="T:DevToys.Api.IUISetting"/> instance.</returns>
            <remarks>
            The binding with the setting is going in both directions. When the setting is changed, the drop down list is updated. When the drop down list is changed, the setting is updated.
            </remarks>
        </member>
        <member name="M:DevToys.Api.GUI.SettingGroup">
            <summary>
            A component that represents a group of settings, with a title, description and an icon.
            </summary>
        </member>
        <member name="M:DevToys.Api.GUI.SettingGroup(System.String)">
            <summary>
            A component that represents a group of settings, with a title, description and an icon.
            </summary>
            <param name="id">An optional unique identifier for this UI element.</param>
        </member>
        <member name="M:DevToys.Api.GUI.Description(DevToys.Api.IUISettingGroup,System.String)">
            <summary>
            Sets the <see cref="P:DevToys.Api.IUISetting.Description"/> of the setting.
            </summary>
            <param name="element">The <see cref="T:DevToys.Api.IUISettingGroup"/> element.</param>
            <param name="description">The description.</param>
            <returns>The updated <see cref="T:DevToys.Api.IUISettingGroup"/> element.</returns>
        </member>
        <member name="M:DevToys.Api.GUI.Icon(DevToys.Api.IUISettingGroup,System.String,System.Char)">
            <summary>
            Sets the <see cref="P:DevToys.Api.IUISetting.Icon"/> of the setting.
            </summary>
            <param name="element">The <see cref="T:DevToys.Api.IUISettingGroup"/> element.</param>
            <param name="fontName">The font name.</param>
            <param name="glyph">The glyph character.</param>
            <returns>The updated <see cref="T:DevToys.Api.IUISettingGroup"/> element.</returns>
        </member>
        <member name="M:DevToys.Api.GUI.InteractiveElement(DevToys.Api.IUISettingGroup,DevToys.Api.IUIElement)">
            <summary>
            Sets the <see cref="P:DevToys.Api.IUISetting.InteractiveElement"/> of the setting.
            </summary>
            <param name="element">The <see cref="T:DevToys.Api.IUISettingGroup"/> element.</param>
            <param name="uiElement">The interactive UI element.</param>
            <returns>The updated <see cref="T:DevToys.Api.IUISettingGroup"/> element.</returns>
        </member>
        <member name="M:DevToys.Api.GUI.Handle(DevToys.Api.IUISettingGroup,DevToys.Api.ISettingsProvider,DevToys.Api.SettingDefinition{System.Boolean},System.Func{System.Boolean,System.Threading.Tasks.ValueTask})">
            <summary>
            Sets a <see cref="T:DevToys.Api.IUISwitch"/> to <see cref="P:DevToys.Api.IUISetting.InteractiveElement"/> and automatically associate the
            given <paramref name="settingDefinition"/> to the switch state.
            </summary>
            <param name="element">The <see cref="T:DevToys.Api.IUISettingGroup"/> element.</param>
            <param name="settingsProvider">The settings provider used for handling the given <paramref name="settingDefinition"/>.</param>
            <param name="settingDefinition">The definition of the setting to associate to this <see cref="T:DevToys.Api.IUISettingGroup"/>.</param>
            <param name="onToggled">(optional) A method to invoke when the setting value changed.</param>
            <returns>The updated <see cref="T:DevToys.Api.IUISettingGroup"/> element.</returns>
        </member>
        <member name="M:DevToys.Api.GUI.Handle``1(DevToys.Api.IUISettingGroup,DevToys.Api.ISettingsProvider,DevToys.Api.SettingDefinition{``0},System.Func{``0,System.Threading.Tasks.ValueTask},DevToys.Api.IUIDropDownListItem[])">
            <summary>
            Sets a <see cref="T:DevToys.Api.IUISelectDropDownList"/> to <see cref="P:DevToys.Api.IUISetting.InteractiveElement"/> and automatically associate the
            given <paramref name="settingDefinition"/> to the switch state.
            </summary>
            <typeparam name="T">The type of the setting value.</typeparam>
            <param name="element">The <see cref="T:DevToys.Api.IUISettingGroup"/> element.</param>
            <param name="settingsProvider">The settings provider used for handling the given <paramref name="settingDefinition"/>.</param>
            <param name="settingDefinition">The definition of the setting to associate to this <see cref="T:DevToys.Api.IUISetting"/>.</param>
            <param name="onOptionSelected">(optional) A method to invoke when the setting value changed.</param>
            <param name="dropDownListItems">(optional) A list of items to be displayed in the drop down list. <see cref="P:DevToys.Api.IUIDropDownListItem.Value"/> should be of type <typeparamref name="T"/>.</param>
            <returns>The updated <see cref="T:DevToys.Api.IUISettingGroup"/> element.</returns>
        </member>
        <member name="M:DevToys.Api.GUI.Handle(DevToys.Api.IUISettingGroup,DevToys.Api.ISettingsProvider,DevToys.Api.SettingDefinition{System.Boolean},System.Action{System.Boolean})">
            <summary>
            Sets a <see cref="T:DevToys.Api.IUISwitch"/> to <see cref="P:DevToys.Api.IUISetting.InteractiveElement"/> and automatically associate the
            given <paramref name="settingDefinition"/> to the switch state.
            </summary>
            <param name="element">The <see cref="T:DevToys.Api.IUISettingGroup"/> element.</param>
            <param name="settingsProvider">The settings provider used for handling the given <paramref name="settingDefinition"/>.</param>
            <param name="settingDefinition">The definition of the setting to associate to this <see cref="T:DevToys.Api.IUISettingGroup"/>.</param>
            <param name="onToggled">(optional) A method to invoke when the setting value changed.</param>
            <returns>The updated <see cref="T:DevToys.Api.IUISettingGroup"/> element.</returns>
        </member>
        <member name="M:DevToys.Api.GUI.Handle``1(DevToys.Api.IUISettingGroup,DevToys.Api.ISettingsProvider,DevToys.Api.SettingDefinition{``0},System.Action{``0},DevToys.Api.IUIDropDownListItem[])">
            <summary>
            Sets a <see cref="T:DevToys.Api.IUISelectDropDownList"/> to <see cref="P:DevToys.Api.IUISetting.InteractiveElement"/> and automatically associate the
            given <paramref name="settingDefinition"/> to the switch state.
            </summary>
            <typeparam name="T">The type of the setting value.</typeparam>
            <param name="element">The <see cref="T:DevToys.Api.IUISettingGroup"/> element.</param>
            <param name="settingsProvider">The settings provider used for handling the given <paramref name="settingDefinition"/>.</param>
            <param name="settingDefinition">The definition of the setting to associate to this <see cref="T:DevToys.Api.IUISetting"/>.</param>
            <param name="onOptionSelected">(optional) A method to invoke when the setting value changed.</param>
            <param name="dropDownListItems">(optional) A list of items to be displayed in the drop down list. <see cref="P:DevToys.Api.IUIDropDownListItem.Value"/> should be of type <typeparamref name="T"/>.</param>
            <returns>The updated <see cref="T:DevToys.Api.IUISettingGroup"/> element.</returns>
        </member>
        <member name="M:DevToys.Api.GUI.WithChildren(DevToys.Api.IUISettingGroup,DevToys.Api.IUIElement[])">
            <summary>
            Sets the children to be displayed in the group.
            </summary>
            <param name="element">The <see cref="T:DevToys.Api.IUISettingGroup"/> element.</param>
            <param name="children">The child elements.</param>
            <returns>The updated <see cref="T:DevToys.Api.IUISettingGroup"/> element.</returns>
        </member>
        <member name="M:DevToys.Api.GUI.WithSettings(DevToys.Api.IUISettingGroup,DevToys.Api.IUISetting[])">
            <summary>
            Sets the children to be displayed in the group.
            </summary>
            <param name="element">The <see cref="T:DevToys.Api.IUISettingGroup"/> element.</param>
            <param name="settings">The settings to be displayed in the group.</param>
            <returns>The updated <see cref="T:DevToys.Api.IUISettingGroup"/> element.</returns>
        </member>
        <member name="M:DevToys.Api.GUI.SingleLineTextInput">
            <summary>
            Create a component that can be used to display or edit unformatted text on a single line.
            </summary>
        </member>
        <member name="M:DevToys.Api.GUI.SingleLineTextInput(System.String)">
            <summary>
            Create a component that can be used to display or edit unformatted text on a single line.
            </summary>
            <param name="id">An optional unique identifier for this UI element.</param>
        </member>
        <member name="M:DevToys.Api.GUI.ReadOnly``1(``0)">
            <summary>
            Sets the text input control as read-only.
            </summary>
        </member>
        <member name="M:DevToys.Api.GUI.Editable``1(``0)">
            <summary>
            Sets the text input control as editable.
            </summary>
        </member>
        <member name="M:DevToys.Api.GUI.CanCopyWhenEditable``1(``0)">
            <summary>
            Shows the "copy" button when the editor is editable.
            </summary>
        </member>
        <member name="M:DevToys.Api.GUI.CannotCopyWhenEditable``1(``0)">
            <summary>
            Hides the "copy" button when the editor is editable.
            </summary>
        </member>
        <member name="M:DevToys.Api.GUI.HideCommandBar``1(``0)">
            <summary>
            Hides the command bar on top of the editor.
            This will also hide the <see cref="P:DevToys.Api.IUISingleLineTextInput.CommandBarExtraContent"/>.
            </summary>
        </member>
        <member name="M:DevToys.Api.GUI.ShowCommandBar``1(``0)">
            <summary>
            Shows the command bar on top of the editor.
            </summary>
        </member>
        <member name="M:DevToys.Api.GUI.Text``1(``0,System.String)">
            <summary>
            Sets the unformatted text of the control.
            </summary>
        </member>
        <member name="M:DevToys.Api.GUI.CommandBarExtraContent``1(``0,DevToys.Api.IUIElement)">
            <summary>
            Defines an additional element to display in the command bar.
            </summary>
        </member>
        <member name="M:DevToys.Api.GUI.OnTextChanged``1(``0,System.Func{System.String,System.Threading.Tasks.ValueTask})">
            <summary>
            Sets the action to run when the text changed.
            </summary>
        </member>
        <member name="M:DevToys.Api.GUI.OnTextChanged``1(``0,System.Action{System.String})">
            <summary>
            Sets the action to run when the text changed.
            </summary>
        </member>
        <member name="M:DevToys.Api.GUI.SplitGrid">
            <summary>
            Create a component that splits horizontally or vertically an area into two panes. Panes can be resized by the user.
            </summary>
        </member>
        <member name="M:DevToys.Api.GUI.SplitGrid(System.String)">
            <summary>
            Create a component that splits horizontally or vertically an area into two panes. Panes can be resized by the user.
            </summary>
            <param name="id">An optional unique identifier for this UI element.</param>
        </member>
        <member name="M:DevToys.Api.GUI.Vertical(DevToys.Api.IUISplitGrid)">
            <summary>
            Split the <see cref="T:DevToys.Api.IUISplitGrid"/> vertically.
            </summary>
        </member>
        <member name="M:DevToys.Api.GUI.Horizontal(DevToys.Api.IUISplitGrid)">
            <summary>
            Split the <see cref="T:DevToys.Api.IUISplitGrid"/> horizontally.
            </summary>
        </member>
        <member name="M:DevToys.Api.GUI.TopPaneLength(DevToys.Api.IUISplitGrid,DevToys.Api.UIGridLength)">
            <summary>
            Set the length of the top pane.
            </summary>
        </member>
        <member name="M:DevToys.Api.GUI.LeftPaneLength(DevToys.Api.IUISplitGrid,DevToys.Api.UIGridLength)">
            <summary>
            Set the length of the left pane.
            </summary>
        </member>
        <member name="M:DevToys.Api.GUI.RightPaneLength(DevToys.Api.IUISplitGrid,DevToys.Api.UIGridLength)">
            <summary>
            Set the length of the right pane.
            </summary>
        </member>
        <member name="M:DevToys.Api.GUI.BottomPaneLength(DevToys.Api.IUISplitGrid,DevToys.Api.UIGridLength)">
            <summary>
            Set the length of the bottom pane.
            </summary>
        </member>
        <member name="M:DevToys.Api.GUI.WithTopPaneChild(DevToys.Api.IUISplitGrid,DevToys.Api.IUIElement)">
            <summary>
            Set the element to display in the top pane.
            </summary>
        </member>
        <member name="M:DevToys.Api.GUI.WithLeftPaneChild(DevToys.Api.IUISplitGrid,DevToys.Api.IUIElement)">
            <summary>
            Set the element to display in the left pane.
            </summary>
        </member>
        <member name="M:DevToys.Api.GUI.WithRightPaneChild(DevToys.Api.IUISplitGrid,DevToys.Api.IUIElement)">
            <summary>
            Set the element to display in the right pane.
            </summary>
        </member>
        <member name="M:DevToys.Api.GUI.WithBottomPaneChild(DevToys.Api.IUISplitGrid,DevToys.Api.IUIElement)">
            <summary>
            Set the element to display in the bottom pane.
            </summary>
        </member>
        <member name="M:DevToys.Api.GUI.MinimumLength(DevToys.Api.IUISplitGrid,System.Int32)">
            <summary>
            Set the minimum length of a cell, in pixels.
            </summary>
        </member>
        <member name="M:DevToys.Api.GUI.Stack">
            <summary>
            Create a component that stacks child elements into a single line that can be oriented horizontally or vertically.
            </summary>
        </member>
        <member name="M:DevToys.Api.GUI.Stack(System.String)">
            <summary>
            Create a component that stacks child elements into a single line that can be oriented horizontally or vertically.
            </summary>
            <param name="id">An optional unique identifier for this UI element.</param>
        </member>
        <member name="M:DevToys.Api.GUI.Vertical(DevToys.Api.IUIStack)">
            <summary>
            Organize the <see cref="P:DevToys.Api.IUIStack.Children"/> vertically.
            </summary>
        </member>
        <member name="M:DevToys.Api.GUI.Horizontal(DevToys.Api.IUIStack)">
            <summary>
            Organize the <see cref="P:DevToys.Api.IUIStack.Children"/> horizontally.
            </summary>
        </member>
        <member name="M:DevToys.Api.GUI.WithChildren(DevToys.Api.IUIStack,DevToys.Api.IUIElement[])">
            <summary>
            Sets the children to be displayed in the stack.
            </summary>
        </member>
        <member name="M:DevToys.Api.GUI.NoSpacing(DevToys.Api.IUIStack)">
            <summary>
            Sets no spacing between children.
            </summary>
        </member>
        <member name="M:DevToys.Api.GUI.SmallSpacing(DevToys.Api.IUIStack)">
            <summary>
            Sets a small spacing between children.
            </summary>
        </member>
        <member name="M:DevToys.Api.GUI.MediumSpacing(DevToys.Api.IUIStack)">
            <summary>
            Sets a medium spacing between children.
            </summary>
        </member>
        <member name="M:DevToys.Api.GUI.LargeSpacing(DevToys.Api.IUIStack)">
            <summary>
            Sets a large spacing between children.
            </summary>
        </member>
        <member name="M:DevToys.Api.GUI.Switch">
            <summary>
            A component that represents a changeable boolean value.
            </summary>
        </member>
        <member name="M:DevToys.Api.GUI.Switch(System.String)">
            <summary>
            A component that represents a changeable boolean value.
            </summary>
            <param name="id">An optional unique identifier for this UI element.</param>
        </member>
        <member name="M:DevToys.Api.GUI.OnText(DevToys.Api.IUISwitch,System.String)">
            <summary>
            Sets the <see cref="P:DevToys.Api.IUISwitch.OnText"/> of the switch.
            </summary>
        </member>
        <member name="M:DevToys.Api.GUI.OffText(DevToys.Api.IUISwitch,System.String)">
            <summary>
            Sets the <see cref="P:DevToys.Api.IUISwitch.OffText"/> of the switch.
            </summary>
        </member>
        <member name="M:DevToys.Api.GUI.On(DevToys.Api.IUISwitch)">
            <summary>
            Sets the <see cref="P:DevToys.Api.IUISwitch.IsOn"/> of the switch to true.
            </summary>
        </member>
        <member name="M:DevToys.Api.GUI.Off(DevToys.Api.IUISwitch)">
            <summary>
            Sets the <see cref="P:DevToys.Api.IUISwitch.IsOn"/> of the switch to off.
            </summary>
        </member>
        <member name="M:DevToys.Api.GUI.OnToggle(DevToys.Api.IUISwitch,System.Func{System.Boolean,System.Threading.Tasks.ValueTask})">
            <summary>
            Sets the action to run when toggling the switch.
            </summary>
        </member>
        <member name="M:DevToys.Api.GUI.OnToggle(DevToys.Api.IUISwitch,System.Action{System.Boolean})">
            <summary>
            Sets the action to run when toggling the switch.
            </summary>
        </member>
        <member name="M:DevToys.Api.GUI.Title``1(``0,System.String)">
            <summary>
            Sets the title of the element.
            </summary>
        </member>
        <member name="M:DevToys.Api.GUI.Icon(System.String,System.String,System.Int32)">
            <summary>
            A component that represents an icon with a UTF-32 glyph.
            </summary>
            <param name="id">An optional unique identifier for this UI element.</param>
            <param name="fontName">The name of the font containing the icon.</param>
            <param name="glyph">The UTF-32 code point of the icon glyph.</param>
        </member>
        <member name="M:DevToys.Api.GUI.Icon(System.String,System.Int32)">
            <summary>
            A component that represents an icon with a UTF-32 glyph.
            </summary>
            <param name="fontName">The name of the font containing the icon.</param>
            <param name="glyph">The UTF-32 code point of the icon glyph.</param>
        </member>
        <member name="M:DevToys.Api.GUI.Glyph(DevToys.Api.IUIUtf32Icon,System.Int32)">
            <summary>
            Sets the <see cref="P:DevToys.Api.UIUtf32Icon.Utf32Glyph"/> of the icon.
            </summary>
            <param name="element">The <see cref="T:DevToys.Api.UIUtf32Icon"/> instance.</param>
            <param name="glyph">The UTF-32 code point of the icon glyph.</param>
        </member>
        <member name="M:DevToys.Api.GUI.Button(System.String,System.Int32)">
            <summary>
            Create a component that represents a button, which reacts when clicking on it.
            </summary>
            <returns>The created <see cref="T:DevToys.Api.IUIButton"/> instance.</returns>
        </member>
        <member name="M:DevToys.Api.GUI.Button(System.String,System.String,System.Int32)">
            <summary>
            Create a component that represents a button, which reacts when clicking on it.
            </summary>
            <param name="id">An optional unique identifier for this UI element.</param>
            <param name="iconFontName">The name of the font containing the icon.</param>
            <param name="iconGlyph">The UTF-32 glyph corresponding to the icon in the <paramref name="iconFontName"/>.</param>
            <returns>The created <see cref="T:DevToys.Api.IUIUtf32IconButton"/> instance.</returns>
        </member>
        <member name="M:DevToys.Api.GUI.Button(System.String,System.String,System.Int32,System.String)">
            <summary>
            Create a component that represents a button, which reacts when clicking on it.
            </summary>
            <param name="id">An optional unique identifier for this UI element.</param>
            <param name="iconFontName">The name of the font containing the icon.</param>
            <param name="iconGlyph">The UTF-32 glyph corresponding to the icon in the <paramref name="iconFontName"/>.</param>
            <param name="text">The text to display in the button.</param>
            <returns>The created <see cref="T:DevToys.Api.IUIUtf32IconButton"/> instance.</returns>
        </member>
        <member name="M:DevToys.Api.GUI.Button(System.String,System.Int32,System.String)">
            <summary>
            Create a component that represents a button, which reacts when clicking on it.
            </summary>
            <param name="iconFontName">The name of the font containing the icon.</param>
            <param name="iconGlyph">The UTF-32 glyph corresponding to the icon in the <paramref name="iconFontName"/>.</param>
            <param name="text">The text to display in the button.</param>
            <returns>The created <see cref="T:DevToys.Api.IUIUtf32IconButton"/> instance.</returns>
        </member>
        <member name="M:DevToys.Api.GUI.Icon(DevToys.Api.IUIUtf32IconButton,System.String,System.Int32)">
            <summary>
            Sets the icon of the button.
            </summary>
            <param name="element">The <see cref="T:DevToys.Api.IUIUtf32IconButton"/> instance.</param>
            <param name="fontName">The name of the font containing the icon.</param>
            <param name="glyph">The UTF-32 glyph corresponding to the icon in the <paramref name="fontName"/>.</param>
            <returns>The updated <see cref="T:DevToys.Api.IUIUtf32IconButton"/> instance.</returns>
        </member>
        <member name="M:DevToys.Api.GUI.DropDownButton(System.String,System.Int32)">
            <summary>
            Create a component that represents a drop down button where the user can click on a menu item.
            </summary>
            <param name="iconFontName">The name of the font containing the icon.</param>
            <param name="iconGlyph">The UTF-32 glyph corresponding to the icon in the <paramref name="iconFontName"/>.</param>
        </member>
        <member name="M:DevToys.Api.GUI.DropDownButton(System.String,System.String,System.Int32)">
            <summary>
            Create a component that represents a drop down button where the user can click on a menu item.
            </summary>
            <param name="id">An optional unique identifier for this UI element.</param>
            <param name="iconFontName">The name of the font containing the icon.</param>
            <param name="iconGlyph">The UTF-32 glyph corresponding to the icon in the <paramref name="iconFontName"/>.</param>
        </member>
        <member name="M:DevToys.Api.GUI.DropDownButton(System.String,System.String,System.Int32,System.String)">
            <summary>
            Create a component that represents a drop down button where the user can click on a menu item.
            </summary>
            <param name="id">An optional unique identifier for this UI element.</param>
            <param name="iconFontName">The name of the font containing the icon.</param>
            <param name="iconGlyph">The UTF-32 glyph corresponding to the icon in the <paramref name="iconFontName"/>.</param>
            <param name="text">The text to display in the drop down button.</param>
        </member>
        <member name="M:DevToys.Api.GUI.DropDownButton(System.String,System.Int32,System.String)">
            <summary>
            Create a component that represents a drop down button where the user can click on a menu item.
            </summary>
            <param name="iconFontName">The name of the font containing the icon.</param>
            <param name="iconGlyph">The UTF-32 glyph corresponding to the icon in the <paramref name="iconFontName"/>.</param>
            <param name="text">The text to display in the drop down button.</param>
        </member>
        <member name="M:DevToys.Api.GUI.Icon(DevToys.Api.IUIUtf32IconDropDownButton,System.String,System.Int32)">
            <summary>
            Sets the icon of the drop down button.
            </summary>
        </member>
        <member name="M:DevToys.Api.GUI.DropDownMenuItem(System.String,System.Int32)">
            <summary>
            Create a component that represents a menu item, which reacts when clicking on it.
            </summary>
            <param name="iconFontName">The name of the font containing the icon.</param>
            <param name="iconGlyph">The UTF-32 glyph corresponding to the icon in the <paramref name="iconFontName"/>.</param>
        </member>
        <member name="M:DevToys.Api.GUI.DropDownMenuItem(System.String,System.Int32,System.String)">
            <summary>
            Create a component that represents a menu item, which reacts when clicking on it.
            </summary>
            <param name="iconFontName">The name of the font containing the icon.</param>
            <param name="iconGlyph">The UTF-32 glyph corresponding to the icon in the <paramref name="iconFontName"/>.</param>
            <param name="text">The text to display in the menu item.</param>
        </member>
        <member name="M:DevToys.Api.GUI.Icon(DevToys.Api.IUIUtf32IconDropDownMenuItem,System.String,System.Int32)">
            <summary>
            Sets the icon of the menu item.
            </summary>
        </member>
        <member name="M:DevToys.Api.GUI.WebView">
            <summary>
            A component that displays a web page.
            </summary>
        </member>
        <member name="M:DevToys.Api.GUI.WebView(System.String)">
            <summary>
            A component that displays a web page.
            </summary>
            <param name="id">An optional unique identifier for this UI element.</param>
        </member>
        <member name="M:DevToys.Api.GUI.RenderHTML(DevToys.Api.IUIWebView,System.String)">
            <summary>
            Sets the <see cref="P:DevToys.Api.IUIWebView.Source"/> from an HTML document.
            </summary>
        </member>
        <member name="M:DevToys.Api.GUI.NavigateToUri(DevToys.Api.IUIWebView,System.Uri)">
            <summary>
            Sets the <see cref="P:DevToys.Api.IUIWebView.Source"/> from a <see cref="T:System.Uri"/>.
            </summary>
        </member>
        <member name="M:DevToys.Api.GUI.Wrap">
            <summary>
            Create a component that stacks child elements horizontally and stack them into multiple lines if there's not enough space to keep everything on a single line.
            </summary>
        </member>
        <member name="M:DevToys.Api.GUI.Wrap(System.String)">
            <summary>
            Create a component that stacks child elements horizontally and stack them into multiple lines if there's not enough space to keep everything on a single line.
            </summary>
            <param name="id">An optional unique identifier for this UI element.</param>
        </member>
        <member name="M:DevToys.Api.GUI.WithChildren(DevToys.Api.IUIWrap,DevToys.Api.IUIElement[])">
            <summary>
            Sets the children to be displayed in the stack.
            </summary>
        </member>
        <member name="M:DevToys.Api.GUI.NoSpacing(DevToys.Api.IUIWrap)">
            <summary>
            Sets no spacing between children.
            </summary>
        </member>
        <member name="M:DevToys.Api.GUI.SmallSpacing(DevToys.Api.IUIWrap)">
            <summary>
            Sets a small spacing between children.
            </summary>
        </member>
        <member name="M:DevToys.Api.GUI.MediumSpacing(DevToys.Api.IUIWrap)">
            <summary>
            Sets a medium spacing between children.
            </summary>
        </member>
        <member name="M:DevToys.Api.GUI.LargeSpacing(DevToys.Api.IUIWrap)">
            <summary>
            Sets a large spacing between children.
            </summary>
        </member>
        <member name="M:DevToys.Api.GUI.WithRootElement(DevToys.Api.UIToolView,DevToys.Api.IUIElement)">
            <summary>
            Sets the element to be displayed in the view.
            </summary>
        </member>
        <member name="T:DevToys.Api.IUICard">
            <summary>
            A component that represents an empty card and <see cref="T:DevToys.Api.IUIElement"/> for the option value.
            </summary>
        </member>
        <member name="P:DevToys.Api.IUICard.UIElement">
            <summary>
            Gets the <see cref="T:DevToys.Api.IUIElement"/> to display in the item.
            </summary>
        </member>
        <member name="T:DevToys.Api.IUIDataGrid">
            <summary>
            A component that represents a grid that can display data with rows and columns.
            </summary>
        </member>
        <member name="P:DevToys.Api.IUIDataGrid.Columns">
            <summary>
            Gets the title of each column in the data grid.
            </summary>
        </member>
        <member name="P:DevToys.Api.IUIDataGrid.Rows">
            <summary>
            Gets the list of rows displayed in the data grid.
            </summary>
        </member>
        <member name="P:DevToys.Api.IUIDataGrid.CanSelectRow">
            <summary>
            Gets whether rows are selectable in the data grid. Default is true.
            </summary>
        </member>
        <member name="P:DevToys.Api.IUIDataGrid.SelectedRow">
            <summary>
            Gets the selected row in the data grid.
            </summary>
        </member>
        <member name="P:DevToys.Api.IUIDataGrid.OnRowSelectedAction">
            <summary>
            Gets the action to run when the user selects an row in the data grid.
            </summary>
        </member>
        <member name="P:DevToys.Api.IUIDataGrid.IsExtendableToFullScreen">
            <summary>
            Gets whether the element can be expanded to take the size of the whole tool boundaries. Default is false.
            </summary>
            <remarks>
            When <see cref="P:DevToys.Api.IUIElement.IsVisible"/> is false and that the element is in full screen mode, the element goes back to normal mode.
            </remarks>
        </member>
        <member name="P:DevToys.Api.IUIDataGrid.CommandBarExtraContent">
            <summary>
            Gets an extra interactive content to display in the command bar of the text input.
            </summary>
        </member>
        <member name="E:DevToys.Api.IUIDataGrid.CanSelectRowChanged">
            <summary>
            Raised when <see cref="P:DevToys.Api.IUIDataGrid.CanSelectRow"/> is changed.
            </summary>
        </member>
        <member name="E:DevToys.Api.IUIDataGrid.SelectedRowChanged">
            <summary>
            Raised when <see cref="P:DevToys.Api.IUIDataGrid.SelectedRow"/> is changed.
            </summary>
        </member>
        <member name="E:DevToys.Api.IUIDataGrid.IsExtendableToFullScreenChanged">
            <summary>
            Raised when <see cref="P:DevToys.Api.IUIDataGrid.IsExtendableToFullScreen"/> is changed.
            </summary>
        </member>
        <member name="E:DevToys.Api.IUIDataGrid.CommandBarExtraContentChanged">
            <summary>
            Raised when <see cref="P:DevToys.Api.IUIDataGrid.CommandBarExtraContent"/> is changed.
            </summary>
        </member>
        <member name="T:DevToys.Api.IUIDataGridCell">
            <summary>
            A component that represents a cell in a <see cref="T:DevToys.Api.IUIDataGridRow"/>.
            </summary>
        </member>
        <member name="P:DevToys.Api.IUIDataGridCell.UIElement">
            <summary>
            Gets the <see cref="T:DevToys.Api.IUIElement"/> to display in the cell.
            </summary>
        </member>
        <member name="T:DevToys.Api.IUIDataGridRow">
            <summary>
            A component that represents a row in a <see cref="T:DevToys.Api.IUIDataGrid"/>.
            </summary>
        </member>
        <member name="P:DevToys.Api.IUIDataGridRow.Value">
            <summary>
            Gets the value associated to the row.
            </summary>
        </member>
        <member name="T:DevToys.Api.IUIDiffTextInput">
            <summary>
            A component that can be used to display side by side or inlined texts and highlight differences between them.
            </summary>
        </member>
        <member name="P:DevToys.Api.IUIDiffTextInput.OriginalText">
            <summary>
            Gets the original text displayed to the left of the diff view.
            </summary>
            <remarks>
            This is the same value than <see cref="P:DevToys.Api.IUISingleLineTextInput.Text"/>.
            </remarks>
        </member>
        <member name="P:DevToys.Api.IUIDiffTextInput.ModifiedText">
            <summary>
            Gets the modified text displayed to the right of the diff view.
            </summary>
        </member>
        <member name="P:DevToys.Api.IUIDiffTextInput.InlineMode">
            <summary>
            Gets whether the text diff control should show differences side by side or inlined.
            </summary>
        </member>
        <member name="P:DevToys.Api.IUIDiffTextInput.IsExtendableToFullScreen">
            <summary>
            Gets whether the element can be expanded to take the size of the whole tool boundaries.
            </summary>
            <remarks>
            When <see cref="P:DevToys.Api.IUIElement.IsVisible"/> is false and that the element is in full screen mode, the element goes back to normal mode.
            </remarks>
        </member>
        <member name="E:DevToys.Api.IUIDiffTextInput.ModifiedTextChanged">
            <summary>
            Raised when <see cref="P:DevToys.Api.IUIDiffTextInput.ModifiedText"/> is changed.
            </summary>
        </member>
        <member name="E:DevToys.Api.IUIDiffTextInput.InlineModeChanged">
            <summary>
            Raised when <see cref="P:DevToys.Api.IUIDiffTextInput.InlineMode"/> is changed.
            </summary>
        </member>
        <member name="E:DevToys.Api.IUIDiffTextInput.IsExtendableToFullScreenChanged">
            <summary>
            Raised when <see cref="P:DevToys.Api.IUIDiffTextInput.IsExtendableToFullScreen"/> is changed.
            </summary>
        </member>
        <member name="T:DevToys.Api.IUIDropDownButton">
            <summary>
            A component that represents a drop down button where the user can click on a menu item.
            </summary>
        </member>
        <member name="P:DevToys.Api.IUIDropDownButton.MenuItems">
            <summary>
            Gets the list of items displayed in the drop down menu.
            </summary>
        </member>
        <member name="P:DevToys.Api.IUIDropDownButton.Text">
            <summary>
            Gets the text to display in the drop down button.
            </summary>
        </member>
        <member name="P:DevToys.Api.IUIDropDownButton.IconFontName">
            <summary>
            Gets the name of the font containing the icon.
            </summary>
        </member>
        <member name="P:DevToys.Api.IUIDropDownButton.IconGlyph">
            <summary>
            Gets the glyph corresponding to the icon in the <see cref="P:DevToys.Api.IUIDropDownButton.IconFontName"/>.
            </summary>
        </member>
        <member name="E:DevToys.Api.IUIDropDownButton.MenuItemsChanged">
            <summary>
             Raised when <see cref="P:DevToys.Api.IUIDropDownButton.MenuItems"/> is changed.
             </summary>
        </member>
        <member name="E:DevToys.Api.IUIDropDownButton.TextChanged">
            <summary>
            Raised when <see cref="P:DevToys.Api.IUIDropDownButton.Text"/> is changed.
            </summary>
        </member>
        <member name="E:DevToys.Api.IUIDropDownButton.IconFontNameChanged">
            <summary>
            Raised when <see cref="P:DevToys.Api.IUIDropDownButton.IconFontName"/> is changed.
            </summary>
        </member>
        <member name="E:DevToys.Api.IUIDropDownButton.IconGlyphChanged">
            <summary>
            Raised when <see cref="P:DevToys.Api.IUIDropDownButton.IconGlyph"/> is changed.
            </summary>
        </member>
        <member name="T:DevToys.Api.IUIDropDownListItem">
            <summary>
            A component that represents an item in a drop down list.
            </summary>
        </member>
        <member name="P:DevToys.Api.IUIDropDownListItem.Text">
            <summary>
            Gets the text to display in the item.
            </summary>
        </member>
        <member name="P:DevToys.Api.IUIDropDownListItem.Value">
            <summary>
            Gets the value associated to the item.
            </summary>
        </member>
        <member name="T:DevToys.Api.IUIDropDownMenuItem">
            <summary>
            A component that represents a menu item, which reacts when clicking on it.
            </summary>
        </member>
        <member name="P:DevToys.Api.IUIDropDownMenuItem.IsEnabled">
            <summary>
            Gets whether this menu item should be enabled or disabled. Default is true.
            </summary>
        </member>
        <member name="P:DevToys.Api.IUIDropDownMenuItem.Text">
            <summary>
            Gets the text to display in the menu item.
            </summary>
        </member>
        <member name="P:DevToys.Api.IUIDropDownMenuItem.IconFontName">
            <summary>
            Gets the name of the font containing the icon.
            </summary>
        </member>
        <member name="P:DevToys.Api.IUIDropDownMenuItem.IconGlyph">
            <summary>
            Gets the glyph corresponding to the icon in the <see cref="P:DevToys.Api.IUIDropDownMenuItem.IconFontName"/>.
            </summary>
        </member>
        <member name="P:DevToys.Api.IUIDropDownMenuItem.OnClickAction">
            <summary>
            Gets the action to run when the user clicks the menu item.
            </summary>
        </member>
        <member name="E:DevToys.Api.IUIDropDownMenuItem.IsEnabledChanged">
            <summary>
            Raised when <see cref="P:DevToys.Api.IUIDropDownMenuItem.IsEnabled"/> is changed.
            </summary>
        </member>
        <member name="E:DevToys.Api.IUIDropDownMenuItem.TextChanged">
            <summary>
            Raised when <see cref="P:DevToys.Api.IUIDropDownMenuItem.Text"/> is changed.
            </summary>
        </member>
        <member name="E:DevToys.Api.IUIDropDownMenuItem.IconFontNameChanged">
            <summary>
            Raised when <see cref="P:DevToys.Api.IUIDropDownMenuItem.IconFontName"/> is changed.
            </summary>
        </member>
        <member name="E:DevToys.Api.IUIDropDownMenuItem.IconGlyphChanged">
            <summary>
            Raised when <see cref="P:DevToys.Api.IUIDropDownMenuItem.IconGlyph"/> is changed.
            </summary>
        </member>
        <member name="T:DevToys.Api.IUIElement">
            <summary>
            A base interface for all UI elements.
            </summary>
        </member>
        <member name="P:DevToys.Api.IUIElement.Id">
            <summary>
            An optional unique identifier for this UI element.
            This Id can be helpful to identify some behavior related to a component in the logs of the app.
            </summary>
        </member>
        <member name="P:DevToys.Api.IUIElement.IsVisible">
            <summary>
            Gets whether this element should be visible or hidden in the UI.
            </summary>
        </member>
        <member name="P:DevToys.Api.IUIElement.IsEnabled">
            <summary>
            Gets whether this element and its children should be enabled or disabled.
            </summary>
        </member>
        <member name="P:DevToys.Api.IUIElement.HorizontalAlignment">
            <summary>
            Gets how the element should align horizontally.
            </summary>
        </member>
        <member name="P:DevToys.Api.IUIElement.VerticalAlignment">
            <summary>
            Gets how the element should align vertically.
            </summary>
        </member>
        <member name="E:DevToys.Api.IUIElement.IsVisibleChanged">
            <summary>
            Raised when <see cref="P:DevToys.Api.IUIElement.IsVisible"/> is changed.
            </summary>
        </member>
        <member name="E:DevToys.Api.IUIElement.IsEnabledChanged">
            <summary>
            Raised when <see cref="P:DevToys.Api.IUIElement.IsEnabled"/> is changed.
            </summary>
        </member>
        <member name="E:DevToys.Api.IUIElement.HorizontalAlignmentChanged">
            <summary>
            Raised when <see cref="P:DevToys.Api.IUIElement.HorizontalAlignment"/> is changed.
            </summary>
        </member>
        <member name="E:DevToys.Api.IUIElement.VerticalAlignmentChanged">
            <summary>
            Raised when <see cref="P:DevToys.Api.IUIElement.VerticalAlignment"/> is changed.
            </summary>
        </member>
        <member name="T:DevToys.Api.IUIElementWithChildren">
            <summary>
            A base interface for all UI elements that can have children elements.
            </summary>
        </member>
        <member name="M:DevToys.Api.IUIElementWithChildren.GetChildElementById(System.String)">
            <summary>
            Gets the first child element with the specified id.
            </summary>
            <param name="id">The id of a child element.</param>
            <returns>Returns null if the element could not be found. If many elements have the name id, this method returns the first it finds</returns>
        </member>
        <member name="T:DevToys.Api.IUIFileSelector">
            <summary>
            A component that represents a drop zone and selector for files, folders, images coming from the clipboard.
            </summary>
        </member>
        <member name="P:DevToys.Api.IUIFileSelector.SelectedFiles">
            <summary>
            Gets the list of absolute path to the file(s) the user selected.
            </summary>
            <remarks>The items contain a stream. It won't be disposed automatically. It is important to dispose the stream yourself, when not needed anymore</remarks>
        </member>
        <member name="P:DevToys.Api.IUIFileSelector.CanSelectManyFiles">
            <summary>
            Gets whether the user is allowed to select more than one file.
            </summary>
        </member>
        <member name="P:DevToys.Api.IUIFileSelector.AllowedFileExtensions">
            <summary>
            Gets the list of file extensions allowed to be selected. An empty list of file extensions indicates any kind of file.
            </summary>
        </member>
        <member name="P:DevToys.Api.IUIFileSelector.OnFilesSelectedAction">
            <summary>
            Gets the action to run when the user selected file(s).
            </summary>
            <remarks>The items contain a stream. It won't be disposed automatically. It is important to dispose the stream yourself, when not needed anymore</remarks>
        </member>
        <member name="E:DevToys.Api.IUIFileSelector.CanSelectManyFilesChanged">
            <summary>
            Raised when <see cref="P:DevToys.Api.IUIFileSelector.CanSelectManyFiles"/> is changed.
            </summary>
        </member>
        <member name="E:DevToys.Api.IUIFileSelector.AllowedFileExtensionsChanged">
            <summary>
            Raised when <see cref="P:DevToys.Api.IUIFileSelector.AllowedFileExtensions"/> is changed.
            </summary>
        </member>
        <member name="T:DevToys.Api.IUIGrid">
            <summary>
            A component provides a flexible grid area that consists of columns and rows.
            Child elements of the Grid are measured and arranged according to their row/column assignments and other logic.
            </summary>
        </member>
        <member name="P:DevToys.Api.IUIGrid.RowSpacing">
            <summary>
            Gets a value that indicates the space between rows.
            Default is <see cref="F:DevToys.Api.UISpacing.Small"/>.
            </summary>
        </member>
        <member name="P:DevToys.Api.IUIGrid.ColumnSpacing">
            <summary>
            Gets a value that indicates the space between columns.
            Default is <see cref="F:DevToys.Api.UISpacing.Small"/>.
            </summary>
        </member>
        <member name="P:DevToys.Api.IUIGrid.Rows">
            <summary>
            Gets the definition of the rows in the grid.
            Default is a row that takes the whole height.
            </summary>
        </member>
        <member name="P:DevToys.Api.IUIGrid.Columns">
            <summary>
            Gets the definition of the columns in the grid.
            Default is a column that takes the whole width.
            </summary>
        </member>
        <member name="P:DevToys.Api.IUIGrid.Cells">
            <summary>
            Gets the cells in the grid.
            </summary>
        </member>
        <member name="E:DevToys.Api.IUIGrid.RowSpacingChanged">
            <summary>
            Raised when <see cref="P:DevToys.Api.IUIGrid.RowSpacing"/> is changed.
            </summary>
        </member>
        <member name="E:DevToys.Api.IUIGrid.ColumnSpacingChanged">
            <summary>
            Raised when <see cref="P:DevToys.Api.IUIGrid.ColumnSpacing"/> is changed.
            </summary>
        </member>
        <member name="E:DevToys.Api.IUIGrid.RowsChanged">
            <summary>
            Raised when <see cref="P:DevToys.Api.IUIGrid.Rows"/> is changed.
            </summary>
        </member>
        <member name="E:DevToys.Api.IUIGrid.ColumnsChanged">
            <summary>
            Raised when <see cref="P:DevToys.Api.IUIGrid.Columns"/> is changed.
            </summary>
        </member>
        <member name="E:DevToys.Api.IUIGrid.CellsChanged">
            <summary>
            Raised when <see cref="P:DevToys.Api.IUIGrid.Cells"/> is changed.
            </summary>
        </member>
        <member name="T:DevToys.Api.IUIGridCell">
            <summary>
            A component hosted by a <see cref="T:DevToys.Api.IUIGrid"/> that represents a cell in a flexible grid.
            </summary>
        </member>
        <member name="P:DevToys.Api.IUIGridCell.Row">
            <summary>
            Gets the row alignment of the cell.
            </summary>
        </member>
        <member name="P:DevToys.Api.IUIGridCell.Column">
            <summary>
            Gets the column alignment of the cell.
            </summary>
        </member>
        <member name="P:DevToys.Api.IUIGridCell.RowSpan">
            <summary>
            Gets a value that indicates the total number of rows that the cell content spans within the parent grid.
            Default is 1.
            </summary>
        </member>
        <member name="P:DevToys.Api.IUIGridCell.ColumnSpan">
            <summary>
            Gets a value that indicates the total number of columns that the cell content spans within the parent grid.
            Default is 1.
            </summary>
        </member>
        <member name="P:DevToys.Api.IUIGridCell.Child">
            <summary>
            Gets the child element to display in the cell.
            </summary>
        </member>
        <member name="E:DevToys.Api.IUIGridCell.RowChanged">
            <summary>
            Raised when <see cref="P:DevToys.Api.IUIGridCell.Row"/> is changed.
            </summary>
        </member>
        <member name="E:DevToys.Api.IUIGridCell.ColumnChanged">
            <summary>
            Raised when <see cref="P:DevToys.Api.IUIGridCell.Column"/> is changed.
            </summary>
        </member>
        <member name="E:DevToys.Api.IUIGridCell.RowSpanChanged">
            <summary>
            Raised when <see cref="P:DevToys.Api.IUIGridCell.RowSpan"/> is changed.
            </summary>
        </member>
        <member name="E:DevToys.Api.IUIGridCell.ColumnSpanChanged">
            <summary>
            Raised when <see cref="P:DevToys.Api.IUIGridCell.ColumnSpan"/> is changed.
            </summary>
        </member>
        <member name="E:DevToys.Api.IUIGridCell.ChildChanged">
            <summary>
            Raised when <see cref="P:DevToys.Api.IUIGridCell.Child"/> is changed.
            </summary>
        </member>
        <member name="T:DevToys.Api.IUIIcon">
            <summary>
            A component that represents an icon.
            </summary>
        </member>
        <member name="P:DevToys.Api.IUIIcon.FontName">
            <summary>
            Gets the name of the font containing the icon.
            </summary>
        </member>
        <member name="P:DevToys.Api.IUIIcon.Glyph">
            <summary>
            Gets the glyph corresponding to the icon in the <see cref="P:DevToys.Api.IUIIcon.FontName"/>.
            </summary>
        </member>
        <member name="P:DevToys.Api.IUIIcon.Size">
            <summary>
            Gets the size of the icon.
            </summary>
        </member>
        <member name="E:DevToys.Api.IUIIcon.FontNameChanged">
            <summary>
            Raised when <see cref="P:DevToys.Api.IUIIcon.FontName"/> is changed.
            </summary>
        </member>
        <member name="E:DevToys.Api.IUIIcon.GlyphChanged">
            <summary>
            Raised when <see cref="P:DevToys.Api.IUIIcon.Glyph"/> is changed.
            </summary>
        </member>
        <member name="E:DevToys.Api.IUIIcon.SizeChanged">
            <summary>
            Raised when <see cref="P:DevToys.Api.IUIIcon.Size"/> is changed.
            </summary>
        </member>
        <member name="T:DevToys.Api.IUIImageViewer">
            <summary>
            A component that displays an image and allows the user to perform some read-only actions on it.
            By default, image viewer supports BMP, GIF, JPEG, PBM, PNG, TIFF, TGA, WEBP, SVG formats.
            </summary>
        </member>
        <member name="P:DevToys.Api.IUIImageViewer.ImageSource">
            <summary>
            Gets the source the image to display comes from.
            </summary>
        </member>
        <member name="P:DevToys.Api.IUIImageViewer.CustomActionPerFileExtensionOnSaving">
            <summary>
            Gets the custom actions to perform when the user saves the image with a specific file extension.
            </summary>
        </member>
        <member name="E:DevToys.Api.IUIImageViewer.ImageSourceChanged">
            <summary>
            Raised when <see cref="P:DevToys.Api.IUIImageViewer.ImageSource"/> is changed.
            </summary>
        </member>
        <member name="E:DevToys.Api.IUIImageViewer.CustomActionPerFileExtensionOnSavingChanged">
            <summary>
            Raised when <see cref="P:DevToys.Api.IUIImageViewer.CustomActionPerFileExtensionOnSaving"/> is changed.
            </summary>
        </member>
        <member name="P:DevToys.Api.UIImageViewer.ImageSource">
            <inheritdoc/>
        </member>
        <member name="P:DevToys.Api.UIImageViewer.CustomActionPerFileExtensionOnSaving">
            <inheritdoc/>
        </member>
        <member name="E:DevToys.Api.UIImageViewer.ImageSourceChanged">
            <inheritdoc/>
        </member>
        <member name="E:DevToys.Api.UIImageViewer.CustomActionPerFileExtensionOnSavingChanged">
            <inheritdoc/>
        </member>
        <member name="M:DevToys.Api.UIImageViewer.Dispose">
            <inheritdoc/>
        </member>
        <member name="T:DevToys.Api.IUIInfoBar">
            <summary>
            A component that displays a bar aiming at indicating a relevant information to the user.
            </summary>
        </member>
        <member name="P:DevToys.Api.IUIInfoBar.IsOpened">
            <summary>
            Gets whether the bar is opened.
            Default is false.
            </summary>
        </member>
        <member name="P:DevToys.Api.IUIInfoBar.IsClosable">
            <summary>
            Gets whether the bar can be closed by the user on demand.
            Default is true.
            </summary>
        </member>
        <member name="P:DevToys.Api.IUIInfoBar.IsIconVisible">
            <summary>
            Gets whether the icon of the bar should be displayed or not.
            Default is true.
            </summary>
        </member>
        <member name="P:DevToys.Api.IUIInfoBar.Title">
            <summary>
            Gets the title to display in the bar.
            </summary>
        </member>
        <member name="P:DevToys.Api.IUIInfoBar.Description">
            <summary>
            Gets the description to display in the bar.
            </summary>
        </member>
        <member name="P:DevToys.Api.IUIInfoBar.ActionButtonText">
            <summary>
            Gets the text of the optional button to display in the bar.
            A null or empty value will hide the button. The bar closes when the user click on the button.
            </summary>
        </member>
        <member name="P:DevToys.Api.IUIInfoBar.IsActionButtonAccent">
            <summary>
            Gets whether the optional button to display in the bar should be accented.
            Default is false.
            </summary>
        </member>
        <member name="P:DevToys.Api.IUIInfoBar.Severity">
            <summary>
            Gets the severity of the information to display.
            Default is <see cref="F:DevToys.Api.UIInfoBarSeverity.Informational"/>.
            </summary>
        </member>
        <member name="P:DevToys.Api.IUIInfoBar.OnCloseAction">
            <summary>
            Gets the action to run when the user explicitly close the bar.
            </summary>
        </member>
        <member name="P:DevToys.Api.IUIInfoBar.OnActionButtonClick">
            <summary>
            Gets the action to run when the user clicks the action button.
            The bar closes when the user click on the button.
            </summary>
        </member>
        <member name="E:DevToys.Api.IUIInfoBar.IsOpenedChanged">
            <summary>
            Raised when <see cref="P:DevToys.Api.IUIInfoBar.IsOpened"/> is changed.
            </summary>
        </member>
        <member name="E:DevToys.Api.IUIInfoBar.IsClosableChanged">
            <summary>
            Raised when <see cref="P:DevToys.Api.IUIInfoBar.IsClosable"/> is changed.
            </summary>
        </member>
        <member name="E:DevToys.Api.IUIInfoBar.IsIconVisibleChanged">
            <summary>
            Raised when <see cref="P:DevToys.Api.IUIInfoBar.IsIconVisible"/> is changed.
            </summary>
        </member>
        <member name="E:DevToys.Api.IUIInfoBar.TitleChanged">
            <summary>
            Raised when <see cref="P:DevToys.Api.IUIInfoBar.Title"/> is changed.
            </summary>
        </member>
        <member name="E:DevToys.Api.IUIInfoBar.DescriptionChanged">
            <summary>
            Raised when <see cref="P:DevToys.Api.IUIInfoBar.Description"/> is changed.
            </summary>
        </member>
        <member name="E:DevToys.Api.IUIInfoBar.ActionButtonTextChanged">
            <summary>
            Raised when <see cref="P:DevToys.Api.IUIInfoBar.ActionButtonText"/> is changed.
            </summary>
        </member>
        <member name="E:DevToys.Api.IUIInfoBar.IsActionButtonAccentChanged">
            <summary>
            Raised when <see cref="P:DevToys.Api.IUIInfoBar.IsActionButtonAccent"/> is changed.
            </summary>
        </member>
        <member name="E:DevToys.Api.IUIInfoBar.SeverityChanged">
            <summary>
            Raised when <see cref="P:DevToys.Api.IUIInfoBar.Severity"/> is changed.
            </summary>
        </member>
        <member name="E:DevToys.Api.IUIInfoBar.OnCloseActionChanged">
            <summary>
            Raised when <see cref="P:DevToys.Api.IUIInfoBar.OnCloseAction"/> is changed.
            </summary>
        </member>
        <member name="E:DevToys.Api.IUIInfoBar.OnActionButtonClickChanged">
            <summary>
            Raised when <see cref="P:DevToys.Api.IUIInfoBar.OnActionButtonClick"/> is changed.
            </summary>
        </member>
        <member name="T:DevToys.Api.IUILabel">
            <summary>
            A component that displays a text.
            </summary>
        </member>
        <member name="P:DevToys.Api.IUILabel.Text">
            <summary>
            Gets the text to display.
            </summary>
        </member>
        <member name="P:DevToys.Api.IUILabel.Style">
            <summary>
            Gets the style of the text.
            Default value is <see cref="F:DevToys.Api.UILabelStyle.Body"/>.
            </summary>
        </member>
        <member name="P:DevToys.Api.IUILabel.AutoWrap">
            <summary>
            Gets whether the text can wrap if it can't fit within the available horizontal space.
            Default is true.
            </summary>
        </member>
        <member name="E:DevToys.Api.IUILabel.TextChanged">
            <summary>
            Raised when <see cref="P:DevToys.Api.IUILabel.Text"/> is changed.
            </summary>
        </member>
        <member name="E:DevToys.Api.IUILabel.StyleChanged">
            <summary>
            Raised when <see cref="P:DevToys.Api.IUILabel.Style"/> is changed.
            </summary>
        </member>
        <member name="E:DevToys.Api.IUILabel.AutoWrapChanged">
            <summary>
            Raised when <see cref="P:DevToys.Api.IUILabel.AutoWrap"/> is changed.
            </summary>
        </member>
        <member name="T:DevToys.Api.IUIList">
            <summary>
            A component that represents a list of items.
            </summary>
        </member>
        <member name="P:DevToys.Api.IUIList.Items">
            <summary>
            Gets the list of items displayed in the list.
            </summary>
        </member>
        <member name="P:DevToys.Api.IUIList.CanSelectItem">
            <summary>
            Gets whether items are selectable in the list. Default is true.
            </summary>
        </member>
        <member name="P:DevToys.Api.IUIList.SelectedItem">
            <summary>
            Gets the selected item in the list.
            </summary>
        </member>
        <member name="P:DevToys.Api.IUIList.OnItemSelectedAction">
            <summary>
            Gets the action to run when the user selects an item in the list.
            </summary>
        </member>
        <member name="E:DevToys.Api.IUIList.CanSelectItemChanged">
            <summary>
            Raised when <see cref="P:DevToys.Api.IUIList.CanSelectItem"/> is changed.
            </summary>
        </member>
        <member name="E:DevToys.Api.IUIList.SelectedItemChanged">
            <summary>
            Raised when <see cref="P:DevToys.Api.IUIList.SelectedItem"/> is changed.
            </summary>
        </member>
        <member name="T:DevToys.Api.IUIListItem">
            <summary>
            A component that represents an item in a list.
            </summary>
        </member>
        <member name="P:DevToys.Api.IUIListItem.UIElement">
            <summary>
            Gets the <see cref="T:DevToys.Api.IUIElement"/> to display in the item.
            </summary>
        </member>
        <member name="P:DevToys.Api.IUIListItem.Value">
            <summary>
            Gets the value associated to the item.
            </summary>
        </member>
        <member name="T:DevToys.Api.IUIMultiLineTextInput">
            <summary>
            A component that can be used to display or edit unformatted text on multiple lines.
            </summary>
        </member>
        <member name="P:DevToys.Api.IUIMultiLineTextInput.HighlightedSpans">
            <summary>
            Gets the list of spans to highlight in the text document.
            </summary>
        </member>
        <member name="P:DevToys.Api.IUIMultiLineTextInput.HoverTooltips">
            <summary>
            Gets the list of tooltip to display on word hover.
            </summary>
        </member>
        <member name="P:DevToys.Api.IUIMultiLineTextInput.TextInputToSynchronizeScrollBarWith">
            <summary>
            Gets the text input to synchronize the scroll bar with.
            </summary>
        </member>
        <member name="P:DevToys.Api.IUIMultiLineTextInput.SyntaxColorizationLanguageName">
            <summary>
            Gets the programming language name to use when colorizing the text in the control.
            </summary>
        </member>
        <member name="P:DevToys.Api.IUIMultiLineTextInput.IsExtendableToFullScreen">
            <summary>
            Gets whether the element can be expanded to take the size of the whole tool boundaries. Default is false.
            </summary>
            <remarks>
            When <see cref="P:DevToys.Api.IUIElement.IsVisible"/> is false and that the element is in full screen mode, the element goes back to normal mode.
            </remarks>
        </member>
        <member name="P:DevToys.Api.IUIMultiLineTextInput.WrapMode">
            <summary>
            Gets how the text should wrap when it reached the maximum horizontal space it can take. Default is <see cref="F:DevToys.Api.UITextWrapMode.Auto"/>.
            </summary>
        </member>
        <member name="P:DevToys.Api.IUIMultiLineTextInput.LineNumberMode">
            <summary>
            Gets how the line number should be displayed in the text editor. Default is <see cref="F:DevToys.Api.UITextLineNumber.Auto"/>.
            </summary>
        </member>
        <member name="P:DevToys.Api.IUIMultiLineTextInput.Selection">
            <summary>
            Gets the primary selection of the text control. When the selection length is 0, the span indicates the caret position.
            </summary>
        </member>
        <member name="E:DevToys.Api.IUIMultiLineTextInput.HoverTooltipChanged">
            <summary>
            Raised when <see cref="P:DevToys.Api.IUIMultiLineTextInput.HoverTooltips"/> is changed.
            </summary>
        </member>
        <member name="E:DevToys.Api.IUIMultiLineTextInput.HighlightedSpansChanged">
            <summary>
            Raised when <see cref="P:DevToys.Api.IUIMultiLineTextInput.HighlightedSpans"/> is changed.
            </summary>
        </member>
        <member name="E:DevToys.Api.IUIMultiLineTextInput.TextInputToSynchronizeScrollBarWithChanged">
            <summary>
            Raised when <see cref="P:DevToys.Api.IUIMultiLineTextInput.TextInputToSynchronizeScrollBarWith"/> is changed.
            </summary>
        </member>
        <member name="E:DevToys.Api.IUIMultiLineTextInput.SyntaxColorizationLanguageNameChanged">
            <summary>
            Raised when <see cref="P:DevToys.Api.IUIMultiLineTextInput.SyntaxColorizationLanguageName"/> is changed.
            </summary>
        </member>
        <member name="E:DevToys.Api.IUIMultiLineTextInput.IsExtendableToFullScreenChanged">
            <summary>
            Raised when <see cref="P:DevToys.Api.IUIMultiLineTextInput.IsExtendableToFullScreen"/> is changed.
            </summary>
        </member>
        <member name="E:DevToys.Api.IUIMultiLineTextInput.WrapModeChanged">
            <summary>
            Raised when <see cref="P:DevToys.Api.IUIMultiLineTextInput.WrapMode"/> is changed.
            </summary>
        </member>
        <member name="E:DevToys.Api.IUIMultiLineTextInput.LineNumberModeChanged">
            <summary>
            Raised when <see cref="P:DevToys.Api.IUIMultiLineTextInput.LineNumberMode"/> is changed.
            </summary>
        </member>
        <member name="E:DevToys.Api.IUIMultiLineTextInput.SelectionChanged">
            <summary>
            Raised when <see cref="P:DevToys.Api.IUIMultiLineTextInput.Selection"/> is changed.
            </summary>
        </member>
        <member name="T:DevToys.Api.IUINumberInput">
            <summary>
            A component that can be used to display or edit numbers on a single line.
            </summary>
        </member>
        <member name="P:DevToys.Api.IUINumberInput.Min">
            <summary>
            Gets the minimum value possible. Default is <see cref="F:System.Int32.MinValue"/>.
            </summary>
        </member>
        <member name="P:DevToys.Api.IUINumberInput.Max">
            <summary>
            Gets the maximum value possible. Default is <see cref="F:System.Int32.MaxValue"/>.
            </summary>
        </member>
        <member name="P:DevToys.Api.IUINumberInput.Step">
            <summary>
            Gets the interval between legal numbers. Default is 1.
            </summary>
        </member>
        <member name="P:DevToys.Api.IUINumberInput.Value">
            <summary>
            Gets the value of the input.
            </summary>
        </member>
        <member name="E:DevToys.Api.IUINumberInput.MinChanged">
            <summary>
            Raised when <see cref="P:DevToys.Api.IUINumberInput.Min"/> is changed.
            </summary>
        </member>
        <member name="E:DevToys.Api.IUINumberInput.MaxChanged">
            <summary>
            Raised when <see cref="P:DevToys.Api.IUINumberInput.Max"/> is changed.
            </summary>
        </member>
        <member name="E:DevToys.Api.IUINumberInput.StepChanged">
            <summary>
            Raised when <see cref="P:DevToys.Api.IUINumberInput.Step"/> is changed.
            </summary>
        </member>
        <member name="E:DevToys.Api.IUINumberInput.ValueChanged">
            <summary>
            Raised when <see cref="P:DevToys.Api.IUINumberInput.Value"/> is changed.
            </summary>
        </member>
        <member name="T:DevToys.Api.IUIPasswordInput">
            <summary>
            A component that can be used to display or edit passwords on a single line.
            </summary>
        </member>
        <member name="T:DevToys.Api.IUIProgressBar">
            <summary>
            A component that indicates the progress of an operation.
            </summary>
        </member>
        <member name="P:DevToys.Api.IUIProgressBar.Value">
            <summary>
            Gets the current position of the progress bar between 0 and 100.
            </summary>
        </member>
        <member name="P:DevToys.Api.IUIProgressBar.IsIndeterminate">
            <summary>
            Gets whether the progress bar shows actual values or generic, continuous progress feedback.
            </summary>
        </member>
        <member name="E:DevToys.Api.IUIProgressBar.ValueChanged">
            <summary>
            Raised when <see cref="P:DevToys.Api.IUIProgressBar.Value"/> is changed.
            </summary>
        </member>
        <member name="E:DevToys.Api.IUIProgressBar.ValueChangingAsynchronously">
            <summary>
            Raised when <see cref="P:DevToys.Api.IUIProgressBar.Value"/> is changing asynchronously.
            </summary>
        </member>
        <member name="E:DevToys.Api.IUIProgressBar.IsIndeterminateChanged">
            <summary>
            Raised when <see cref="P:DevToys.Api.IUIProgressBar.IsIndeterminate"/> is changed.
            </summary>
        </member>
        <member name="P:DevToys.Api.UIProgressBar.Value">
            <inheritdoc/>
        </member>
        <member name="P:DevToys.Api.UIProgressBar.IsIndeterminate">
            <inheritdoc/>
        </member>
        <member name="E:DevToys.Api.UIProgressBar.ValueChanged">
            <inheritdoc/>
        </member>
        <member name="E:DevToys.Api.UIProgressBar.ValueChangingAsynchronously">
            <inheritdoc/>
        </member>
        <member name="E:DevToys.Api.UIProgressBar.IsIndeterminateChanged">
            <inheritdoc/>
        </member>
        <member name="M:DevToys.Api.UIProgressBar.Dispose">
            <inheritdoc/>
        </member>
        <member name="T:DevToys.Api.IUIProgressRing">
            <summary>
            A circular component that indicates the progress of an operation.
            </summary>
        </member>
        <member name="T:DevToys.Api.IUISelectDropDownList">
            <summary>
            A component that represents a drop down list where the user can select one item in it.
            </summary>
        </member>
        <member name="P:DevToys.Api.IUISelectDropDownList.Items">
            <summary>
            Gets the list of items displayed in the drop down list.
            </summary>
        </member>
        <member name="P:DevToys.Api.IUISelectDropDownList.SelectedItem">
            <summary>
            Gets the selected item in the drop down list.
            </summary>
        </member>
        <member name="P:DevToys.Api.IUISelectDropDownList.OnItemSelectedAction">
            <summary>
            Gets the action to run when the user selects an item in the list.
            </summary>
        </member>
        <member name="E:DevToys.Api.IUISelectDropDownList.ItemsChanged">
            <summary>
            Raised when <see cref="P:DevToys.Api.IUISelectDropDownList.Items"/> is changed.
            </summary>
        </member>
        <member name="E:DevToys.Api.IUISelectDropDownList.SelectedItemChanged">
            <summary>
            Raised when <see cref="P:DevToys.Api.IUISelectDropDownList.SelectedItem"/> is changed.
            </summary>
        </member>
        <member name="T:DevToys.Api.IUISetting">
            <summary>
            A component that represents a setting, with a title, description, icon and <see cref="T:DevToys.Api.IUIElement"/> for the option value.
            </summary>
        </member>
        <member name="P:DevToys.Api.IUISetting.Description">
            <summary>
            Gets the description of the setting.
            </summary>
        </member>
        <member name="P:DevToys.Api.IUISetting.StateDescription">
            <summary>
            Gets the description of the state of the setting.
            </summary>
        </member>
        <member name="P:DevToys.Api.IUISetting.Icon">
            <summary>
            Gets the icon of the setting.
            </summary>
        </member>
        <member name="P:DevToys.Api.IUISetting.InteractiveElement">
            <summary>
            Gets the <see cref="T:DevToys.Api.IUIElement"/> that represents the interactive part of the setting.
            </summary>
        </member>
        <member name="E:DevToys.Api.IUISetting.DescriptionChanged">
            <summary>
            Raised when <see cref="P:DevToys.Api.IUISetting.Description"/> is changed.
            </summary>
        </member>
        <member name="E:DevToys.Api.IUISetting.StateDescriptionChanged">
            <summary>
            Raised when <see cref="P:DevToys.Api.IUISetting.StateDescription"/> is changed.
            </summary>
        </member>
        <member name="E:DevToys.Api.IUISetting.IconChanged">
            <summary>
            Raised when <see cref="P:DevToys.Api.IUISetting.Icon"/> is changed.
            </summary>
        </member>
        <member name="E:DevToys.Api.IUISetting.InteractiveElementChanged">
            <summary>
            Raised when <see cref="P:DevToys.Api.IUISetting.InteractiveElement"/> is changed.
            </summary>
        </member>
        <member name="P:DevToys.Api.UISetting.Description">
            <inheritdoc/>
        </member>
        <member name="P:DevToys.Api.UISetting.StateDescription">
            <inheritdoc/>
        </member>
        <member name="P:DevToys.Api.UISetting.Icon">
            <inheritdoc/>
        </member>
        <member name="P:DevToys.Api.UISetting.InteractiveElement">
            <inheritdoc/>
        </member>
        <member name="E:DevToys.Api.UISetting.DescriptionChanged">
            <inheritdoc/>
        </member>
        <member name="E:DevToys.Api.UISetting.StateDescriptionChanged">
            <inheritdoc/>
        </member>
        <member name="E:DevToys.Api.UISetting.IconChanged">
            <inheritdoc/>
        </member>
        <member name="E:DevToys.Api.UISetting.InteractiveElementChanged">
            <inheritdoc/>
        </member>
        <member name="T:DevToys.Api.IUISettingGroup">
            <summary>
            A component that represents a group of settings, with a title, description and an icon.
            </summary>
        </member>
        <member name="P:DevToys.Api.IUISettingGroup.Children">
            <summary>
            Gets the list of child elements.
            </summary>
        </member>
        <member name="P:DevToys.Api.IUISettingGroup.ChildrenAreAllSettings">
            <summary>
            Gets whether element in <see cref="P:DevToys.Api.IUISettingGroup.Children"/> are all of type <see cref="T:DevToys.Api.IUISetting"/>.
            </summary>
        </member>
        <member name="E:DevToys.Api.IUISettingGroup.ChildrenChanged">
            <summary>
            Raised when <see cref="P:DevToys.Api.IUISettingGroup.Children"/> is changed.
            </summary>
        </member>
        <member name="P:DevToys.Api.UISettingGroup.Children">
            <inheritdoc/>
        </member>
        <member name="P:DevToys.Api.UISettingGroup.ChildrenAreAllSettings">
            <inheritdoc/>
        </member>
        <member name="E:DevToys.Api.UISettingGroup.ChildrenChanged">
            <inheritdoc/>
        </member>
        <member name="T:DevToys.Api.IUISingleLineTextInput">
            <summary>
            A component that can be used to display or edit unformatted text on a single line.
            </summary>
        </member>
        <member name="P:DevToys.Api.IUISingleLineTextInput.IsReadOnly">
            <summary>
            Gets whether the user can edit the text or not. Default is false.
            </summary>
        </member>
        <member name="P:DevToys.Api.IUISingleLineTextInput.CanCopyWhenEditable">
            <summary>
            Gets whether the `Copy` button should be displayed on top of the editor, even when it is not read-only. Default is false.
            </summary>
        </member>
        <member name="P:DevToys.Api.IUISingleLineTextInput.Text">
            <summary>
            Gets the text displayed or typed by the user.
            </summary>
        </member>
        <member name="P:DevToys.Api.IUISingleLineTextInput.CommandBarExtraContent">
            <summary>
            Gets an extra interactive content to display in the command bar of the text input.
            </summary>
        </member>
        <member name="P:DevToys.Api.IUISingleLineTextInput.HideCommandBar">
            <summary>
            Gets whether the command bar should be hidden. Default is false.
            </summary>
            <remarks>
            When true, <see cref="P:DevToys.Api.IUISingleLineTextInput.CommandBarExtraContent"/> is ignored.
            </remarks>
        </member>
        <member name="E:DevToys.Api.IUISingleLineTextInput.IsReadOnlyChanged">
            <summary>
            Raised when <see cref="P:DevToys.Api.IUISingleLineTextInput.IsReadOnly"/> is changed.
            </summary>
        </member>
        <member name="E:DevToys.Api.IUISingleLineTextInput.CanCopyWhenEditableChanged">
            <summary>
            Raised when <see cref="P:DevToys.Api.IUISingleLineTextInput.CanCopyWhenEditable"/> is changed.
            </summary>
        </member>
        <member name="E:DevToys.Api.IUISingleLineTextInput.TextChanged">
            <summary>
            Raised when <see cref="P:DevToys.Api.IUISingleLineTextInput.Text"/> is changed.
            </summary>
        </member>
        <member name="E:DevToys.Api.IUISingleLineTextInput.CommandBarExtraContentChanged">
            <summary>
            Raised when <see cref="P:DevToys.Api.IUISingleLineTextInput.CommandBarExtraContent"/> is changed.
            </summary>
        </member>
        <member name="E:DevToys.Api.IUISingleLineTextInput.HideCommandBarChanged">
            <summary>
            Raised when <see cref="P:DevToys.Api.IUISingleLineTextInput.HideCommandBar"/> is changed.
            </summary>
        </member>
        <member name="T:DevToys.Api.IUISplitGrid">
            <summary>
            A component that splits horizontally or vertically an area into two panes. Panes can be resized by the user.
            </summary>
        </member>
        <member name="P:DevToys.Api.IUISplitGrid.Orientation">
            <summary>
            Gets the orientation of the grid gutter.
            Default is <see cref="F:DevToys.Api.UIOrientation.Vertical"/>.
            </summary>
        </member>
        <member name="P:DevToys.Api.IUISplitGrid.MinimumCellLength">
            <summary>
            Gets the minimum length of a cell, in pixels.
            Default is 50.
            </summary>
        </member>
        <member name="P:DevToys.Api.IUISplitGrid.LeftOrTopCellLength">
            <summary>
            Gets the length of the top or left cell.
            Default is 1*. <see cref="P:DevToys.Api.UIGridLength.Auto"/> is not supported.
            </summary>
        </member>
        <member name="P:DevToys.Api.IUISplitGrid.RightOrBottomCellLength">
            <summary>
            Gets the length of the right or bottom cell.
            Default is 1*. <see cref="P:DevToys.Api.UIGridLength.Auto"/> is not supported.
            </summary>
        </member>
        <member name="P:DevToys.Api.IUISplitGrid.RightOrBottomCellContent">
            <summary>
            Gets the element to display in the right or bottom cell, depending on the <see cref="P:DevToys.Api.IUISplitGrid.Orientation"/>.
            </summary>
        </member>
        <member name="P:DevToys.Api.IUISplitGrid.LeftOrTopCellContent">
            <summary>
            Gets the element to display in the top or left cell, depending on the <see cref="P:DevToys.Api.IUISplitGrid.Orientation"/>.
            </summary>
        </member>
        <member name="E:DevToys.Api.IUISplitGrid.OrientationChanged">
            <summary>
            Raised when <see cref="P:DevToys.Api.IUISplitGrid.Orientation"/> is changed.
            </summary>
        </member>
        <member name="E:DevToys.Api.IUISplitGrid.MinimumCellLengthChanged">
            <summary>
            Raised when <see cref="P:DevToys.Api.IUISplitGrid.MinimumCellLength"/> is changed.
            </summary>
        </member>
        <member name="E:DevToys.Api.IUISplitGrid.LeftOrTopCellLengthChanged">
            <summary>
            Raised when <see cref="P:DevToys.Api.IUISplitGrid.LeftOrTopCellLength"/> is changed.
            </summary>
        </member>
        <member name="E:DevToys.Api.IUISplitGrid.RightOrBottomCellLengthChanged">
            <summary>
            Raised when <see cref="P:DevToys.Api.IUISplitGrid.RightOrBottomCellLength"/> is changed.
            </summary>
        </member>
        <member name="E:DevToys.Api.IUISplitGrid.RightOrBottomCellContentChanged">
            <summary>
            Raised when <see cref="P:DevToys.Api.IUISplitGrid.RightOrBottomCellContent"/> is changed.
            </summary>
        </member>
        <member name="E:DevToys.Api.IUISplitGrid.LeftOrTopCellContentChanged">
            <summary>
            Raised when <see cref="P:DevToys.Api.IUISplitGrid.LeftOrTopCellContent"/> is changed.
            </summary>
        </member>
        <member name="T:DevToys.Api.IUIStack">
            <summary>
            A component that stacks child elements into a single line that can be oriented horizontally or vertically.
            </summary>
        </member>
        <member name="P:DevToys.Api.IUIStack.Orientation">
            <summary>
            Gets a value that indicates the dimension by which child elements are stacked.
            Default is <see cref="F:DevToys.Api.UIOrientation.Horizontal"/>.
            </summary>
        </member>
        <member name="P:DevToys.Api.IUIStack.Spacing">
            <summary>
            Gets a value that indicates the space between stacked elements.
            Default is <see cref="F:DevToys.Api.UISpacing.Small"/>.
            </summary>
        </member>
        <member name="P:DevToys.Api.IUIStack.Children">
            <summary>
            Gets the list of child elements.
            </summary>
        </member>
        <member name="E:DevToys.Api.IUIStack.OrientationChanged">
            <summary>
            Raised when <see cref="P:DevToys.Api.IUIStack.Orientation"/> is changed.
            </summary>
        </member>
        <member name="E:DevToys.Api.IUIStack.SpacingChanged">
            <summary>
            Raised when <see cref="P:DevToys.Api.IUIStack.Spacing"/> is changed.
            </summary>
        </member>
        <member name="E:DevToys.Api.IUIStack.ChildrenChanged">
            <summary>
            Raised when <see cref="P:DevToys.Api.IUIStack.Children"/> is changed.
            </summary>
        </member>
        <member name="T:DevToys.Api.IUISwitch">
            <summary>
            A component that represents a changeable switch.
            </summary>
        </member>
        <member name="P:DevToys.Api.IUISwitch.IsOn">
            <summary>
            Gets the current state of the switch.
            </summary>
        </member>
        <member name="P:DevToys.Api.IUISwitch.OnText">
            <summary>
            Gets the text to display when the <see cref="P:DevToys.Api.IUISwitch.IsOn"/> is true. Default is "On".
            </summary>
        </member>
        <member name="P:DevToys.Api.IUISwitch.OffText">
            <summary>
            Gets the text to display when the <see cref="P:DevToys.Api.IUISwitch.IsOn"/> is false. Default is "Off".
            </summary>
        </member>
        <member name="E:DevToys.Api.IUISwitch.OnTextChanged">
            <summary>
            Raised when <see cref="P:DevToys.Api.IUISwitch.OnText"/> is changed.
            </summary>
        </member>
        <member name="E:DevToys.Api.IUISwitch.OffTextChanged">
            <summary>
            Raised when <see cref="P:DevToys.Api.IUISwitch.OffText"/> is changed.
            </summary>
        </member>
        <member name="E:DevToys.Api.IUISwitch.IsOnChanged">
            <summary>
            Raised when <see cref="P:DevToys.Api.IUISwitch.IsOn"/> is changed.
            </summary>
        </member>
        <member name="T:DevToys.Api.IUITitledElement">
            <summary>
            A base interface for all UI elements that can have a title / header on top of the element.
            </summary>
        </member>
        <member name="P:DevToys.Api.IUITitledElement.Title">
            <summary>
            Gets a title to display for this element.
            </summary>
        </member>
        <member name="E:DevToys.Api.IUITitledElement.TitleChanged">
            <summary>
            Raised when <see cref="P:DevToys.Api.IUITitledElement.Title"/> is changed.
            </summary>
        </member>
        <member name="T:DevToys.Api.IUITitledElementWithChildren">
            <summary>
            A base interface for all UI elements that can have a title / header on top of the element along with children elements.
            </summary>
        </member>
        <member name="T:DevToys.Api.IUIUtf32GlyphProvider">
            <summary>
            Provides an interface for UI components that support UTF-32 glyphs.
            </summary>
        </member>
        <member name="P:DevToys.Api.IUIUtf32GlyphProvider.Utf32Glyph">
            <summary>
            Gets the UTF-32 code point of the glyph.
            </summary>
        </member>
        <member name="T:DevToys.Api.IUIUtf32Icon">
            <summary>
            A component that represents an icon with a UTF-32 glyph.
            </summary>
        </member>
        <member name="T:DevToys.Api.IUIUtf32IconButton">
            <summary>
            A component that represents a button, which reacts when clicking on it.
            </summary>
        </member>
        <member name="T:DevToys.Api.IUIUtf32IconDropDownButton">
            <summary>
            A component that represents a drop down button where the user can click on a menu item.
            </summary>
        </member>
        <member name="T:DevToys.Api.IUIUtf32IconDropDownMenuItem">
            <summary>
            A component that represents a menu item, which reacts when clicking on it.
            </summary>
        </member>
        <member name="T:DevToys.Api.IUIUtf32IconProvider">
            <summary>
            Provides an interface for UI components that support UTF-32 icons.
            </summary>
        </member>
        <member name="P:DevToys.Api.IUIUtf32IconProvider.Utf32IconGlyph">
            <summary>
            Gets the UTF-32 code point of the icon glyph.
            </summary>
        </member>
        <member name="T:DevToys.Api.IUIWebView">
            <summary>
            A component that represents a web view.
            </summary>
        </member>
        <member name="P:DevToys.Api.IUIWebView.Source">
            <summary>
            The HTML content to display, or URI to the page to display.
            </summary>
        </member>
        <member name="E:DevToys.Api.IUIWebView.SourceChanged">
            <summary>
            Raised when <see cref="P:DevToys.Api.IUIWebView.Source"/> is changed.
            </summary>
        </member>
        <member name="T:DevToys.Api.IUIWrap">
            <summary>
            A component that stacks child elements horizontally and stack them into multiple lines if there's not enough space to keep everything on a single line.
            </summary>
        </member>
        <member name="P:DevToys.Api.IUIWrap.Spacing">
            <summary>
            Gets a value that indicates the space between stacked elements.
            Default is <see cref="F:DevToys.Api.UISpacing.Small"/>.
            </summary>
        </member>
        <member name="P:DevToys.Api.IUIWrap.Children">
            <summary>
            Gets the list of child elements.
            </summary>
        </member>
        <member name="E:DevToys.Api.IUIWrap.SpacingChanged">
            <summary>
            Raised when <see cref="P:DevToys.Api.IUIWrap.Spacing"/> is changed.
            </summary>
        </member>
        <member name="E:DevToys.Api.IUIWrap.ChildrenChanged">
            <summary>
            Raised when <see cref="P:DevToys.Api.IUIWrap.Children"/> is changed.
            </summary>
        </member>
        <member name="T:DevToys.Api.UIDialog">
            <summary>
            Represents a modal dialog.
            </summary>
        </member>
        <member name="M:DevToys.Api.UIDialog.#ctor(DevToys.Api.IUIElement,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:DevToys.Api.UIDialog"/> class with the specified dialog content and dismissible flag.
            </summary>
            <param name="dialogContent">The dialog content.</param>
            <param name="isDismissible">A flag indicating whether the dialog can be closed by clicking outside of it.</param>
        </member>
        <member name="M:DevToys.Api.UIDialog.#ctor(DevToys.Api.IUIElement,DevToys.Api.IUIElement,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:DevToys.Api.UIDialog"/> class with the specified dialog content, footer content, and dismissible flag.
            </summary>
            <param name="dialogContent">The dialog content.</param>
            <param name="footerContent">The footer content.</param>
            <param name="isDismissible">A flag indicating whether the dialog can be closed by clicking outside of it.</param>
        </member>
        <member name="P:DevToys.Api.UIDialog.IsOpened">
            <summary>
            Gets a value indicating whether the dialog is opened.
            </summary>
        </member>
        <member name="P:DevToys.Api.UIDialog.IsDismissible">
            <summary>
            Gets a value indicating whether the dialog can be closed by clicking outside of it, pressing Escape key, or losing focus.
            </summary>
        </member>
        <member name="P:DevToys.Api.UIDialog.DialogContent">
            <summary>
            Gets the dialog content.
            </summary>
        </member>
        <member name="P:DevToys.Api.UIDialog.FooterContent">
            <summary>
            Gets the footer content.
            </summary>
        </member>
        <member name="P:DevToys.Api.UIDialog.DialogCloseAwaiter">
            <summary>
            Gets the task that completes when the dialog closes.
            </summary>
        </member>
        <member name="E:DevToys.Api.UIDialog.IsOpenedChanged">
            <summary>
            Occurs when the <see cref="P:DevToys.Api.UIDialog.IsOpened"/> property changes.
            </summary>
        </member>
        <member name="M:DevToys.Api.UIDialog.Close">
            <summary>
            Closes the dialog.
            </summary>
        </member>
        <member name="M:DevToys.Api.UIDialog.Dispose">
            <summary>
            Disposes the dialog.
            </summary>
        </member>
        <member name="T:DevToys.Api.UIGridLength">
            <summary>
            Represents the length of a row or column.
            </summary>
        </member>
        <member name="M:DevToys.Api.UIGridLength.#ctor(System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:DevToys.Api.UIGridLength"/> struct.
            </summary>
            <param name="value">The size of the UIGridLength in device independent pixels.</param>
        </member>
        <member name="M:DevToys.Api.UIGridLength.#ctor(System.Double,DevToys.Api.UIGridUnitType)">
            <summary>
            Initializes a new instance of the <see cref="T:DevToys.Api.UIGridLength"/> struct.
            </summary>
            <param name="value">The size of the <see cref="T:DevToys.Api.UIGridLength"/>.</param>
            <param name="type">The unit of the <see cref="T:DevToys.Api.UIGridLength"/>.</param>
        </member>
        <member name="P:DevToys.Api.UIGridLength.Auto">
            <summary>
            Gets an instance of <see cref="T:DevToys.Api.UIGridLength"/> that indicates that a row or column should
            auto-size to fit its content.
            </summary>
        </member>
        <member name="P:DevToys.Api.UIGridLength.UIGridUnitType">
            <summary>
            Gets the unit of the <see cref="T:DevToys.Api.UIGridLength"/>.
            </summary>
        </member>
        <member name="P:DevToys.Api.UIGridLength.IsAbsolute">
            <summary>
            Gets a value that indicates whether the <see cref="T:DevToys.Api.UIGridLength"/> has a <see cref="P:DevToys.Api.UIGridLength.UIGridUnitType"/> of Pixel.
            </summary>
        </member>
        <member name="P:DevToys.Api.UIGridLength.IsAuto">
            <summary>
            Gets a value that indicates whether the <see cref="T:DevToys.Api.UIGridLength"/> has a <see cref="P:DevToys.Api.UIGridLength.UIGridUnitType"/> of Auto.
            </summary>
        </member>
        <member name="P:DevToys.Api.UIGridLength.IsFraction">
            <summary>
            Gets a value that indicates whether the <see cref="T:DevToys.Api.UIGridLength"/> has a <see cref="P:DevToys.Api.UIGridLength.UIGridUnitType"/> of Fraction.
            </summary>
        </member>
        <member name="P:DevToys.Api.UIGridLength.Value">
            <summary>
            Gets the length.
            </summary>
        </member>
        <member name="M:DevToys.Api.UIGridLength.op_Implicit(System.Double)~DevToys.Api.UIGridLength">
            <summary>
            Creates a <see cref="T:DevToys.Api.UIGridLength"/> from an number interpreted as a pixels.
            </summary>
        </member>
        <member name="M:DevToys.Api.UIGridLength.op_Equality(DevToys.Api.UIGridLength,DevToys.Api.UIGridLength)">
            <summary>
            Compares two <see cref="T:DevToys.Api.UIGridLength"/> structures for equality.
            </summary>
            <param name="a">The first <see cref="T:DevToys.Api.UIGridLength"/>.</param>
            <param name="b">The second <see cref="T:DevToys.Api.UIGridLength"/>.</param>
            <returns>True if the structures are equal, otherwise false.</returns>
        </member>
        <member name="M:DevToys.Api.UIGridLength.op_Inequality(DevToys.Api.UIGridLength,DevToys.Api.UIGridLength)">
            <summary>
            Compares two <see cref="T:DevToys.Api.UIGridLength"/> structures for inequality.
            </summary>
            <param name="gl1">The first <see cref="T:DevToys.Api.UIGridLength"/>.</param>
            <param name="gl2">The first <see cref="T:DevToys.Api.UIGridLength"/>.</param>
            <returns>True if the structures are unequal, otherwise false.</returns>
        </member>
        <member name="M:DevToys.Api.UIGridLength.Equals(System.Object)">
            <summary>
            Determines whether the <see cref="T:DevToys.Api.UIGridLength"/> is equal to the specified object.
            </summary>
            <param name="o">The object with which to test equality.</param>
            <returns>True if the objects are equal, otherwise false.</returns>
        </member>
        <member name="M:DevToys.Api.UIGridLength.Equals(DevToys.Api.UIGridLength)">
            <summary>
            Compares two <see cref="T:DevToys.Api.UIGridLength"/> structures for equality.
            </summary>
            <param name="gridLength">The structure with which to test equality.</param>
            <returns>True if the structures are equal, otherwise false.</returns>
        </member>
        <member name="M:DevToys.Api.UIGridLength.GetHashCode">
            <summary>
            Gets a hash code for the <see cref="T:DevToys.Api.UIGridLength"/>.
            </summary>
            <returns>The hash code.</returns>
        </member>
        <member name="M:DevToys.Api.UIGridLength.ToString">
            <summary>
            Returns a string that represents the current <see cref="T:DevToys.Api.UIGridLength"/>.
            </summary>
            <returns>A string that represents the current <see cref="T:DevToys.Api.UIGridLength"/>.</returns>
        </member>
        <member name="T:DevToys.Api.UIGridUnitType">
            <summary>
            Represents the unit type of a row or column.
            </summary>
        </member>
        <member name="F:DevToys.Api.UIGridUnitType.Auto">
            <summary>
            The row or column is auto-sized to fit its content.
            </summary>
        </member>
        <member name="F:DevToys.Api.UIGridUnitType.Pixel">
            <summary>
            The row or column is sized in device independent pixels.
            </summary>
        </member>
        <member name="F:DevToys.Api.UIGridUnitType.Fraction">
            <summary>
            The row or column is sized as a weighted proportion of available space.
            </summary>
        </member>
        <member name="T:DevToys.Api.UIHighlightedTextSpan">
            <summary>
            Represents a highlighted span in a text.
            </summary>
        </member>
        <member name="M:DevToys.Api.UIHighlightedTextSpan.#ctor(System.Int32,System.Int32,DevToys.Api.UIHighlightedTextSpanColor)">
            <summary>
            Initializes a new instance of the <see cref="T:DevToys.Api.UIHighlightedTextSpan"/> class.
            </summary>
            <param name="startPosition">The start position of the highlighted text span.</param>
            <param name="length">The length of the highlighted text span.</param>
            <param name="color">The color of the highlighted text span.</param>
        </member>
        <member name="M:DevToys.Api.UIHighlightedTextSpan.#ctor(DevToys.Api.TextSpan,DevToys.Api.UIHighlightedTextSpanColor)">
            <summary>
            Initializes a new instance of the <see cref="T:DevToys.Api.UIHighlightedTextSpan"/> class based on the original <see cref="T:DevToys.Api.TextSpan"/>.
            </summary>
            <param name="span">The location where the text document should be highlighted <see cref="T:DevToys.Api.TextSpan"/>.</param>
            <param name="color">The color of the highlighted text span.</param>
        </member>
        <member name="P:DevToys.Api.UIHighlightedTextSpan.Color">
            <summary>
            Gets the color of the highlighted text span.
            </summary>
        </member>
        <member name="T:DevToys.Api.UIHighlightedTextSpanColor">
            <summary>
            Represents the color options for a highlighted text span in the UI.
            </summary>
        </member>
        <member name="F:DevToys.Api.UIHighlightedTextSpanColor.Default">
            <summary>
            The default color.
            </summary>
        </member>
        <member name="F:DevToys.Api.UIHighlightedTextSpanColor.Blue">
            <summary>
            The blue color.
            </summary>
        </member>
        <member name="F:DevToys.Api.UIHighlightedTextSpanColor.Green">
            <summary>
            The green color.
            </summary>
        </member>
        <member name="F:DevToys.Api.UIHighlightedTextSpanColor.Red">
            <summary>
            The red color.
            </summary>
        </member>
        <member name="F:DevToys.Api.UIHighlightedTextSpanColor.Yellow">
            <summary>
            The yellow color.
            </summary>
        </member>
        <member name="F:DevToys.Api.UIHighlightedTextSpanColor.Purple">
            <summary>
            The purple color.
            </summary>
        </member>
        <member name="F:DevToys.Api.UIHighlightedTextSpanColor.Teal">
            <summary>
            The teal color.
            </summary>
        </member>
        <member name="T:DevToys.Api.UIHorizontalAlignment">
            <summary>
            Indicates where an element should be displayed on the horizontal axis relative to the allocated layout slot of the parent element.
            </summary>
        </member>
        <member name="F:DevToys.Api.UIHorizontalAlignment.Left">
            <summary>
            An element aligned to the left of the layout slot for the parent element.
            </summary>
        </member>
        <member name="F:DevToys.Api.UIHorizontalAlignment.Center">
            <summary>
            An element aligned to the center of the layout slot for the parent element.
            </summary>
        </member>
        <member name="F:DevToys.Api.UIHorizontalAlignment.Right">
            <summary>
            An element aligned to the right of the layout slot for the parent element.
            </summary>
        </member>
        <member name="F:DevToys.Api.UIHorizontalAlignment.Stretch">
            <summary>
            An element stretched to fill the entire layout slot of the parent element.
            </summary>
        </member>
        <member name="T:DevToys.Api.UIHoverTooltip">
            <summary>
            Represents the Tooltip to display on hover
            </summary>
        </member>
        <member name="M:DevToys.Api.UIHoverTooltip.#ctor(System.Int32,System.Int32,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:DevToys.Api.UIHoverTooltip"/> class.
            </summary>
            <param name="startPosition">The start position of the highlighted text span.</param>
            <param name="length">The length of the highlighted text span.</param>
            <param name="tooltip">The information to display on hover.</param>
        </member>
        <member name="M:DevToys.Api.UIHoverTooltip.#ctor(DevToys.Api.TextSpan,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:DevToys.Api.UIHoverTooltip"/> class.
            </summary>
            <param name="span">The location in the text document where the tooltip must appear.</param>
            <param name="tooltip">The information to display on hover.</param>
        </member>
        <member name="P:DevToys.Api.UIHoverTooltip.Tooltip">
            <summary>
            Contain the information to display on hover
            </summary>
        </member>
        <member name="T:DevToys.Api.UIInfoBarSeverity">
            <summary>
            Represents the severity level of a <see cref="T:DevToys.Api.IUIInfoBar"/>.
            </summary>
        </member>
        <member name="F:DevToys.Api.UIInfoBarSeverity.Informational">
            <summary>
            Informational severity.
            </summary>
        </member>
        <member name="F:DevToys.Api.UIInfoBarSeverity.Error">
            <summary>
            Error severity.
            </summary>
        </member>
        <member name="F:DevToys.Api.UIInfoBarSeverity.Success">
            <summary>
            Success severity.
            </summary>
        </member>
        <member name="F:DevToys.Api.UIInfoBarSeverity.Warning">
            <summary>
            Warning severity.
            </summary>
        </member>
        <member name="T:DevToys.Api.UILabelStyle">
            <summary>
            Represents the style of a <see cref="T:DevToys.Api.IUILabel"/>.
            </summary>
        </member>
        <member name="F:DevToys.Api.UILabelStyle.Caption">
            <summary>
            The caption style.
            </summary>
        </member>
        <member name="F:DevToys.Api.UILabelStyle.Body">
            <summary>
            The body style.
            </summary>
        </member>
        <member name="F:DevToys.Api.UILabelStyle.BodyStrong">
            <summary>
            The strong body style.
            </summary>
        </member>
        <member name="F:DevToys.Api.UILabelStyle.BodyLarge">
            <summary>
            The large body style.
            </summary>
        </member>
        <member name="F:DevToys.Api.UILabelStyle.Subtitle">
            <summary>
            The subtitle style.
            </summary>
        </member>
        <member name="F:DevToys.Api.UILabelStyle.Title">
            <summary>
            The title style.
            </summary>
        </member>
        <member name="F:DevToys.Api.UILabelStyle.TitleLarge">
            <summary>
            The large title style.
            </summary>
        </member>
        <member name="F:DevToys.Api.UILabelStyle.Display">
            <summary>
            The display style.
            </summary>
        </member>
        <member name="T:DevToys.Api.UIOrientation">
            <summary>
            Defines the different orientations that an element or layout can have.
            </summary>
        </member>
        <member name="F:DevToys.Api.UIOrientation.Horizontal">
            <summary>
            Element or layout should be horizontally oriented.
            </summary>
        </member>
        <member name="F:DevToys.Api.UIOrientation.Vertical">
            <summary>
            Element or layout should be vertically oriented.
            </summary>
        </member>
        <member name="T:DevToys.Api.UISpacing">
            <summary>
            Defines the different spacing to apply between element in the layout.
            </summary>
        </member>
        <member name="F:DevToys.Api.UISpacing.None">
            <summary>
            No space between element. Use this space between element or text that should be closed from each other.
            </summary>
        </member>
        <member name="F:DevToys.Api.UISpacing.Small">
            <summary>
            A small space between element. Use this space between elements of a same group.
            </summary>
        </member>
        <member name="F:DevToys.Api.UISpacing.Medium">
            <summary>
            A medium space between element. Use this space to separate groups of elements.
            </summary>
        </member>
        <member name="F:DevToys.Api.UISpacing.Large">
            <summary>
            A large space between element. Use this space to separate sections.
            </summary>
        </member>
        <member name="T:DevToys.Api.UITextEndOfLinePreference">
            <summary>
            End of line character preference.
            </summary>
        </member>
        <member name="F:DevToys.Api.UITextEndOfLinePreference.TextDefault">
            <summary>
            Use the end of line character identified in the text buffer.
            </summary>
        </member>
        <member name="F:DevToys.Api.UITextEndOfLinePreference.LF">
            <summary>
            Use line feed (\n) as the end of line character.
            </summary>
        </member>
        <member name="F:DevToys.Api.UITextEndOfLinePreference.CRLF">
            <summary>
            Use carriage return and line feed (\r\n) as the end of line character.
            </summary>
        </member>
        <member name="T:DevToys.Api.UITextLineNumber">
            <summary>
            Describes how the line number should be displayed in the text editor.
            </summary>
        </member>
        <member name="F:DevToys.Api.UITextLineNumber.Auto">
            <summary>
            Automatically show or hide the line number depending on the user's settings.
            </summary>
        </member>
        <member name="F:DevToys.Api.UITextLineNumber.Show">
            <summary>
            Show the line number.
            </summary>
        </member>
        <member name="F:DevToys.Api.UITextLineNumber.Hide">
            <summary>
            Do not show the line number.
            </summary>
        </member>
        <member name="T:DevToys.Api.UITextWrapMode">
            <summary>
            Describes how a text in an element should wrap when it reached the maximum horizontal space it can take.
            </summary>
        </member>
        <member name="F:DevToys.Api.UITextWrapMode.Auto">
            <summary>
            Wrap automatically or not depending on the user's settings.
            </summary>
        </member>
        <member name="F:DevToys.Api.UITextWrapMode.Wrap">
            <summary>
            Wrap the text to a new line.
            </summary>
        </member>
        <member name="F:DevToys.Api.UITextWrapMode.NoWrap">
            <summary>
            Do not wrap the text to a new line.
            </summary>
        </member>
        <member name="T:DevToys.Api.UIToolView">
            <summary>
            Represents the root ui definition of a <see cref="T:DevToys.Api.IGuiTool"/>.
            </summary>
        </member>
        <member name="M:DevToys.Api.UIToolView.#ctor">
            <summary>
            Creates a new instance of the <see cref="T:DevToys.Api.UIToolView"/> class.
            </summary>
        </member>
        <member name="M:DevToys.Api.UIToolView.#ctor(DevToys.Api.IUIElement)">
            <summary>
            Creates a new instance of the <see cref="T:DevToys.Api.UIToolView"/> class.
            </summary>
            <param name="rootElement">The root element of the tool's UI.</param>
        </member>
        <member name="M:DevToys.Api.UIToolView.#ctor(System.Boolean)">
            <summary>
            Creates a new instance of the <see cref="T:DevToys.Api.UIToolView"/> class.
            </summary>
            <param name="isScrollable">Indicates whether the UI of the tool is scrollable or should fits to the window boundaries.</param>
        </member>
        <member name="M:DevToys.Api.UIToolView.#ctor(System.Boolean,DevToys.Api.IUIElement)">
            <summary>
            Creates a new instance of the <see cref="T:DevToys.Api.UIToolView"/> class.
            </summary>
            <param name="isScrollable">Indicates whether the UI of the tool is scrollable or should fits to the window boundaries.</param>
            <param name="rootElement">The root element of the tool's UI.</param>
        </member>
        <member name="P:DevToys.Api.UIToolView.IsScrollable">
            <summary>
            Gets whether the UI of the tool is scrollable or should fits to the window boundaries. Default is true.
            </summary>
        </member>
        <member name="P:DevToys.Api.UIToolView.CurrentOpenedDialog">
            <summary>
            Gets the <see cref="T:DevToys.Api.UIDialog"/> currently opened. Only one at a time can be opened.
            </summary>
        </member>
        <member name="P:DevToys.Api.UIToolView.RootElement">
            <summary>
            Gets the root element of the tool's UI.
            </summary>
        </member>
        <member name="E:DevToys.Api.UIToolView.IsScrollableChanged">
            <summary>
            Raised when <see cref="P:DevToys.Api.UIToolView.IsScrollable"/> changed.
            </summary>
        </member>
        <member name="E:DevToys.Api.UIToolView.CurrentOpenedDialogChanged">
            <summary>
            Raised when <see cref="P:DevToys.Api.UIToolView.CurrentOpenedDialog"/> changed.
            </summary>
        </member>
        <member name="E:DevToys.Api.UIToolView.RootElementChanged">
            <summary>
            Raised when <see cref="P:DevToys.Api.UIToolView.RootElement"/> changed.
            </summary>
        </member>
        <member name="E:DevToys.Api.UIToolView.PropertyChanged">
            <summary>
            Raised when a property value changes.
            </summary>
        </member>
        <member name="M:DevToys.Api.UIToolView.GetChildElementById(System.String)">
            <summary>
            Gets the first child element with the specified id.
            </summary>
            <param name="id">The id of a child element.</param>
            <remarks>This method is recursive and navigate through each element in the UI. It can be slow depending on the complexity of the UI. Be cautious when using it.</remarks>
            <returns>Returns null if the element could not be found. If many elements have the name id, this method returns the first it finds</returns>
        </member>
        <member name="M:DevToys.Api.UIToolView.OpenDialogAsync(DevToys.Api.IUIElement,System.Boolean)">
            <summary>
            Shows the dialog box in the UI. Only one dialog can be opened at a time.
            </summary>
            <param name="dialogContent">The element to display in the dialog.</param>
            <param name="isDismissible">Indicates whether the dialog can be closed by clicking outside of the dialog.</param>
            <returns>An instance of the opened dialog.</returns>
        </member>
        <member name="M:DevToys.Api.UIToolView.OpenDialogAsync(DevToys.Api.IUIElement,DevToys.Api.IUIElement,System.Boolean)">
            <summary>
            Shows the dialog box in the UI. Only one dialog can be opened at a time.
            </summary>
            <param name="dialogContent">The element to display in the dialog.</param>
            <param name="footerContent">The element to display in the dialog footer.</param>
            <param name="isDismissible">Indicates whether the dialog can be closed by clicking outside of the dialog.</param>
            <returns>An instance of the opened dialog.</returns>
        </member>
        <member name="M:DevToys.Api.UIToolView.SetPropertyValue``1(``0@,``0,System.EventHandler,System.String)">
            <summary>
            Sets the property value and raises the property changed event if the value has changed.
            </summary>
            <typeparam name="T">The type of the property.</typeparam>
            <param name="field">The reference to the field storing the property value.</param>
            <param name="value">The new value to set.</param>
            <param name="propertyChangedEventHandler">The event handler to raise the property changed event.</param>
            <param name="propertyName">The name of the property. Automatically inferred if not provided.</param>
        </member>
        <member name="M:DevToys.Api.UIToolView.OnPropertyChanged(System.String)">
            <summary>
            Raises the property changed event for the specified property.
            </summary>
            <param name="propertyName">The name of the property. Automatically inferred if not provided.</param>
        </member>
        <member name="T:DevToys.Api.UIVerticalAlignment">
            <summary>
            Describes how a child element is vertically positioned or stretched within a parent's layout slot.
            </summary>
        </member>
        <member name="F:DevToys.Api.UIVerticalAlignment.Top">
            <summary>
            The child element is aligned to the top of the parent's layout slot.
            </summary>
        </member>
        <member name="F:DevToys.Api.UIVerticalAlignment.Center">
            <summary>
            The child element is aligned to the center of the parent's layout slot.
            </summary>
        </member>
        <member name="F:DevToys.Api.UIVerticalAlignment.Bottom">
            <summary>
            The child element is aligned to the bottom of the parent's layout slot.
            </summary>
        </member>
        <member name="F:DevToys.Api.UIVerticalAlignment.Stretch">
            <summary>
            The child element stretches to fill the parent's layout slot.
            </summary>
        </member>
        <member name="T:DevToys.Api.GuiToolGroup">
            <summary>
            Represents a group or category in the main menu of the app.
            </summary>
            <remarks>
            <example>
                <code>
                    [Export(typeof(GuiToolGroup))]
                    [Name("Encoders / Decoders")]
                    [Order(After = "Converters")] // Optional
                    internal sealed class MyGroup : GuiToolGroup
                    {
                        [ImportingConstructor]
                        internal MyGroup()
                        {
                            IconFontName = "FluentSystemIcons";
                            IconGlyph = "\u0108";
                            DisplayTitle = Sample.CommandDescription;
                            AccessibleName = Sample.CommandDescription;
                        }
                    }
                </code>
            </example>
            </remarks>
        </member>
        <member name="P:DevToys.Api.GuiToolGroup.IconFontName">
            <summary>
            Gets or sets the name of the font to use to display the <see cref="P:DevToys.Api.GuiToolGroup.IconGlyph"/>.
            </summary>
        </member>
        <member name="P:DevToys.Api.GuiToolGroup.IconGlyph">
            <summary>
            Gets or sets a glyph for the icon of the group.
            </summary>
        </member>
        <member name="P:DevToys.Api.GuiToolGroup.DisplayTitle">
            <summary>
            Gets or sets the title to display in the menu.
            </summary>
        </member>
        <member name="P:DevToys.Api.GuiToolGroup.AccessibleName">
            <summary>
            (optional) Gets or sets the name of the group that will be told to the user when using screen reader.
            </summary>
        </member>
        <member name="T:DevToys.Api.IGuiTool">
             <summary>
             Represents the declaration of a tool with a GUI.
             </summary>
             <remarks>
             <para>
             The project containing the <see cref="T:System.Resources.ResourceManager"/> with all the strings for the tool should contain an implementation
             of <see cref="T:DevToys.Api.IResourceAssemblyIdentifier"/> as shown in the example.
             </para>
             <example>
                 <code>
                     [Export(typeof(IGuiTool))]
                     [Name("Base64 Encoder / Decoder")]
                     [ToolDisplayInformation(
                         IconFontName = "FluentSystemIcons",
                         IconGlyph = "\u0108",
                         GroupName = "Encoders / Decoders",                                                  // <seealso cref="T:DevToys.Api.GuiToolGroup"/>
                         ResourceManagerAssemblyIdentifier = nameof(MyResourceManagerAssemblyIdentifier),    // <seealso cref="T:DevToys.Api.IResourceAssemblyIdentifier"/>
                         ResourceManagerBaseName = "MyProject.Strings",
                         ShortDisplayTitleResourceName = nameof(MyProject.Strings.ShortDisplayTitle),
                         LongDisplayTitleResourceName = nameof(MyProject.Strings.LongDisplayTitle),          // Optional
                         DescriptionResourceName = nameof(MyProject.Strings.Description),                    // Optional
                         AccessibleNameResourceName = nameof(MyProject.Strings.AccessibleName),              // Optional
                         SearchKeywordsResourceName = nameof(MyProject.Strings.SearchKeywords))]             // Optional
                     [TargetPlatform(Platform.Windows)]                                                      // Optional
                     [TargetPlatform(Platform.WASM)]                                                         // Optional
                     [Order(Before = "Base64 Image Decoder")]                                                // Optional
                     [MenuPlacement(MenuPlacement.Footer)]                                                   // Optional
                     [NotSearchable]                                                                         // Optional
                     [NotFavorable]                                                                          // Optional
                     [NoCompactOverlaySupport]                                                               // Optional
                     internal sealed class Base64GuiTool : IGuiTool
                     {
                     }
            
                     [Export(typeof(IResourceManagerAssemblyIdentifier))]
                     [Name(nameof(MyResourceManagerAssemblyIdentifier))]
                     public sealed class MyResourceManagerAssemblyIdentifier : IResourceManagerAssemblyIdentifier
                     {
                     }
                 </code>
             </example>
             </remarks>
        </member>
        <member name="P:DevToys.Api.IGuiTool.View">
            <summary>
            Gets the view for the tool.
            </summary>
        </member>
        <member name="M:DevToys.Api.IGuiTool.OnDataReceived(System.String,System.Object)">
            <summary>
            Invoked when the app detected a data compatible with the tool and that the user navigates to this tool in question.
            The expected behavior of this method is to pass the <paramref name="parsedData"/> to the <see cref="T:DevToys.Api.IUIElement"/>
            that fits the given data.
            </summary>
            <param name="dataTypeName">The data type name, as defined by <see cref="T:DevToys.Api.AcceptedDataTypeNameAttribute"/>.</param>
            <param name="parsedData">The data returned by the corresponding <see cref="T:DevToys.Api.IDataTypeDetector"/>.</param>
        </member>
        <member name="T:DevToys.Api.AutoCompletionItem">
            <summary>
            Represents an item in the auto-completion list of <see cref="T:DevToys.Api.IUIMultiLineTextInput"/>.
            </summary>
        </member>
        <member name="M:DevToys.Api.AutoCompletionItem.#ctor(System.String,DevToys.Api.AutoCompletionItemKind,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:DevToys.Api.AutoCompletionItem"/> class.
            </summary>
            <param name="title">The title of the completion item.</param>
            <param name="kind">The kind of this completion item. Based on the kind an icon is chosen by the editor.</param>
            <param name="textToInsert">A snippet that should be inserted in a document when selecting this completion item.</param>
        </member>
        <member name="P:DevToys.Api.AutoCompletionItem.Title">
            <summary>
            Gets or sets the title of the completion item.
            </summary>
        </member>
        <member name="P:DevToys.Api.AutoCompletionItem.Description">
            <summary>
            Gets or sets the description of the completion item, displayed to the right of the suggestion list.
            </summary>
        </member>
        <member name="P:DevToys.Api.AutoCompletionItem.Kind">
            <summary>
            Gets or sets the kind of this completion item. Based on the kind an icon is chosen by the editor.
            </summary>
        </member>
        <member name="P:DevToys.Api.AutoCompletionItem.Documentation">
            <summary>
            Gets or sets a human-readable string that represents a doc-comment. This string can be in Markdown format.
            </summary>
        </member>
        <member name="P:DevToys.Api.AutoCompletionItem.ShouldBePreselected">
            <summary>
            Gets or sets whether the item should be selected when showing.
            </summary>
            <remarks>
            <para>
            Note that only one completion item can be selected and that the editor decides which item that is.
            The rule is that the first item of those that match best is selected.
            </para>
            </remarks>
        </member>
        <member name="P:DevToys.Api.AutoCompletionItem.TextToInsert">
            <summary>
            Gets or sets a snippet that should be inserted in a document when selecting this completion item.
            </summary>
            <remarks>
            <para>
            You can use tab-stopped placeholders by using a syntax like <c>${1:foo}</c> and <c>${2:bar}</c>.
            </para>
            <para>
            Example:
            </para>
            <example>
            <code>
            registerCustomer(${1:firstName}, ${2:lastName})
            </code>
            </example>
            </remarks>
        </member>
        <member name="T:DevToys.Api.AutoCompletionItemKind">
            <summary>
            Represents the kind of an auto-completion item.
            See also https://microsoft.github.io/monaco-editor/typedoc/enums/languages.CompletionItemKind.html
            </summary>
        </member>
        <member name="F:DevToys.Api.AutoCompletionItemKind.Method">
            <summary>
            Represents a method.
            </summary>
        </member>
        <member name="F:DevToys.Api.AutoCompletionItemKind.Function">
            <summary>
            Represents a function.
            </summary>
        </member>
        <member name="F:DevToys.Api.AutoCompletionItemKind.Constructor">
            <summary>
            Represents a constructor.
            </summary>
        </member>
        <member name="F:DevToys.Api.AutoCompletionItemKind.Field">
            <summary>
            Represents a field.
            </summary>
        </member>
        <member name="F:DevToys.Api.AutoCompletionItemKind.Variable">
            <summary>
            Represents a variable.
            </summary>
        </member>
        <member name="F:DevToys.Api.AutoCompletionItemKind.Class">
            <summary>
            Represents a class.
            </summary>
        </member>
        <member name="F:DevToys.Api.AutoCompletionItemKind.Struct">
            <summary>
            Represents a struct.
            </summary>
        </member>
        <member name="F:DevToys.Api.AutoCompletionItemKind.Interface">
            <summary>
            Represents an interface.
            </summary>
        </member>
        <member name="F:DevToys.Api.AutoCompletionItemKind.Module">
            <summary>
            Represents a module.
            </summary>
        </member>
        <member name="F:DevToys.Api.AutoCompletionItemKind.Property">
            <summary>
            Represents a property.
            </summary>
        </member>
        <member name="F:DevToys.Api.AutoCompletionItemKind.Event">
            <summary>
            Represents an event.
            </summary>
        </member>
        <member name="F:DevToys.Api.AutoCompletionItemKind.Operator">
            <summary>
            Represents an operator.
            </summary>
        </member>
        <member name="F:DevToys.Api.AutoCompletionItemKind.Unit">
            <summary>
            Represents a unit.
            </summary>
        </member>
        <member name="F:DevToys.Api.AutoCompletionItemKind.Value">
            <summary>
            Represents a value.
            </summary>
        </member>
        <member name="F:DevToys.Api.AutoCompletionItemKind.Constant">
            <summary>
            Represents a constant.
            </summary>
        </member>
        <member name="F:DevToys.Api.AutoCompletionItemKind.Enum">
            <summary>
            Represents an enum.
            </summary>
        </member>
        <member name="F:DevToys.Api.AutoCompletionItemKind.EnumMember">
            <summary>
            Represents an enum member.
            </summary>
        </member>
        <member name="F:DevToys.Api.AutoCompletionItemKind.Keyword">
            <summary>
            Represents a keyword.
            </summary>
        </member>
        <member name="F:DevToys.Api.AutoCompletionItemKind.Text">
            <summary>
            Represents text.
            </summary>
        </member>
        <member name="F:DevToys.Api.AutoCompletionItemKind.Color">
            <summary>
            Represents a color.
            </summary>
        </member>
        <member name="F:DevToys.Api.AutoCompletionItemKind.File">
            <summary>
            Represents a file.
            </summary>
        </member>
        <member name="F:DevToys.Api.AutoCompletionItemKind.Reference">
            <summary>
            Represents a reference.
            </summary>
        </member>
        <member name="F:DevToys.Api.AutoCompletionItemKind.CustomColor">
            <summary>
            Represents a custom color.
            </summary>
        </member>
        <member name="F:DevToys.Api.AutoCompletionItemKind.Folder">
            <summary>
            Represents a folder.
            </summary>
        </member>
        <member name="F:DevToys.Api.AutoCompletionItemKind.TypeParameter">
            <summary>
            Represents a type parameter.
            </summary>
        </member>
        <member name="F:DevToys.Api.AutoCompletionItemKind.User">
            <summary>
            Represents a user.
            </summary>
        </member>
        <member name="F:DevToys.Api.AutoCompletionItemKind.Issue">
            <summary>
            Represents an issue.
            </summary>
        </member>
        <member name="F:DevToys.Api.AutoCompletionItemKind.Snippet">
            <summary>
            Represents a snippet.
            </summary>
        </member>
        <member name="T:DevToys.Api.ILanguageService">
            <summary>
            Represents the declaration of a language service for <see cref="T:DevToys.Api.IUIMultiLineTextInput"/>.
            </summary>
            <remarks>
            <para>
            The value of <see cref="T:DevToys.Api.NameAttribute"/> should correspond to the <see cref="P:DevToys.Api.IUIMultiLineTextInput.SyntaxColorizationLanguageName"/>.
            </para>
            <example>
                <code>
                    [Export(typeof(ILanguageService))]
                    [Name("programmingLanguageName")]
                    internal sealed class MyLanguageService : ILanguageService
                    {
                    }
                </code>
            </example>
            </remarks>
        </member>
        <member name="M:DevToys.Api.ILanguageService.GetAutoCompletionItemsAsync(System.String,DevToys.Api.TextSpan,System.Threading.CancellationToken)">
            <summary>
            Gets the list of items to be displayed in the auto-completion list (invoked through Ctrl+Space in a <see cref="T:DevToys.Api.IUIMultiLineTextInput"/>).
            </summary>
            <param name="textDocument">The text in the <see cref="T:DevToys.Api.IUIMultiLineTextInput"/>.</param>
            <param name="span">The caret location, or selected span in the text document.</param>
            <param name="cancellationToken">A cancellation token that can be used to cancel the operation.</param>
            <returns>Returns a list of items to display in the auto-completion popup.</returns>
        </member>
        <member name="M:DevToys.Api.ILanguageService.GetSemanticTokensAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Gets an ordered list of semantic tokens for the specified text document.
            Semantic tokens are used to provide rich syntax highlighting and information for the <see cref="T:DevToys.Api.IUIMultiLineTextInput"/>'s editor.
            </summary>
            <param name="textDocument">The text in the <see cref="T:DevToys.Api.IUIMultiLineTextInput"/>.</param>
            <param name="cancellationToken">A cancellation token that can be used to cancel the operation.</param>
            <returns>Returns a list of semantic tokens providing information about how the document should be colored</returns>
            <remarks>
            <para>
            Semantic tokens should be provided in the order in which they appear in the document. Their ranges should not overlap.
            Their positions should be relative to the previous token or the start of the document.
            </para>
            </remarks>
        </member>
        <member name="T:DevToys.Api.SemanticToken">
            <summary>
            Represents a semantic token.
            </summary>
        </member>
        <member name="M:DevToys.Api.SemanticToken.#ctor(System.Int32,System.Int32,System.Int32,DevToys.Api.SemanticTokenType,DevToys.Api.SemanticTokenModifier)">
            <summary>
            Initializes a new instance of the <see cref="T:DevToys.Api.SemanticToken"/> class.
            </summary>
            <param name="deltaLine">The token line number, relative to the previous token.</param>
            <param name="deltaColumn">The token start character in the line, relative to the previous token</param>
            <param name="length">The length of the token.</param>
            <param name="tokenType">The token type.</param>
            <param name="tokenModifier">The token modifier.</param>
        </member>
        <member name="P:DevToys.Api.SemanticToken.DeltaLine">
            <summary>
            Gets or sets the token line number, relative to the previous token.
            </summary>
        </member>
        <member name="P:DevToys.Api.SemanticToken.DeltaColumn">
            <summary>
            Gets or sets the token start character in the line, relative to the previous token (relative to 0 or the previous token's start if they are on the same line).
            </summary>
        </member>
        <member name="P:DevToys.Api.SemanticToken.Length">
            <summary>
            Gets or sets the length of the token. A token cannot be multiline.
            </summary>
        </member>
        <member name="P:DevToys.Api.SemanticToken.TokenType">
            <summary>
            Gets or sets the token type.
            </summary>
        </member>
        <member name="P:DevToys.Api.SemanticToken.TokenModifier">
            <summary>
            Gets or sets the token modifier.
            </summary>
        </member>
        <member name="T:DevToys.Api.SemanticTokenModifier">
            <summary>
            Represents a semantic token modifier.
            </summary>
        </member>
        <member name="F:DevToys.Api.SemanticTokenModifier.Declaration">
            <summary>
            For declarations of symbols.
            </summary>
        </member>
        <member name="F:DevToys.Api.SemanticTokenModifier.Definition">
            <summary>
            For definitions of symbols, for example, in header files.
            </summary>
        </member>
        <member name="F:DevToys.Api.SemanticTokenModifier.Readonly">
            <summary>
            For readonly variables and member fields (constants).
            </summary>
        </member>
        <member name="F:DevToys.Api.SemanticTokenModifier.Static">
            <summary>
            For class members (static members).
            </summary>
        </member>
        <member name="F:DevToys.Api.SemanticTokenModifier.Deprecated">
            <summary>
            For symbols that should no longer be used.
            </summary>
        </member>
        <member name="F:DevToys.Api.SemanticTokenModifier.Abstract">
            <summary>
            For types and member functions that are abstract.
            </summary>
        </member>
        <member name="F:DevToys.Api.SemanticTokenModifier.Async">
            <summary>
            For functions that are marked async.
            </summary>
        </member>
        <member name="F:DevToys.Api.SemanticTokenModifier.Modification">
            <summary>
            For variable references where the variable is assigned to.
            </summary>
        </member>
        <member name="F:DevToys.Api.SemanticTokenModifier.Documentation">
            <summary>
            For occurrences of symbols in documentation.
            </summary>
        </member>
        <member name="F:DevToys.Api.SemanticTokenModifier.DefaultLibrary">
            <summary>
            For symbols that are part of the standard library.
            </summary>
        </member>
        <member name="T:DevToys.Api.SemanticTokenType">
            <summary>
            Represents a semantic token type.
            </summary>
        </member>
        <member name="F:DevToys.Api.SemanticTokenType.Namespace">
            <summary>
            For identifiers that declare or reference a namespace, module, or package.
            </summary>
        </member>
        <member name="F:DevToys.Api.SemanticTokenType.Class">
            <summary>
            For identifiers that declare or reference a class type.
            </summary>
        </member>
        <member name="F:DevToys.Api.SemanticTokenType.Enum">
            <summary>
            For identifiers that declare or reference an enumeration type.
            </summary>
        </member>
        <member name="F:DevToys.Api.SemanticTokenType.Interface">
            <summary>
            For identifiers that declare or reference an interface type.
            </summary>
        </member>
        <member name="F:DevToys.Api.SemanticTokenType.Struct">
            <summary>
            For identifiers that declare or reference a struct type.
            </summary>
        </member>
        <member name="F:DevToys.Api.SemanticTokenType.TypeParameter">
            <summary>
            For identifiers that declare or reference a type parameter.
            </summary>
        </member>
        <member name="F:DevToys.Api.SemanticTokenType.Type">
            <summary>
            For identifiers that declare or reference a type that is not covered above.
            </summary>
        </member>
        <member name="F:DevToys.Api.SemanticTokenType.Parameter">
            <summary>
            For identifiers that declare or reference a function or method parameters.
            </summary>
        </member>
        <member name="F:DevToys.Api.SemanticTokenType.Variable">
            <summary>
            For identifiers that declare or reference a local or global variable.
            </summary>
        </member>
        <member name="F:DevToys.Api.SemanticTokenType.Property">
            <summary>
            For identifiers that declare or reference a member property, member field, or member variable.
            </summary>
        </member>
        <member name="F:DevToys.Api.SemanticTokenType.EnumMember">
            <summary>
            For identifiers that declare or reference an enumeration property, constant, or member.
            </summary>
        </member>
        <member name="F:DevToys.Api.SemanticTokenType.Decorator">
            <summary>
            For identifiers that declare or reference decorators and annotations.
            </summary>
        </member>
        <member name="F:DevToys.Api.SemanticTokenType.Event">
            <summary>
            For identifiers that declare an event property.
            </summary>
        </member>
        <member name="F:DevToys.Api.SemanticTokenType.Function">
            <summary>
            For identifiers that declare a function.
            </summary>
        </member>
        <member name="F:DevToys.Api.SemanticTokenType.Method">
            <summary>
            For identifiers that declare a member function or method.
            </summary>
        </member>
        <member name="F:DevToys.Api.SemanticTokenType.Macro">
            <summary>
            For identifiers that declare a macro.
            </summary>
        </member>
        <member name="F:DevToys.Api.SemanticTokenType.Label">
            <summary>
            For identifiers that declare a label.
            </summary>
        </member>
        <member name="F:DevToys.Api.SemanticTokenType.Comment">
            <summary>
            For tokens that represent a comment.
            </summary>
        </member>
        <member name="F:DevToys.Api.SemanticTokenType.String">
            <summary>
            For tokens that represent a string literal.
            </summary>
        </member>
        <member name="F:DevToys.Api.SemanticTokenType.Keyword">
            <summary>
            For tokens that represent a language keyword.
            </summary>
        </member>
        <member name="F:DevToys.Api.SemanticTokenType.Number">
            <summary>
            For tokens that represent a number literal.
            </summary>
        </member>
        <member name="F:DevToys.Api.SemanticTokenType.RegularExpression">
            <summary>
            For tokens that represent a regular expression literal.
            </summary>
        </member>
        <member name="F:DevToys.Api.SemanticTokenType.Operator">
            <summary>
            For tokens that represent an operator.
            </summary>
        </member>
        <member name="T:DevToys.Api.PredefinedCommonToolGroupNames">
            <summary>
            Represents the predefined common tool group names.
            </summary>
        </member>
        <member name="F:DevToys.Api.PredefinedCommonToolGroupNames.EncodersDecoders">
            <summary>
            Represents the tool group for encoders and decoders.
            </summary>
        </member>
        <member name="F:DevToys.Api.PredefinedCommonToolGroupNames.Converters">
            <summary>
            Represents the tool group for converters.
            </summary>
        </member>
        <member name="F:DevToys.Api.PredefinedCommonToolGroupNames.Formatters">
            <summary>
            Represents the tool group for formatters.
            </summary>
        </member>
        <member name="F:DevToys.Api.PredefinedCommonToolGroupNames.Generators">
            <summary>
            Represents the tool group for generators.
            </summary>
        </member>
        <member name="F:DevToys.Api.PredefinedCommonToolGroupNames.Graphic">
            <summary>
            Represents the tool group for graphics.
            </summary>
        </member>
        <member name="F:DevToys.Api.PredefinedCommonToolGroupNames.Testers">
            <summary>
            Represents the tool group for testers.
            </summary>
        </member>
        <member name="F:DevToys.Api.PredefinedCommonToolGroupNames.Text">
            <summary>
            Represents the tool group for text.
            </summary>
        </member>
        <member name="T:DevToys.Api.PredefinedSupportedImageFormats">
            <summary>
            Represents a predefined list of supported image formats.
            </summary>
        </member>
        <member name="F:DevToys.Api.PredefinedSupportedImageFormats.ImageFileExtensions">
            <summary>
            A list of file extensions representing image formats supported by default.
            They include BMP, GIF, JPEG, PBM, PNG, TIFF, TGA, WEBP formats.
            </summary>
        </member>
        <member name="T:DevToys.Api.IResourceAssemblyIdentifier">
            <summary>
            Represents the factory to access some resources of the current assembly such as strings stored in RESX files, or Fonts.
            </summary>
            <remarks>
            <example>
                <code>
                    [Export(typeof(MyResourceAssemblyIdentifier))]
                    [Name(nameof(MyResourceAssemblyIdentifier))]
                    internal sealed class MyResourceAssemblyIdentifier : IResourceAssemblyIdentifier
                    {
                    }
                </code>
            </example>
            </remarks>
        </member>
        <member name="M:DevToys.Api.IResourceAssemblyIdentifier.GetFontDefinitionsAsync">
            <summary>
            Get access to fonts that can be used by <see cref="T:DevToys.Api.IGuiTool"/>.
            </summary>
            <remarks>
            The font is expected to be a TTF or OTF. WOFF and WOFF2 aren't supported at the moment.
            </remarks>
            <returns>An array of font definition with a stream to access it.</returns>
        </member>
        <member name="T:DevToys.Api.AcceptedDataTypeNameAttribute">
            <summary>
            Defines a data type accepted by the <see cref="T:DevToys.Api.IGuiTool"/> as an input. This information is used to identify what tool can
            be recommended based on Smart Detection finding.
            The value of <see cref="P:DevToys.Api.AcceptedDataTypeNameAttribute.DataTypeName"/> should match a name defined by a <see cref="P:DevToys.Api.DataTypeNameAttribute.DataTypeName"/> in a <see cref="T:DevToys.Api.IDataTypeDetector"/>.
            </summary>
        </member>
        <member name="P:DevToys.Api.AcceptedDataTypeNameAttribute.DataTypeName">
            <summary>
            Gets the name of the accepted data type.
            </summary>
        </member>
        <member name="M:DevToys.Api.AcceptedDataTypeNameAttribute.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:DevToys.Api.AcceptedDataTypeNameAttribute"/> class.
            </summary>
            <param name="name">The name of the accepted data type.</param>
        </member>
        <member name="T:DevToys.Api.CommandLineOptionAttribute">
            <summary>
            Defines an option for a <see cref="T:DevToys.Api.ICommandLineTool"/>.
            </summary>
        </member>
        <member name="P:DevToys.Api.CommandLineOptionAttribute.Name">
            <summary>
            Gets the name of the option. Example, "file".
            Implicitly, an option named "file" will be usable in a command line through "--file &lt;value&gt;".
            </summary>
        </member>
        <member name="P:DevToys.Api.CommandLineOptionAttribute.Alias">
            <summary>
            Gets or sets the alias name of the option. Example, "f".
            Implicitly, an option named "f" will be usable in a command line through "-f &lt;value&gt;".
            </summary>
        </member>
        <member name="P:DevToys.Api.CommandLineOptionAttribute.IsRequired">
            <summary>
            Gets or sets whether the option is required.
            </summary>
        </member>
        <member name="T:DevToys.Api.CommandNameAttribute">
            <summary>
            Defines the name of the CLI command of a <see cref="T:DevToys.Api.ICommandLineTool"/>.
            </summary>
        </member>
        <member name="P:DevToys.Api.CommandNameAttribute.Name">
            <summary>
            Gets the name of the command. Example, "file".
            </summary>
        </member>
        <member name="P:DevToys.Api.CommandNameAttribute.Alias">
            <summary>
            Gets or sets the alias name of the option. Example, "f".
            </summary>
        </member>
        <member name="P:DevToys.Api.CommandNameAttribute.DescriptionResourceName">
            <summary>
            Gets or sets name of the localized resource that provides a description.
            </summary>
        </member>
        <member name="P:DevToys.Api.CommandNameAttribute.ResourceManagerBaseName">
            <summary>
            Gets or sets the name of the resource manager's base name to use when looking for <see cref="P:DevToys.Api.CommandNameAttribute.DescriptionResourceName"/>.
            </summary>
        </member>
        <member name="T:DevToys.Api.DataTypeNameAttribute">
            <summary>
            Defines a data type name attached to a <see cref="T:DevToys.Api.IDataTypeDetector"/>.
            </summary>
        </member>
        <member name="P:DevToys.Api.DataTypeNameAttribute.DataTypeName">
            <summary>
            Gets the data type name.
            </summary>
        </member>
        <member name="P:DevToys.Api.DataTypeNameAttribute.DataTypeBaseName">
            <summary>
            Gets the data type base name.
            </summary>
        </member>
        <member name="M:DevToys.Api.DataTypeNameAttribute.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:DevToys.Api.DataTypeNameAttribute"/> class.
            </summary>
            <param name="name">The data type name.</param>
            <param name="baseName">The data type base name.</param>
        </member>
        <member name="T:DevToys.Api.MenuPlacement">
            <summary>
            Represents the placement of a menu.
            </summary>
        </member>
        <member name="F:DevToys.Api.MenuPlacement.Body">
            <summary>
            The menu is placed in the body.
            </summary>
        </member>
        <member name="F:DevToys.Api.MenuPlacement.Footer">
            <summary>
            The menu is placed in the footer.
            </summary>
        </member>
        <member name="T:DevToys.Api.MenuPlacementAttribute">
            <summary>
            Indicates where the <see cref="T:DevToys.Api.IGuiTool"/> should be displayed in the navigation view.
            </summary>
        </member>
        <member name="P:DevToys.Api.MenuPlacementAttribute.MenuPlacement">
            <summary>
            Gets the menu placement for the <see cref="T:DevToys.Api.IGuiTool"/>.
            </summary>
        </member>
        <member name="M:DevToys.Api.MenuPlacementAttribute.#ctor(DevToys.Api.MenuPlacement)">
            <summary>
            Initializes a new instance of the <see cref="T:DevToys.Api.MenuPlacementAttribute"/> class with the specified menu placement.
            </summary>
            <param name="menuPlacement">The menu placement for the <see cref="T:DevToys.Api.IGuiTool"/>.</param>
        </member>
        <member name="T:DevToys.Api.NameAttribute">
            <summary>
            Defines the internal name of this component. This name can be used to explicitly request this component to be invoked.
            </summary>
        </member>
        <member name="P:DevToys.Api.NameAttribute.InternalComponentName">
            <summary>
            Gets the internal name of this component.
            </summary>
        </member>
        <member name="M:DevToys.Api.NameAttribute.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:DevToys.Api.NameAttribute"/> class with the specified internal component name.
            </summary>
            <param name="internalComponentName">The internal name of the component.</param>
        </member>
        <member name="T:DevToys.Api.NoCompactOverlaySupportAttribute">
            <summary>
            Indicates that the <see cref="T:DevToys.Api.IGuiTool"/> does not support Compact Overlay mode.
            </summary>
        </member>
        <member name="P:DevToys.Api.NoCompactOverlaySupportAttribute.NoCompactOverlaySupport">
            <summary>
            Gets a value indicating whether the <see cref="T:DevToys.Api.IGuiTool"/> supports Compact Overlay mode.
            </summary>
        </member>
        <member name="T:DevToys.Api.NotFavorableAttribute">
            <summary>
            Indicates that the <see cref="T:DevToys.Api.IGuiTool"/> can not be added to the favorites.
            </summary>
        </member>
        <member name="P:DevToys.Api.NotFavorableAttribute.NotFavorable">
            <summary>
            Gets a value indicating whether the <see cref="T:DevToys.Api.IGuiTool"/> is not favorable.
            </summary>
        </member>
        <member name="T:DevToys.Api.NotSearchableAttribute">
            <summary>
            Indicates that the <see cref="T:DevToys.Api.IGuiTool"/> can not be searched.
            </summary>
        </member>
        <member name="P:DevToys.Api.NotSearchableAttribute.NotSearchable">
            <summary>
            Gets a value indicating whether the <see cref="T:DevToys.Api.IGuiTool"/> is not searchable.
            </summary>
        </member>
        <member name="T:DevToys.Api.OrderAttribute">
            <summary>
            Defines the priority of this component over others.
            </summary>
        </member>
        <member name="P:DevToys.Api.OrderAttribute.Before">
            <summary>
            Gets or sets the internal name of a component to compare with.
            The value should corresponds to an existing <see cref="P:DevToys.Api.NameAttribute.InternalComponentName"/> value.
            </summary>
        </member>
        <member name="P:DevToys.Api.OrderAttribute.After">
            <summary>
            Gets or sets the internal name of a component to compare with.
            The value should corresponds to an existing <see cref="P:DevToys.Api.NameAttribute.InternalComponentName"/> value.
            </summary>
        </member>
        <member name="T:DevToys.Api.Platform">
            <summary>
            Represents the platform on which the application runs.
            </summary>
        </member>
        <member name="F:DevToys.Api.Platform.Windows">
            <summary>
            The Windows platform.
            </summary>
        </member>
        <member name="F:DevToys.Api.Platform.MacOS">
            <summary>
            The MacOS or MacCatalyst platform.
            </summary>
        </member>
        <member name="F:DevToys.Api.Platform.Linux">
            <summary>
            The Linux platform.
            </summary>
        </member>
        <member name="T:DevToys.Api.TargetPlatformAttribute">
            <summary>
            Defines the targeted platform for this component.
            </summary>
        </member>
        <member name="P:DevToys.Api.TargetPlatformAttribute.TargetPlatform">
            <summary>
            Gets the target platform.
            </summary>
        </member>
        <member name="M:DevToys.Api.TargetPlatformAttribute.#ctor(DevToys.Api.Platform)">
            <summary>
            Initializes a new instance of the <see cref="T:DevToys.Api.TargetPlatformAttribute"/> class.
            </summary>
            <param name="platform">The target platform.</param>
        </member>
        <member name="T:DevToys.Api.ToolDisplayInformationAttribute">
            <summary>
            Defines the resources to get the information about the <see cref="T:DevToys.Api.IGuiTool"/> to be displayed in the UI.
            </summary>
        </member>
        <member name="P:DevToys.Api.ToolDisplayInformationAttribute.GroupName">
            <summary>
            Indicates the group in which the tool should appear.
            The name should corresponds to an existing <see cref="P:DevToys.Api.NameAttribute.InternalComponentName"/> value from an exported
            <see cref="T:DevToys.Api.GuiToolGroup"/>.
            </summary>
        </member>
        <member name="P:DevToys.Api.ToolDisplayInformationAttribute.ResourceManagerAssemblyIdentifier">
            <summary>
            Gets or sets the name of the <see cref="T:DevToys.Api.IResourceAssemblyIdentifier"/> that contains the type indicated by
            <see cref="P:DevToys.Api.ToolDisplayInformationAttribute.ResourceManagerBaseName"/>.
            </summary>
        </member>
        <member name="P:DevToys.Api.ToolDisplayInformationAttribute.ResourceManagerBaseName">
            <summary>
            Gets or sets the name of the resource manager's base name to use when looking for resource string
            for <see cref="P:DevToys.Api.ToolDisplayInformationAttribute.ShortDisplayTitleResourceName"/>, <see cref="P:DevToys.Api.ToolDisplayInformationAttribute.LongDisplayTitleResourceName"/>,
            <see cref="P:DevToys.Api.ToolDisplayInformationAttribute.DescriptionResourceName"/>, <see cref="P:DevToys.Api.ToolDisplayInformationAttribute.AccessibleNameResourceName"/> and <see cref="P:DevToys.Api.ToolDisplayInformationAttribute.SearchKeywordsResourceName"/>.
            </summary>
        </member>
        <member name="P:DevToys.Api.ToolDisplayInformationAttribute.ShortDisplayTitleResourceName">
            <summary>
            Gets or sets the short title of the tool in the main menu of the app, for example "JSON".
            </summary>
        </member>
        <member name="P:DevToys.Api.ToolDisplayInformationAttribute.LongDisplayTitleResourceName">
            <summary>
            Gets or sets the long title of the tool that will be displayed in the search bar or at the top of the current tool.
            Sometimes it is needed to have a different one than the name showed in the menu to increase
            result accuracy. For example, while <see cref="P:DevToys.Api.ToolDisplayInformationAttribute.ShortDisplayTitleResourceName"/> could be "JSON"
            for a tool that is under the Formatter category, <see cref="P:DevToys.Api.ToolDisplayInformationAttribute.LongDisplayTitleResourceName"/>
            could be "JSON Formatter", which can be helpful to differentiate from other similar
            tools like "JSON Converter".
            </summary>
        </member>
        <member name="P:DevToys.Api.ToolDisplayInformationAttribute.DescriptionResourceName">
            <summary>
            Gets or sets the description of the tool.
            </summary>
        </member>
        <member name="P:DevToys.Api.ToolDisplayInformationAttribute.AccessibleNameResourceName">
            <summary>
            (optional) Gets or sets the name of the tool that will be told to the user when using screen reader.
            </summary>
        </member>
        <member name="P:DevToys.Api.ToolDisplayInformationAttribute.SearchKeywordsResourceName">
            <summary>
            (optional) Gets or sets the keywords of the tool that are searched in the localized environment.
            </summary>
        </member>
        <member name="P:DevToys.Api.ToolDisplayInformationAttribute.IconGlyph">
            <summary>
            Gets or sets a glyph for the icon of the tool.
            </summary>
        </member>
        <member name="P:DevToys.Api.ToolDisplayInformationAttribute.IconFontName">
            <summary>
            Gets or sets the name of the font to use to display the <see cref="P:DevToys.Api.ToolDisplayInformationAttribute.IconGlyph"/>.
            </summary>
        </member>
        <member name="T:DevToys.Api.IOrderableMetadata">
            <summary>
            Represents an orderable component.
            </summary>
        </member>
        <member name="P:DevToys.Api.IOrderableMetadata.Before">
            <summary>
            Gets the list of items that should come before this component.
            </summary>
        </member>
        <member name="P:DevToys.Api.IOrderableMetadata.After">
            <summary>
            Gets the list of items that should come after this component.
            </summary>
        </member>
        <member name="P:DevToys.Api.IOrderableMetadata.InternalComponentName">
            <summary>
            Gets the internal component name.
            </summary>
        </member>
        <member name="T:DevToys.Api.DataDetectionResult">
            <summary>
            Represents the result of data detection.
            </summary>
            <param name="Success">A value indicating whether the data detection was successful.</param>
            <param name="Data">The detected data.</param>
        </member>
        <member name="M:DevToys.Api.DataDetectionResult.#ctor(System.Boolean,System.Object)">
            <summary>
            Represents the result of data detection.
            </summary>
            <param name="Success">A value indicating whether the data detection was successful.</param>
            <param name="Data">The detected data.</param>
        </member>
        <member name="P:DevToys.Api.DataDetectionResult.Success">
            <summary>
            Gets a value indicating whether the data detection was successful.
            </summary>
        </member>
        <member name="P:DevToys.Api.DataDetectionResult.Data">
            <summary>
            Gets the detected data.
            </summary>
        </member>
        <member name="P:DevToys.Api.DataDetectionResult.DataType">
            <summary>
            Gets the type of the detected data.
            </summary>
        </member>
        <member name="F:DevToys.Api.DataDetectionResult.Unsuccessful">
            <summary>
            Represents an unsuccessful data detection result.
            </summary>
        </member>
        <member name="T:DevToys.Api.IDataTypeDetector">
            <summary>
            Represents a way to detect the type of data coming from an external source such as the OS's clipboard.
            </summary>
            <remarks>
            <example>
                <code>
                    [Export(typeof(IDataTypeDetector))]
                    [DataTypeName("jwt-header", baseName: "json" /* optional */)] // jwt-header type inheriting from json type.
                    [TargetPlatform(Platform.Windows)] // Optional
                    [TargetPlatform(Platform.WASM)] // Optional
                    internal sealed class JwtDetector : IDataTypeDetector
                    {
                    }
                </code>
            </example>
            </remarks>
        </member>
        <member name="M:DevToys.Api.IDataTypeDetector.TryDetectDataAsync(System.Object,DevToys.Api.DataDetectionResult,System.Threading.CancellationToken)">
            <summary>
            Tries to detect whether the given <paramref name="rawData"/> match the expected format known by this
            <see cref="T:DevToys.Api.IDataTypeDetector"/>, often by trying to reading and/or parsing it.
            </summary>
            <remarks>
            <para>
            When the data successfully got parsed, pass the parsed value to <see cref="P:DevToys.Api.DataDetectionResult.Data"/>.
            </para>
            <para>
            Ultimately, when detection is successful, the <see cref="P:DevToys.Api.DataDetectionResult.Data"/> will be
            passed to <see cref="M:DevToys.Api.IGuiTool.OnDataReceived(System.String,System.Object)"/>.
            </para>
            </remarks>
            <param name="rawData">The data to analyze, often coming from the OS's clipboard.</param>
            <param name="resultFromBaseDetector">The result coming from the <see cref="T:DevToys.Api.IDataTypeDetector"/> corresponding to the given <see cref="P:DevToys.Api.DataTypeNameAttribute.DataTypeBaseName"/>.
            Since, the <see cref="P:DevToys.Api.DataTypeNameAttribute.DataTypeBaseName"/> is optional, this parameter can be null.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> that gets canceled within 2 seconds.</param>
            <returns>
            Returns a <see cref="T:DevToys.Api.DataDetectionResult"/> that indicates whether the data could be analyzed / parsed / read
            correctly, along with the parsed data, if any change has been made to it during parsing (for example, string to
            integer conversion).
            </returns>
        </member>
        <member name="T:DevToys.Api.PredefinedCommonDataTypeNames">
            <summary>
            Predefined common data type names.
            </summary>
        </member>
        <member name="F:DevToys.Api.PredefinedCommonDataTypeNames.Text">
            <summary>
            Represents the text data type.
            </summary>
        </member>
        <member name="F:DevToys.Api.PredefinedCommonDataTypeNames.Json">
            <summary>
            Represents the JSON data type.
            </summary>
        </member>
        <member name="F:DevToys.Api.PredefinedCommonDataTypeNames.JsonArray">
            <summary>
            Represents the JSON array data type.
            </summary>
        </member>
        <member name="F:DevToys.Api.PredefinedCommonDataTypeNames.Xml">
            <summary>
            Represents the XML data type.
            </summary>
        </member>
        <member name="F:DevToys.Api.PredefinedCommonDataTypeNames.Xsd">
            <summary>
            Represents the XSD data type.
            </summary>
        </member>
        <member name="F:DevToys.Api.PredefinedCommonDataTypeNames.Base64Text">
            <summary>
            Represents the Base64 text data type.
            </summary>
        </member>
        <member name="F:DevToys.Api.PredefinedCommonDataTypeNames.Base64Image">
            <summary>
            Represents the Base64 image data type.
            </summary>
        </member>
        <member name="F:DevToys.Api.PredefinedCommonDataTypeNames.Image">
            <summary>
            Represents the "mage data type.
            </summary>
        </member>
        <member name="F:DevToys.Api.PredefinedCommonDataTypeNames.ImageFile">
            <summary>
            Represents the image file data type.
            </summary>
        </member>
        <member name="F:DevToys.Api.PredefinedCommonDataTypeNames.File">
            <summary>
            Represents the file data type.
            </summary>
        </member>
        <member name="F:DevToys.Api.PredefinedCommonDataTypeNames.Files">
            <summary>
            Represents the files data type.
            </summary>
        </member>
        <member name="F:DevToys.Api.PredefinedCommonDataTypeNames.GZip">
            <summary>
            Represents the GZIP data type.
            </summary>
        </member>
        <member name="F:DevToys.Api.PredefinedCommonDataTypeNames.Date">
            <summary>
            Represents the date data type.
            </summary>
        </member>
    </members>
</doc>
