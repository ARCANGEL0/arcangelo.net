{"version":3,"file":"./LNA/static/js/326.6b223bc4.chunk.js","mappings":"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","sources":["common/Button/styles.ts","common/Button/index.tsx","components/ContentBlock/LeftContentBlock/styles.ts","components/ContentBlock/LeftContentBlock/index.tsx","components/ContentBlock/RightContentBlock/styles.ts","components/ContentBlock/RightContentBlock/index.tsx","components/ContentBlock/index.tsx"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const StyledButton = styled(\"button\")<any>`\n  background: ${(p) => p.color || \"#212738ff\"};\n  color: ${(p) => (p.color ? \"#212738ff\" : \"#fff\")};\n  font-size: 1rem;\n  font-weight: 700;\n  width: 100%;\n  border: 1px solid #edf3f5;\n  border-radius: 4px;\n  padding: 13px 0;\n  cursor: pointer;\n  margin-top: 0.625rem;\n  max-width: 180px;\n  transition: all 0.3s ease-in-out;\n  box-shadow: 0 16px 30px rgb(23 31 114 / 20%);\n\n  &:hover,\n  &:active,\n  &:focus {\n    color: #fff;\n    border: 1px solid rgb(187, 0, 0);\n    background-color: rgb(187, 0, 0);\n  }\n`;\n","import { StyledButton } from \"./styles\";\nimport { ButtonProps } from \"../types\";\n\nexport const Button = ({\n  color,\n  fixedWidth,\n  children,\n  onClick,\n  className\n}: ButtonProps) => (\n  <StyledButton color={color} className={className} fixedWidth={fixedWidth} onClick={onClick}>\n    {children}\n  </StyledButton>\n);\n","import styled from \"styled-components\";\n\nexport const LeftContentSection = styled(\"section\")`\n  position: relative;\n  padding: 10rem 0 8rem;\n\n  @media only screen and (max-width: 1024px) {\n    padding: 4rem 0 4rem;\n  }\n`;\n\nexport const Content = styled(\"p\")`\n  margin: 1.5rem 0 2rem 0;\n`;\n\nexport const ContentWrapper = styled(\"div\")`\n  position: relative;\n  max-width: 540px;\n\n  @media only screen and (max-width: 575px) {\n    padding-top: 4rem;\n  }\n`;\n\nexport const ServiceWrapper = styled(\"div\")`\n  display: flex;\n  justify-content: space-between;\n  max-width: 100%;\n`;\n\nexport const MinTitle = styled(\"h6\")`\n  font-size: 15px;\n  line-height: 1rem;\n  padding: 0.5rem 0;\n  text-transform: uppercase;\n  color: #000;\n  font-family: \"Motiva Sans Light\", sans-serif;\n`;\n\nexport const MinPara = styled(\"p\")`\n  font-size: 0.5rem;\n`;\n","import { Row, Col } from \"antd\";\nimport { withTranslation } from \"react-i18next\";\nimport { SvgIcon } from \"../../../common/SvgIcon\";\nimport { ContentBlockProps } from \"../types\";\nimport { Fade } from \"react-awesome-reveal\";\nimport {\n  LeftContentSection,\n  Content,\n  ContentWrapper,\n  ServiceWrapper,\n  MinTitle,\n  MinPara,\n} from \"./styles\";\n\nconst LeftContentBlock = ({\n  icon,\n  title,\n  content,\n  section,\n  t,\n   width,\n  height,\n    imgId,\nrowClass,\n\n  id,\n}: ContentBlockProps) => {\n  return (\n    <LeftContentSection id={id}>\n      <Fade direction=\"left\">\n        <Row justify=\"space-between\" align=\"middle\" className={rowClass} >\n         <Col lg={11} md={11} sm={12} xs={24}>\n          {icon === ''  ?   '' : \n            <SvgIcon   className=\"\" imgId={imgId} src={icon} width={width} height={height} />\n          }\n          </Col>\n          <Col lg={11} md={11} sm={11} xs={24}>\n            <ContentWrapper>\n              <h6>{t(title)}</h6>\n              <Content>{t(content)}</Content>\n              <ServiceWrapper>\n                <Row justify=\"space-between\">\n                  {typeof section === \"object\" &&\n                    section.map((item: any, id: number) => {\n                      return (\n                        <Col className=\"iconCol\" key={id} span={11}>\n                          <SvgIcon className=\"iconImgCol\" imgId=\"\" src={item.icon} width=\"60px\" height=\"60px\" />\n                          <MinTitle className=\"iconTitleCol\" >{t(item.title)}</MinTitle>\n                          <MinPara className=\"iconContent\">{t(item.content)}</MinPara>\n                        </Col>\n                      );\n                    })}\n                </Row>\n              </ServiceWrapper>\n            </ContentWrapper>\n          </Col>\n        </Row>\n      </Fade>\n    </LeftContentSection>\n  );\n};\n\nexport default withTranslation()(LeftContentBlock);\n","import styled from \"styled-components\";\n\nexport const RightBlockContainer = styled(\"section\")`\n  position: relative;\n  padding: 10rem 0 8rem;\n\n  @media only screen and (max-width: 1024px) {\n    padding: 8rem 0 6rem;\n  }\n\n  @media only screen and (max-width: 768px) {\n    padding: 4rem 0 3rem;\n  }\n`;\n\nexport const Content = styled(\"p\")`\n  margin: 1.5rem 0 2rem 0;\n`;\n\nexport const ContentWrapper = styled(\"div\")`\n  position: relative;\n  max-width: 540px;\n\n  @media only screen and (max-width: 575px) {\n    padding-bottom: 4rem;\n  }\n`;\n\nexport const ButtonWrapper = styled(\"div\")`\n  display: flex;\n  justify-content: space-between;\n  max-width: 100%;\n\n  @media screen and (min-width: 1024px) {\n    max-width: 80%;\n  }\n\n  button:last-child {\n    margin-left: 20px;\n  }\n`;\n","import { Row, Col } from \"antd\";\nimport { withTranslation } from \"react-i18next\";\nimport { SvgIcon } from \"../../../common/SvgIcon\";\nimport { Button } from \"../../../common/Button\";\nimport { ContentBlockProps } from \"../types\";\nimport { Fade } from \"react-awesome-reveal\";\nimport {\n  RightBlockContainer,\n  Content,\n  ContentWrapper,\n  ButtonWrapper,\n} from \"./styles\";\n\nconst RightBlock = ({\n  title,\n  content,\n  button,\n  icon,\n  t,\n  imgId,\n  width,\n  height,\n  rowClass,\n  id,\n}: ContentBlockProps) => {\n  const scrollTo = (id: string) => {\n    const element = document.getElementById(id) as HTMLDivElement;\n    element.scrollIntoView({\n      behavior: \"smooth\",\n    });\n  };\n  return (\n    <RightBlockContainer id={id} >\n      <Fade direction=\"right\">\n        <Row justify=\"space-between\" align=\"middle\" className={rowClass}>\n          <Col lg={11} md={11} sm={11} xs={24}>\n            <ContentWrapper>\n              <h6>{t(title)}</h6>\n              <Content>{t(content)}</Content>\n              <ButtonWrapper>\n                {typeof button === \"object\" &&\n                  button.map((item: any, id: number) => {\n                    return (\n                      <Button\n                      className=\"\"\n                        key={id}\n                        color={item.color}\n                        fixedWidth={true}\n                        onClick={() => scrollTo(\"services\")}\n                      >\n                        {t(item.title)}\n                      </Button>\n                    );\n                  })}\n              </ButtonWrapper>\n            </ContentWrapper>\n          </Col>\n         \n          {icon === ''  ?   '' : \n           <Col lg={11} md={11} sm={12} xs={24}>\n            <SvgIcon  className=\"\" imgId={imgId} src={icon} width={width} height={height} />\n                </Col>\n          }\n      \n        </Row>\n      </Fade>\n    </RightBlockContainer>\n  );\n};\n\nexport default withTranslation()(RightBlock);\n","import LeftContentBlock from \"./LeftContentBlock\";\nimport RightContentBlock from \"./RightContentBlock\";\nimport { ContentBlockProps } from \"./types\";\n\nconst ContentBlock = (props: ContentBlockProps) => {\n  if (props.type === \"left\") return <LeftContentBlock {...props} />;\n  if (props.type === \"right\") return <RightContentBlock {...props} />;\n  return null;\n};\n\nexport default ContentBlock;\n"],"names":["StyledButton","styled","p","color","Button","_ref","fixedWidth","children","onClick","className","_jsx","LeftContentSection","Content","ContentWrapper","ServiceWrapper","MinTitle","MinPara","withTranslation","icon","title","content","section","t","width","height","imgId","rowClass","id","Fade","direction","_jsxs","Row","justify","align","Col","lg","md","sm","xs","SvgIcon","src","map","item","span","RightBlockContainer","ButtonWrapper","button","document","getElementById","scrollIntoView","behavior","scrollTo","props","type","LeftContentBlock","RightContentBlock"],"sourceRoot":""}